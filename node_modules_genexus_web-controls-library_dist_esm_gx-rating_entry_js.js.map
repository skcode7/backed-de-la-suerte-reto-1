{"version":3,"file":"node_modules_genexus_web-controls-library_dist_esm_gx-rating_entry_js.js","mappings":"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","sources":["./node_modules/@genexus/web-controls-library/dist/esm/gx-rating.entry.js"],"sourcesContent":["import { r as registerInstance, c as createEvent, h, g as getElement } from './index-10623738.js';\n\nconst ratingCss = \".gx-line-clamp{display:-webkit-box;-webkit-box-orient:vertical;-webkit-line-clamp:var(--max-lines);overflow:hidden}.line-measuring{visibility:hidden;position:absolute}gx-rating{display:block;--active-stars-color:#e4ac13;--active-stars-shadow-color:var(--active-stars-color);--inactive-stars-color:rgba(80, 80, 80, 0.6);--inactive-stars-hover-color:rgba(80, 80, 80, 0.4);--star-width:2em;--star-heigth:auto;--star-separation:2px}gx-rating[hidden]{display:none !important}gx-rating[hidden][invisible-mode=keep-space]{display:block !important;visibility:hidden}gx-rating div.rating:hover svg:nth-child(n) polygon{fill:var(--active-stars-color)}gx-rating div.rating:hover svg:nth-child(n):hover~svg polygon{fill:var(--inactive-stars-hover-color)}gx-rating div.rating svg{height:var(--star-heigth);width:var(--star-width);padding:0px var(--star-separation);cursor:pointer}gx-rating div.rating svg polygon{fill:var(--inactive-stars-color);-webkit-transition:0.4s ease;transition:0.4s ease}gx-rating input{display:none}gx-rating div.rating{height:-webkit-max-content;height:-moz-max-content;height:max-content;width:-webkit-max-content;width:-moz-max-content;width:max-content;display:-ms-flexbox;display:flex;-ms-flex-direction:row;flex-direction:row;-ms-flex-pack:justify;justify-content:space-between;-ms-flex-align:center;align-items:center;-ms-flex-wrap:wrap;flex-wrap:wrap}gx-rating div.rating[data-score=\\\"1\\\"] svg{-webkit-filter:drop-shadow(0 0 2px var(--active-stars-shadow-color));filter:drop-shadow(0 0 2px var(--active-stars-shadow-color))}gx-rating div.rating[data-score=\\\"1\\\"] svg polygon{fill:var(--active-stars-color)}gx-rating div.rating[data-score=\\\"1\\\"] svg:nth-child(1)~svg{-webkit-filter:none;filter:none}gx-rating div.rating[data-score=\\\"1\\\"] svg:nth-child(1)~svg polygon{fill:var(--inactive-stars-color)}gx-rating div.rating[data-score=\\\"1\\\"]:hover svg~svg polygon{fill:var(--active-stars-color)}gx-rating div.rating[data-score=\\\"1\\\"]:hover svg:hover~svg polygon{fill:var(--inactive-stars-hover-color)}gx-rating div.rating[data-score=\\\"2\\\"] svg{-webkit-filter:drop-shadow(0 0 2px var(--active-stars-shadow-color));filter:drop-shadow(0 0 2px var(--active-stars-shadow-color))}gx-rating div.rating[data-score=\\\"2\\\"] svg polygon{fill:var(--active-stars-color)}gx-rating div.rating[data-score=\\\"2\\\"] svg:nth-child(2)~svg{-webkit-filter:none;filter:none}gx-rating div.rating[data-score=\\\"2\\\"] svg:nth-child(2)~svg polygon{fill:var(--inactive-stars-color)}gx-rating div.rating[data-score=\\\"2\\\"]:hover svg~svg polygon{fill:var(--active-stars-color)}gx-rating div.rating[data-score=\\\"2\\\"]:hover svg:hover~svg polygon{fill:var(--inactive-stars-hover-color)}gx-rating div.rating[data-score=\\\"3\\\"] svg{-webkit-filter:drop-shadow(0 0 2px var(--active-stars-shadow-color));filter:drop-shadow(0 0 2px var(--active-stars-shadow-color))}gx-rating div.rating[data-score=\\\"3\\\"] svg polygon{fill:var(--active-stars-color)}gx-rating div.rating[data-score=\\\"3\\\"] svg:nth-child(3)~svg{-webkit-filter:none;filter:none}gx-rating div.rating[data-score=\\\"3\\\"] svg:nth-child(3)~svg polygon{fill:var(--inactive-stars-color)}gx-rating div.rating[data-score=\\\"3\\\"]:hover svg~svg polygon{fill:var(--active-stars-color)}gx-rating div.rating[data-score=\\\"3\\\"]:hover svg:hover~svg polygon{fill:var(--inactive-stars-hover-color)}gx-rating div.rating[data-score=\\\"4\\\"] svg{-webkit-filter:drop-shadow(0 0 2px var(--active-stars-shadow-color));filter:drop-shadow(0 0 2px var(--active-stars-shadow-color))}gx-rating div.rating[data-score=\\\"4\\\"] svg polygon{fill:var(--active-stars-color)}gx-rating div.rating[data-score=\\\"4\\\"] svg:nth-child(4)~svg{-webkit-filter:none;filter:none}gx-rating div.rating[data-score=\\\"4\\\"] svg:nth-child(4)~svg polygon{fill:var(--inactive-stars-color)}gx-rating div.rating[data-score=\\\"4\\\"]:hover svg~svg polygon{fill:var(--active-stars-color)}gx-rating div.rating[data-score=\\\"4\\\"]:hover svg:hover~svg polygon{fill:var(--inactive-stars-hover-color)}gx-rating div.rating[data-score=\\\"5\\\"] svg{-webkit-filter:drop-shadow(0 0 2px var(--active-stars-shadow-color));filter:drop-shadow(0 0 2px var(--active-stars-shadow-color))}gx-rating div.rating[data-score=\\\"5\\\"] svg polygon{fill:var(--active-stars-color)}gx-rating div.rating[data-score=\\\"5\\\"] svg:nth-child(5)~svg{-webkit-filter:none;filter:none}gx-rating div.rating[data-score=\\\"5\\\"] svg:nth-child(5)~svg polygon{fill:var(--inactive-stars-color)}gx-rating div.rating[data-score=\\\"5\\\"]:hover svg~svg polygon{fill:var(--active-stars-color)}gx-rating div.rating[data-score=\\\"5\\\"]:hover svg:hover~svg polygon{fill:var(--inactive-stars-hover-color)}gx-rating div.score{height:-webkit-max-content;height:-moz-max-content;height:max-content;width:-webkit-max-content;width:-moz-max-content;width:max-content;display:-ms-flexbox;display:flex;-ms-flex-direction:row;flex-direction:row;-ms-flex-pack:justify;justify-content:space-between;-ms-flex-align:center;align-items:center;-ms-flex-wrap:wrap;flex-wrap:wrap}gx-rating div.score svg{height:auto;width:2em;padding:0px var(--star-separation)}gx-rating div.score svg polygon{fill:var(--inactive-stars-color);-webkit-transition:0.3s ease;transition:0.3s ease}gx-rating div.score svg.active{-webkit-filter:drop-shadow(0 0 2px var(--active-stars-shadow-color));filter:drop-shadow(0 0 2px var(--active-stars-shadow-color))}gx-rating div.score svg.active polygon{fill:var(--active-stars-color)}\";\n\nlet autoInputRangeId = 0;\nconst Rating = class {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n        this.input = createEvent(this, \"input\", 7);\n        this.svgViewport = {\n            viewBox: \"0 0 100 100\"\n        };\n        /**\n         * This attribute allows you specify if the element is disabled.\n         * If disabled, it will not trigger any user interaction related event\n         * (for example, click event).\n         */\n        this.disabled = false;\n        /**\n         * This attribute lets you specify how this element will behave when hidden.\n         *\n         * | Value        | Details                                                                     |\n         * | ------------ | --------------------------------------------------------------------------- |\n         * | `keep-space` | The element remains in the document flow, and it does occupy space.         |\n         * | `collapse`   | The element is removed form the document flow, and it doesn't occupy space. |\n         */\n        this.invisibleMode = \"collapse\";\n        /**\n         * This attribute indicates that the user cannot modify the value of the control.\n         * Same as [readonly](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#attr-readonly)\n         * attribute for `input` elements.\n         * _Disable by default_\n         */\n        this.readonly = false;\n        /**\n         * The current value displayed by the component.\n         *\n         */\n        this.value = 0;\n        this.handleClick = this.handleClick.bind(this);\n    }\n    handleClick(event) {\n        const element = event.target;\n        const targetParent = element.parentElement;\n        const score = element.nodeName === \"polygon\"\n            ? Array.from(targetParent.parentElement.children).indexOf(targetParent) + 1\n            : Array.from(targetParent.children).indexOf(element) + 1;\n        this.value = score;\n        this.input.emit(this);\n    }\n    /**\n     * Returns the id of the inner `input` element (if set).\n     */\n    async getNativeInputId() {\n        return this.element.querySelector(\"input\").id;\n    }\n    renderStarsRating() {\n        const stars = [];\n        for (let i = 0; i < 5; i++) {\n            stars.push(h(\"svg\", Object.assign({ class: \"rating\" }, this.svgViewport, { onClick: this.handleClick }), this.renderStarShape()));\n        }\n        return stars;\n    }\n    renderStarsScore() {\n        const stars = [];\n        let percent;\n        let starsScore;\n        if (this.maxValue - this.value >= 0) {\n            percent = (this.value * 100) / this.maxValue;\n            starsScore = Math.round((percent * 5) / 100);\n        }\n        else {\n            console.error(\"'value' cannot be greater than 'max-value'\");\n        }\n        for (let i = 0; i < 5; i++) {\n            stars.push(h(\"svg\", Object.assign({ class: {\n                    active: i < starsScore,\n                    score: true\n                } }, this.svgViewport), this.renderStarShape()));\n        }\n        return stars;\n    }\n    render() {\n        const valuesDifference = this.maxValue - this.value;\n        if (!this.inputId) {\n            this.element.id\n                ? (this.inputId = `${this.element.id}_inputRange`)\n                : (this.inputId = `gx-inputRange-auto-id-${autoInputRangeId++}`);\n        }\n        if ((valuesDifference >= 0 && this.readonly) || !this.readonly) {\n            return (h(\"div\", null, h(\"input\", { id: this.inputId, type: \"range\", min: \"0\", max: this.readonly ? this.maxValue : 5, step: \"1\", value: this.value }), h(\"div\", { class: {\n                    rating: !this.readonly,\n                    score: this.readonly\n                }, \"data-score\": this.value !== 0 ? this.value : undefined }, this.readonly ? this.renderStarsScore() : this.renderStarsRating())));\n        }\n        else {\n            if (this.maxValue !== 0) {\n                console.error(\"'value' cannot be higher than 'max-value'.\", this.element);\n            }\n            else {\n                console.error(\"'max-value' has not a value set.\", this.element);\n            }\n        }\n    }\n    renderStarShape() {\n        return h(\"polygon\", { points: \"50,0 15,95 100,35 0,35 85,95\" });\n    }\n    get element() { return getElement(this); }\n};\nRating.style = ratingCss;\n\nexport { Rating as gx_rating };\n"],"names":["r","registerInstance","c","createEvent","h","g","getElement","ratingCss","autoInputRangeId","Rating","constructor","hostRef","input","svgViewport","viewBox","disabled","invisibleMode","readonly","value","handleClick","bind","event","element","target","targetParent","parentElement","score","nodeName","Array","from","children","indexOf","emit","getNativeInputId","querySelector","id","renderStarsRating","stars","i","push","Object","assign","class","onClick","renderStarShape","renderStarsScore","percent","starsScore","maxValue","Math","round","console","error","active","render","valuesDifference","inputId","type","min","max","step","rating","undefined","points","style","gx_rating"],"sourceRoot":"webpack:///"}