{"version":3,"file":"node_modules_genexus_web-controls-library_dist_esm_gx-checkbox_entry_js.js","mappings":"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","sources":["./node_modules/@genexus/web-controls-library/dist/esm/gx-checkbox.entry.js"],"sourcesContent":["import { h, r as registerInstance, c as createEvent, H as Host, g as getElement } from './index-10623738.js';\n\nlet autoCheckBoxId = 0;\nclass CheckBoxRender {\n    constructor(component, handlers) {\n        this.component = component;\n        this.handleChange = handlers.handleChange;\n    }\n    getNativeInputId() {\n        return this.getNativeInput().id;\n    }\n    getNativeInput() {\n        return this.component.element.querySelector(\"[data-native-element]\");\n    }\n    getCssClasses() {\n        const checkbox = this.component;\n        const classList = [];\n        classList.push(\"control-input\");\n        if (checkbox.cssClass) {\n            classList.push(checkbox.cssClass);\n        }\n        if (!checkbox.caption) {\n            classList.push(\"position-static\");\n        }\n        return classList.join(\" \");\n    }\n    getValueFromEvent(event) {\n        return event.target && event.target.checked;\n    }\n    /**\n     * Update the native input element when the value changes\n     */\n    checkedChanged() {\n        const inputEl = this.getNativeInput();\n        if (inputEl && inputEl.checked !== this.component.checked) {\n            inputEl.checked = this.component.checked;\n        }\n    }\n    render() {\n        const checkbox = this.component;\n        if (!this.inputId) {\n            this.inputId = checkbox.element.id\n                ? `${checkbox.element.id}__checkbox`\n                : `gx-checkbox-auto-id-${autoCheckBoxId++}`;\n        }\n        const attris = {\n            \"aria-disabled\": checkbox.disabled ? \"true\" : undefined,\n            class: this.getCssClasses(),\n            \"data-native-element\": \"\",\n            disabled: checkbox.disabled || checkbox.readonly,\n            id: this.inputId,\n            onInput: this.handleChange\n        };\n        const forAttris = {\n            for: attris.id\n        };\n        return (h(\"div\", { \"data-readonly\": \"\" },\n            h(\"div\", { class: \"container\", \"data-part\": !checkbox.disabled && !checkbox.readonly ? \"option-control\" : \"\" },\n                h(\"div\", { class: \"option-container\" },\n                    h(\"input\", Object.assign({}, attris, { type: \"checkbox\", checked: checkbox.checked, value: checkbox.checked\n                            ? checkbox.checkedValue\n                            : checkbox.unCheckedValue })),\n                    h(\"label\", { class: \"custom-option\" }),\n                    h(\"svg\", { viewBox: \"-4 -4 16 16\" },\n                        h(\"path\", { d: \"M6.564.75l-3.59 3.612-1.538-1.55L0 4.26 2.974 7.25 8 2.193z\" }))),\n                h(\"label\", Object.assign({ class: \"custom-label\" }, forAttris, { \"aria-hidden\": (!checkbox.caption).toString() }), checkbox.caption))));\n    }\n}\n\nconst checkboxCss = \".gx-line-clamp{display:-webkit-box;-webkit-box-orient:vertical;-webkit-line-clamp:var(--max-lines);overflow:hidden}.line-measuring{visibility:hidden;position:absolute}gx-checkbox{display:-ms-flexbox;display:flex;--option-checked-color:#007bff;--option-border:1px solid #adb5bd;--option-border-radius:100%;--option-highlight-border-color:#007bff40;--option-border-radius:25%;margin-top:var(--margin-top, 0);margin-right:var(--margin-right, 0);margin-bottom:var(--margin-bottom, 0);margin-left:var(--margin-left, 0);-ms-flex:1;flex:1}gx-checkbox[hidden]{display:none !important}gx-checkbox[hidden][invisible-mode=keep-space]{display:-ms-flexbox !important;display:flex !important;visibility:hidden}gx-checkbox .container{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;-ms-flex-pack:start;justify-content:flex-start;-ms-flex:1;flex:1;overflow:hidden}gx-checkbox .container[data-part=option-control]:active{padding:0;background-color:unset;border:unset}gx-checkbox .container .option-container{display:-ms-flexbox;display:flex;padding:0.15rem 0.35rem 0.15rem 0.35rem}gx-checkbox .container .option-container .control-input{width:1rem;height:1rem;opacity:0}gx-checkbox .container .option-container .control-input:checked~.custom-option{border-color:var(--option-checked-color);background-color:var(--option-checked-color)}gx-checkbox .container .option-container .control-input:checked~svg{opacity:100}gx-checkbox .container .option-container .control-input:active:not(:disabled):not(:checked)~.custom-option{border-color:var(--option-highlight-border-color);background-color:var(--option-highlight-border-color)}gx-checkbox .container .option-container .control-input:active:not(:disabled)~.custom-option{-webkit-filter:brightness(85%);filter:brightness(85%)}gx-checkbox .container .option-container .control-input:focus~.custom-option{-webkit-box-shadow:0 0 0 0.15rem var(--option-highlight-border-color);box-shadow:0 0 0 0.15rem var(--option-highlight-border-color)}gx-checkbox .container .option-container .control-input:disabled~.custom-option{background-color:#a5a8aac0}gx-checkbox .container .option-container .custom-option{position:absolute;width:1rem;height:1rem;pointer-events:none;border:var(--option-border);border-radius:var(--option-border-radius);content:\\\"\\\";-webkit-transition:0.15s ease-in-out;transition:0.15s ease-in-out}gx-checkbox .container .option-container svg{position:absolute;width:1rem;height:1rem;pointer-events:none;z-index:1;opacity:0;fill:white;fill-opacity:0.75;-webkit-transition:0.15s ease-in-out;transition:0.15s ease-in-out}gx-checkbox .container .custom-label{margin:0;-webkit-transition:0.15s ease-in-out;transition:0.15s ease-in-out}gx-checkbox>[data-readonly]{display:-ms-flexbox;display:flex;-ms-flex:1;flex:1}\";\n\nconst CheckBox = class {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n        this.input = createEvent(this, \"input\", 7);\n        /**\n         * This attribute lets you specify how this element will behave when hidden.\n         *\n         * | Value        | Details                                                                     |\n         * | ------------ | --------------------------------------------------------------------------- |\n         * | `keep-space` | The element remains in the document flow, and it does occupy space.         |\n         * | `collapse`   | The element is removed form the document flow, and it doesn't occupy space. |\n         */\n        this.invisibleMode = \"collapse\";\n        /**\n         * This attribute lets you specify if the element is disabled.\n         * If disabled, it will not fire any user interaction related event\n         * (for example, click event).\n         */\n        this.disabled = false;\n        /**\n         * This attribute indicates that the user cannot modify the value of the control.\n         * Same as [readonly](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#attr-readonly)\n         * attribute for `input` elements.\n         */\n        this.readonly = false;\n        this.renderer = new CheckBoxRender(this, {\n            handleChange: this.handleChange.bind(this)\n        });\n    }\n    /**\n     * Returns the id of the inner `input` element (if set).\n     */\n    async getNativeInputId() {\n        return this.renderer.getNativeInputId();\n    }\n    checkedChanged() {\n        this.renderer.checkedChanged();\n    }\n    componentWillLoad() {\n        this.checked = this.value === this.checkedValue;\n    }\n    valueChanged() {\n        this.checked = this.value === this.checkedValue;\n    }\n    handleChange(event) {\n        event.stopPropagation();\n        this.checked = this.renderer.getValueFromEvent(event);\n        this.updateValue();\n        this.input.emit(event);\n    }\n    updateValue() {\n        this.value = this.checked ? this.checkedValue : this.unCheckedValue;\n    }\n    render() {\n        return h(Host, null, this.renderer.render());\n    }\n    get element() { return getElement(this); }\n    static get watchers() { return {\n        \"checked\": [\"checkedChanged\"],\n        \"value\": [\"valueChanged\"]\n    }; }\n};\nCheckBox.style = checkboxCss;\n\nexport { CheckBox as gx_checkbox };\n"],"names":["h","r","registerInstance","c","createEvent","H","Host","g","getElement","autoCheckBoxId","CheckBoxRender","constructor","component","handlers","handleChange","getNativeInputId","getNativeInput","id","element","querySelector","getCssClasses","checkbox","classList","push","cssClass","caption","join","getValueFromEvent","event","target","checked","checkedChanged","inputEl","render","inputId","attris","disabled","undefined","class","readonly","onInput","forAttris","for","Object","assign","type","value","checkedValue","unCheckedValue","viewBox","d","toString","checkboxCss","CheckBox","hostRef","input","invisibleMode","renderer","bind","componentWillLoad","valueChanged","stopPropagation","updateValue","emit","watchers","style","gx_checkbox"],"sourceRoot":"webpack:///"}