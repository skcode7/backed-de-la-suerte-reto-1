{"version":3,"file":"node_modules_genexus_web-controls-library_dist_esm_gx-select-option_entry_js.js","mappings":";;;;;;;;;;;;;;AAA6G;;AAE7G;AACA;AACA,QAAQ,qDAAgB;AACxB,sBAAsB,qDAAW;AACjC,wBAAwB,qDAAW;AACnC,yBAAyB,qDAAW;AACpC,+BAA+B,qDAAW;AAC1C,iCAAiC,qDAAW;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,cAAc;AAC/C;AACA;AACA;AACA;AACA,kCAAkC,cAAc;AAChD;AACA;AACA;AACA,2BAA2B,cAAc;AACzC;AACA;AACA,oCAAoC,cAAc;AAClD;AACA;AACA,sCAAsC,cAAc;AACpD;AACA;AACA,gBAAgB,qDAAC,CAAC,iDAAI,IAAI,qCAAqC,EAAE,qDAAC;AAClE;AACA,oBAAoB,OAAO,qDAAU;AACrC,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;;AAE4C","sources":["./node_modules/@genexus/web-controls-library/dist/esm/gx-select-option.entry.js"],"sourcesContent":["import { r as registerInstance, c as createEvent, h, H as Host, g as getElement } from './index-10623738.js';\n\nconst SelectOption = class {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n        this.change = createEvent(this, \"change\", 7);\n        this.gxSelect = createEvent(this, \"gxSelect\", 7);\n        this.gxDisable = createEvent(this, \"gxDisable\", 7);\n        this.gxSelectDidLoad = createEvent(this, \"gxSelectDidLoad\", 7);\n        this.gxSelectDidUnload = createEvent(this, \"gxSelectDidUnload\", 7);\n        /**\n         * Indicates that the control is selected by default.\n         */\n        this.selected = false;\n        /**\n         * This attribute lets you specify if the element is disabled.\n         * If disabled, it will not fire any user interaction related event\n         * (for example, click event).\n         */\n        this.disabled = false;\n    }\n    selectedChanged(isSelected) {\n        if (isSelected) {\n            this.gxSelect.emit({ select: this });\n        }\n    }\n    disabledChanged(isDisabled) {\n        if (isDisabled) {\n            this.gxDisable.emit({ select: this });\n        }\n    }\n    valueChanged() {\n        this.change.emit({ select: this });\n    }\n    componentDidLoad() {\n        this.gxSelectDidLoad.emit({ select: this });\n    }\n    componentDidUnload() {\n        this.gxSelectDidUnload.emit({ select: this });\n    }\n    render() {\n        return (h(Host, { \"aria-hidden\": \"true\", hidden: true }, h(\"slot\", null)));\n    }\n    get element() { return getElement(this); }\n    static get watchers() { return {\n        \"selected\": [\"selectedChanged\"],\n        \"disabled\": [\"disabledChanged\"],\n        \"value\": [\"valueChanged\"]\n    }; }\n};\n\nexport { SelectOption as gx_select_option };\n"],"names":[],"sourceRoot":"webpack:///"}