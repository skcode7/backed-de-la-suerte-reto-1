"use strict";
(self["webpackChunkgenexus_web_application"] = self["webpackChunkgenexus_web_application"] || []).push([["node_modules_genexus_web-controls-library_dist_esm_gx-video_entry_js"],{

/***/ 7685:
/*!*******************************************************************************!*\
  !*** ./node_modules/@genexus/web-controls-library/dist/esm/gx-video.entry.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "gx_video": () => (/* binding */ Video)
/* harmony export */ });
/* harmony import */ var _index_10623738_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./index-10623738.js */ 9689);


const videoCss = ".gx-line-clamp{display:-webkit-box;-webkit-box-orient:vertical;-webkit-line-clamp:var(--max-lines);overflow:hidden}.line-measuring{visibility:hidden;position:absolute}gx-video{--gx-video-height:100%;--gx-video-width:100%;display:-ms-flexbox;display:flex;width:100%}gx-video[hidden]{display:none !important}gx-video[hidden][invisible-mode=keep-space]{display:-ms-flexbox !important;display:flex !important;visibility:hidden}gx-video>div{height:var(--gx-video-height);width:var(--gx-video-width);display:-ms-flexbox;display:flex;-ms-flex:1;flex:1}gx-video>div iframe{-ms-flex:1;flex:1;border:none}";

const Video = class {
    constructor(hostRef) {
        (0,_index_10623738_js__WEBPACK_IMPORTED_MODULE_0__.r)(this, hostRef);
        this.gxClick = (0,_index_10623738_js__WEBPACK_IMPORTED_MODULE_0__.c)(this, "gxClick", 7);
        /**
         * This attribute lets you specify if the element is disabled.
         * If disabled, it will not fire any user interaction related event
         * (for example, click event).
         */
        this.disabled = false;
        /**
         * This attribute lets you specify how this element will behave when hidden.
         *
         * | Value        | Details                                                                     |
         * | ------------ | --------------------------------------------------------------------------- |
         * | `keep-space` | The element remains in the document flow, and it does occupy space.         |
         * | `collapse`   | The element is removed form the document flow, and it doesn't occupy space. |
         */
        this.invisibleMode = "collapse";
        this.handleClick = this.handleClick.bind(this);
    }
    handleClick(event) {
        this.gxClick.emit(event);
        event.preventDefault();
    }
    parseYoutubeSrc(src) {
        const domainIdArray = src.split("watch?v=");
        return `${domainIdArray[0]}embed/${domainIdArray[1]}`;
    }
    render() {
        const handleClick = !this.disabled ? this.handleClick : null;
        return ((0,_index_10623738_js__WEBPACK_IMPORTED_MODULE_0__.h)("div", { class: "gxVideoContainer", onClick: handleClick }, (0,_index_10623738_js__WEBPACK_IMPORTED_MODULE_0__.h)("iframe", { src: this.parseYoutubeSrc(this.src) })));
    }
    get element() { return (0,_index_10623738_js__WEBPACK_IMPORTED_MODULE_0__.g)(this); }
};
Video.style = videoCss;




/***/ })

}]);
//# sourceMappingURL=node_modules_genexus_web-controls-library_dist_esm_gx-video_entry_js.js.map