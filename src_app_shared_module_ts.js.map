{"version":3,"file":"src_app_shared_module_ts.js","mappings":"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","sources":["./src/app/EmojiJSON/emojijson.dt.ts","./src/app/GetEmoji/getemoji_level_detail.component.ts","./src/app/GetEmoji/getemoji_level_detail.component.html","./src/app/GetEmoji/getemoji_level_detail.service.ts","./src/app/gx/base/endpoint.connector.ts","./src/app/gx/base/gxsdt.dt.ts","./src/app/gx/ui/controls/safe-pipe/safe-pipe.component.ts","./src/app/gx/ui/model/ui-actionbar.ts","./src/app/gx/ui/model/ui-form.ts","./src/app/gx/ui/model/ui-textblock.ts","./src/app/shared-routing.module.ts","./src/app/shared.module.ts"],"sourcesContent":["import { GxCollectionData } from 'app/gx/base/gxcollection.dt';\r\n\r\nimport { UIListElementItem } from 'app/gx/ui/model/ui-list';\r\nimport { Type, Transform } from 'class-transformer';\r\n\r\nexport class EmojiJSONData extends GxCollectionData<EmojiJSON_EmojiJSONItemData> {\r\n}\r\nexport class EmojiJSON_EmojiJSONItemData {\r\n  emojiid: string;\r\n  emojihex: string;\r\n  emojidec: string;\r\n  emojihtml: string;\r\n\r\n\r\n  constructor() {\r\n    this.emojiid = \"\";\r\n    this.emojihex = \"\";\r\n    this.emojidec = \"\";\r\n    this.emojihtml = \"\";\r\n\r\n  }\r\n}\r\n\r\n ","import { Component, ChangeDetectionStrategy, ChangeDetectorRef, Input } from '@angular/core';\r\nimport { Routes, ActivatedRoute } from '@angular/router';\r\nimport { AppContainer } from 'app/gx/base/app-container';\r\nimport { CompositeNavigation } from 'app/gx/navigation/composite-navigation';\r\nimport { PanelComponent } from 'app/gx/base/panel.component';\r\nimport { BcPanelComponent} from 'app/gx/base/bc-panel.component';\r\nimport { GAMService} from \"app/gx/auth/gam.service\";\r\nimport { map } from 'rxjs/operators';\r\nimport { Observable } from 'rxjs';\r\nimport { AppBarService } from \"app/gx/base/app-bar.service\";\r\nimport { NavigationStyle } from \"app/gx/base/view-manager\";\r\nimport { Settings } from \"app/app.settings\";\r\n\r\nimport { GetEmoji_Level_DetailService , GetEmoji_Level_DetailData } from './getemoji_level_detail.service';\r\nimport { msg as GeneXus__SD__Interop_msg } from '@genexus/web-standard-functions/dist/lib-esm/misc/msg';\r\nimport { EmojiJSONData } from 'app/EmojiJSON/emojijson.dt';\r\nimport { UITextblockElement } from 'app/gx/ui/model/ui-textblock';\r\nimport { GxSdtData } from 'app/gx/base/gxsdt.dt';\r\nimport { EmojiJSON_EmojiJSONItemData } from 'app/EmojiJSON/emojijson.dt';\r\nimport { UIFormElement } from 'app/gx/ui/model/ui-form';\r\nimport { UIActionBarElement } from 'app/gx/ui/model/ui-actionbar';\r\n\r\n@Component({\r\n  selector: 'GetEmoji_Level_Detail',\r\n  templateUrl: './getemoji_level_detail.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  providers: [\r\n    GetEmoji_Level_DetailService,\r\n  ],\r\n  styles: [\":host { display: flex; flex: 1; }\"]\r\n})\r\nexport class GetEmoji_Level_DetailComponent extends PanelComponent {\r\n\r\n  G1: GetEmoji_Level_DetailData;\r\n  E2: EmojiJSONData;\r\n  uiModel: GetEmoji_Level_DetailUIModel;\r\n  uiActions: GetEmoji_Level_DetailUIActions;\r\n  @Input('mode') \r\n  Mode: string;\r\n\r\n\r\n  stateMembers = [\r\n    ['Mode',],\r\n    ['G1','E2','uiModel',] \r\n  ];\r\n\r\n  _routingPath = 'GetEmoji-Level_Detail';\r\n  views = [\r\n    {\r\n      name: \"ViewAny\",\r\n      type: \"any\",\r\n      os: \"All\",\r\n      minShortestBound: 0,\r\n      maxShortestBound: 0,\r\n      minLongestBound: 0,\r\n      maxLongestBound: 0,\r\n      navigationStyle: \"default\",\r\n      appBarInitFn: this.initAppBar_ViewAny.bind(this),\r\n      appBarBindFn: this.bindAppBar_ViewAny.bind(this),\r\n      appBarResetFn: this.resetAppBar_ViewAny.bind(this),\r\n      UIModelDefaults: this.getUIModelDefaults_ViewAny.bind(this)\r\n\r\n    }\r\n\r\n  ];\r\n\r\n\r\n\r\n  constructor(\r\n      private panelService: GetEmoji_Level_DetailService,\r\n      protected gam: GAMService,\r\n      public app:AppContainer,\r\n      protected nvg:CompositeNavigation,\r\n      protected activatedRoute: ActivatedRoute,\r\n      private appBarService: AppBarService,\r\n      protected cdr: ChangeDetectorRef\r\n  ) {\r\n    super( app, nvg, activatedRoute, cdr);\r\n    this.uiActions = new GetEmoji_Level_DetailUIActions(this);\r\n\r\n    this.canControlAppBar = activatedRoute.component === GetEmoji_Level_DetailComponent;\r\n    this.showAsCard = !this.canControlAppBar;\r\n    this.initState(null);\r\n  }\r\n\r\n  initState(params) {\r\n    this.G1 = new GetEmoji_Level_DetailData();\r\n    this.E2 = new EmojiJSONData();\r\n    this.uiModel = new GetEmoji_Level_DetailUIModel(this);\r\n    this.Mode = !params ? this.Mode : \"\";\r\n\r\n    this.loadParams(params);\r\n\r\n    this.viewManager.update(this.Mode);\r\n    this.updateUIModel( this.uiModel, this.viewManager.getUIModelDefaults());\r\n\r\n    this.panelService.start();\r\n  }\r\n\r\n  bindAppBar_ViewAny(navigationStyle: NavigationStyle) {\r\n    this.uiModel.ctrlApplicationbar.navigationStyle = navigationStyle;\r\n    this.uiModel.ctrlApplicationbar.showBackButton = this.nvg.canGoBack()\r\n    this.uiModel.ctrlApplicationbar.actionItems = [];\r\n    this.uiModel.ctrlApplicationbar.onBackButtonClick = () => this.callAction(this.__Cancel);\r\n    this.appBarService.bind( this.showAsCard, this.uiModel.ctrlApplicationbar);\r\n  }\r\n\r\n  initAppBar_ViewAny() {\r\n    this.updateUIModel( this.uiModel, this.viewManager.getUIModelDefaults());\r\n    this.cdr.markForCheck();\r\n  }\r\n\r\n  resetAppBar_ViewAny() {\r\n  }\r\n   \r\n\r\n  getUIModelDefaults_ViewAny( containerName?: string) {\r\n    if (!containerName) {\r\n      return [\r\n        ['ctrlApplicationbar', 'class', 'ApplicationBars'],\r\n        ['ctrlApplicationbar', 'visible', true],\r\n        ['ctrlApplicationbar', 'caption', this.app.translate('Get Emoji')],\r\n        ['ctrlApplicationbar', 'showBackButton', 'False'],\r\n        ['ctrlT_emoji', 'caption', this.app.translate('Text Block')]\r\n      ];\r\n    }\r\n\r\n    return [];\r\n  }\r\n\r\n\r\n  // Actions\r\n  _GET = async (): Promise<any> => {\r\n    const __aSt = this.startAction();\r\n    try {\r\n      const data = await this.panelService.GetById(this.G1.Emojiid);\r\n      this.E2 = data.EmojiJSON;\r\n\r\n      if((this.E2.Count == 0)) {\r\n        await GeneXus__SD__Interop_msg( this.app.translate('NO EXITE EL EMOJI'));\r\n      }\r\n      else {\r\n        this.uiModel.ctrlT_emoji.caption = GxSdtData.item(this.E2, 1).emojihtml;\r\n      }\r\n\r\n    } catch (e) {\r\n      this.processCompositeError(e);\r\n    } finally {\r\n      this.cdr.markForCheck();\r\n      this.endAction(__aSt);\r\n    }\r\n  } \r\n\r\n\r\n\r\n  // Load and refresh\r\n  loadParams(params) {\r\n    if (params) {\r\n      this.Mode = this.nvg.getParam('mode', params, 1) || \"\";\r\n    }\r\n  }\r\n\r\n  async loadPanel() {\r\n    this.G1 = await this.panelService.getGetEmoji_Level_Detail( );\r\n    this.updateGxdynprops(this.G1, this.uiModel);\r\n\r\n\r\n  }\r\n\r\n  async Refresh(type?: string) {\r\n    this.G1 = await this.panelService.getGetEmoji_Level_Detail( );\r\n    this.updateGxdynprops(this.G1, this.uiModel);\r\n\r\n\r\n    this.cdr.markForCheck();\r\n  }\r\n\r\n\r\n\r\n}\r\n\r\nclass GetEmoji_Level_DetailUIModel {\r\n\r\n  private _host: GetEmoji_Level_DetailComponent;\r\n\r\n  constructor( host: GetEmoji_Level_DetailComponent) {\r\n    this._host = host;\r\n    this.ctrlForm.applicationBar = this.ctrlApplicationbar;\r\n\r\n  }\r\n\r\n  ctrlForm = new UIFormElement();\r\n  ctrlApplicationbar = new UIActionBarElement();\r\n  ctrlT_emoji = new UITextblockElement();\r\n\r\n}\r\n\r\n   \r\n\r\nclass GetEmoji_Level_DetailUIActions {\r\n\r\n  private _host: GetEmoji_Level_DetailComponent;\r\n\r\n  constructor( host: GetEmoji_Level_DetailComponent) {\r\n    this._host = host;\r\n  }\r\n\r\n}\r\n ","  <section class=\"main-content\">\r\n    <gx-card\r\n      #ViewAny\r\n      [showHeader]='showAsCard'\r\n      [showBorder]='showAsCard'\r\n      [showFooter]='showAsCard'\r\n      *ngIf=\"viewManager.view === 'ViewAny'\"\r\n      class=\"ApplicationBars\"\r\n    >\r\n      <div slot=\"body\" *ngIf=\"viewManager.view === 'ViewAny'\">\r\n          <gx-table\r\n            #ctrlMaintable\r\n            [ngClass]=\"'TableDetail' | classSplit\"\r\n            areas-template=\"'cell00 ' 'cell10 ' 'cell20 ' \"\r\n            columns-template=\"1fr\"\r\n            rows-template=\"minmax(min-content, 64px) var(--gx-table-row-autogrow) minmax(min-content, 64px)\"\r\n            invisible-mode=\"keep-space\"\r\n          >\r\n            <gx-table-cell \r\n              area=\"cell00\"\r\n               overflow-mode=\"clip\"\r\n              align=\"center\" valign=\"top\"\r\n              max-height=\"64px\" min-height=\"64px\"\r\n            >\r\n              <gx-textblock \r\n                #ctrlTextblock1 \r\n                [ngClass]=\"'TextBlock' | classSplit\"\r\n                invisible-mode=\"keep-space\"\r\n                line-clamp\r\n              >{{'Digita el nombre de un Emoji, si tienes suerte aparecerá!' | translate}}</gx-textblock>\r\n            </gx-table-cell>\r\n\r\n\r\n            <gx-table-cell \r\n              area=\"cell10\"\r\n               overflow-mode=\"clip\"\r\n              align=\"left\" valign=\"top\"\r\n               min-height=\"108px\"\r\n            >\r\n                <gx-table\r\n                  #ctrlTable1\r\n                  [ngClass]=\"'Table' | classSplit\"\r\n                  areas-template=\"'cell00 ' 'cell10 ' \"\r\n                  columns-template=\"1fr\"\r\n                  rows-template=\"minmax(min-content, 44px) minmax(min-content, 64px)\"\r\n                   style=\"min-height: 108px; \"\r\n                  invisible-mode=\"keep-space\"\r\n                >\r\n                  <gx-table-cell \r\n                    area=\"cell00\"\r\n                     overflow-mode=\"clip\"\r\n                    align=\"center\" valign=\"top\"\r\n                    max-height=\"44px\" min-height=\"44px\"\r\n                  >\r\n                    <gx-form-field\r\n                      [ngClass]=\"'Attribute' | classSplit\"\r\n                      invisible-mode=\"keep-space\"\r\n                      labelCaption=\"\"\r\n                      label-position=\"none\"\r\n                      >\r\n                        <gx-edit\r\n                          #ctrlEmojiid\r\n                          name=\"ctrlEmojiid\"\r\n                          type=\"text\"\r\n                          placeholder=\"ID\"\r\n\r\n                          [ngModel]=\"G1.Emojiid\"\r\n                          (ngModelChange)=\"G1.Emojiid = $event;   \"\r\n                          ngDefaultControl\r\n                          [attr.readonly]=\"(false || (Mode == 'DLT'))\"\r\n                          area=\"field\"\r\n                        >\r\n                        </gx-edit>\r\n\r\n                    </gx-form-field>\r\n                  </gx-table-cell>\r\n\r\n\r\n                  <gx-table-cell \r\n                    area=\"cell10\"\r\n                     overflow-mode=\"clip\"\r\n                    align=\"center\" valign=\"top\"\r\n                    max-height=\"64px\" min-height=\"64px\"\r\n                  >\r\n                    <gx-button\r\n                      #ctrlGet\r\n                      name=\"ctrlGet\"\r\n                      (click)=\" callAction( this._GET); $event.stopPropagation()\"\r\n                      [ngClass]=\"'ConfirmButton' | classSplit\"\r\n                      [disabled]=\"_actionsEnabled | default:true | not\"\r\n                      invisible-mode=\"keep-space\"\r\n                      image-position=\"after\"\r\n                    >\r\n                      {{'GET' | translate}}\r\n                    </gx-button>\r\n                  </gx-table-cell>\r\n\r\n\r\n                </gx-table>\r\n\r\n            </gx-table-cell>\r\n\r\n\r\n            <gx-table-cell \r\n              area=\"cell20\"\r\n               overflow-mode=\"clip\"\r\n              align=\"center\" valign=\"top\"\r\n              max-height=\"64px\" min-height=\"64px\"\r\n            >\r\n              <gx-textblock\r\n                #ctrlT_emoji\r\n                [ngClass]=\"'TextBlock' | classSplit\"\r\n                [inner]=\"uiModel.ctrlT_emoji?.caption | default:'Text Block'\"\r\n                invisible-mode=\"keep-space\"\r\n                format=\"HTML\">\r\n              </gx-textblock>\r\n            </gx-table-cell>\r\n\r\n\r\n          </gx-table>\r\n\r\n      </div>\r\n    </gx-card>\r\n  </section>\r\n ","import { Injectable } from '@angular/core';\r\nimport { HttpHeaders, HttpClient } from '@angular/common/http';\r\nimport { Router } from \"@angular/router\";\r\n\r\nimport { Settings } from 'app/app.settings';\r\nimport { AppContainer } from 'app/gx/base/app-container';\r\nimport { PanelService } from \"app/gx/base/panel.service\";\r\nimport { EndpointConnector } from \"app/gx/base/endpoint.connector\";\r\nimport { GAMService } from \"app/gx/auth/gam.service\";\r\nimport { Type, Transform } from 'class-transformer';\r\nimport { Observable, throwError } from \"rxjs\";\r\nimport { catchError } from 'rxjs/operators';\r\n\r\n\r\nimport { msg as GeneXus__SD__Interop_msg } from '@genexus/web-standard-functions/dist/lib-esm/misc/msg';\r\nimport { EmojiJSONData } from 'app/EmojiJSON/emojijson.dt';\r\nimport { UITextblockElement } from 'app/gx/ui/model/ui-textblock';\r\nimport { GxSdtData } from 'app/gx/base/gxsdt.dt';\r\nimport { EmojiJSON_EmojiJSONItemData } from 'app/EmojiJSON/emojijson.dt';\r\nimport { UIFormElement } from 'app/gx/ui/model/ui-form';\r\nimport { UIActionBarElement } from 'app/gx/ui/model/ui-actionbar';\r\n\r\n@Injectable()\r\nexport class GetEmoji_Level_DetailService extends PanelService {\r\n\r\n    constructor(private http: HttpClient, private _router:Router, private _loginService: GAMService, private _app: AppContainer) {\r\n      super(_router, _loginService, _app);\r\n    }\r\n\r\n  // Data services\r\n  async getGetEmoji_Level_Detail( ): Promise<GetEmoji_Level_DetailData> {\r\n        try {\r\n          return await EndpointConnector.getDataForType<GetEmoji_Level_DetailData>(this.http, Settings.SERVICE_API_ENDPOINT + \"GetEmoji_Level_Detail\"+ \"?gxid=\"+this.getGxid(0), GetEmoji_Level_DetailData);\r\n        }\r\n        catch (error) {\r\n          return this.handleError(error);\r\n        }\r\n\r\n  }\r\n\r\n\r\n  // Other services\r\n  GetById = async (EmojiId?:any) : Promise<any> => {\r\n      const body = {\r\n        EmojiId: EmojiId\r\n      };\r\n      try {\r\n        const response = await EndpointConnector.postData(this.http, Settings.SERVICE_API_ENDPOINT + \"GetById\", body , { 'EmojiJSON':{isCollection:false, type:EmojiJSONData} });\r\n        return response;\r\n      }\r\n      catch(error)\r\n      {\r\n        return this.handleError(error);\r\n      }\r\n  };\r\n\r\n\r\n\r\n}\r\n\r\n// Data structures\r\nexport class GetEmoji_Level_DetailData {\r\n  Emojiid: string;\r\n  Gxdynprop: string;\r\n\r\n\r\n  constructor() {\r\n    this.Emojiid = \"\";\r\n    this.Gxdynprop = \"\";\r\n\r\n  }\r\n}\r\n\r\n\r\n\r\n ","import { HttpClient, HttpHeaders } from \"@angular/common/http\";\r\nimport { Settings } from \"../../app.settings\";\r\nimport { GAMService } from \"app/gx/auth/gam.service\";\r\nimport { GxCollectionData } from \"./gxcollection.dt\";\r\nimport { GeneXusClientClientInformation } from \"@genexus/web-standard-functions/dist/lib-esm/gxcore/client/client-information\";\r\nimport { TypeConversions } from \"./type-conversion\";\r\nimport { Observable } from \"rxjs\";\r\nimport { tap, map, catchError } from \"rxjs/operators\";\r\n\r\nexport class EndpointConnector {\r\n\r\n  public static postData(http: HttpClient, endpoint: string, data: any, typeSpecs: any = {}): Promise<any> {\r\n    return new Promise<any>((resolve, reject) => {\r\n      http.post(endpoint, this.getJsonPayload(data), { headers: this.getHeaders(), withCredentials: true }).toPromise().then(\r\n        response => {\r\n          for (const tName in typeSpecs) {\r\n            if (Array.isArray(response[tName])) {\r\n              response[tName] = TypeConversions.arrayToCollection(response[tName] as any, typeSpecs[tName].type);\r\n            } else {\r\n              response[tName] = TypeConversions.objectToClass(response[tName] as any, typeSpecs[tName].type);\r\n            }\r\n          }\r\n          resolve(response)\r\n        }\r\n      ).catch(\r\n        response => reject(response)\r\n      )\r\n    });\r\n  }\r\n\r\n  public static getData(http: HttpClient, endpoint: string): Promise<any> {\r\n    return http.get(endpoint, { headers: this.getHeaders(), withCredentials: true })\r\n      .toPromise()\r\n  }\r\n\r\n  public static getDataForType<T>(http: HttpClient, endpoint: string, c: { new(): T; }): Promise<T> {\r\n    return new Promise<T>((resolve, reject) => {\r\n      http.get(endpoint, { headers: this.getHeaders(), withCredentials: true }).toPromise().then(\r\n        response => {\r\n          const obj = TypeConversions.objectToClass<T>(response, c);\r\n          resolve(obj);\r\n        }\r\n      ).catch(\r\n        response => reject(response)\r\n      )\r\n    });\r\n  }\r\n\r\n  public static getCacheableDataCollectionForType<T>(http: HttpClient, endpoint: string, c: { new(): T } = null): Observable<GxCollectionData<T>> {\r\n    return this.getDataCollectionForTypeObservableImpl(http, endpoint, true, c);\r\n  }\r\n\r\n  private static getDataCollectionForTypeObservableImpl<T>(http: HttpClient, endpoint: string, cacheable: boolean, c: { new(): T } = null): Observable<GxCollectionData<T>> {\r\n    const result = http.get(endpoint, { headers: this.getHeaders(cacheable), withCredentials: true })\r\n      .pipe(map((ev) => {\r\n        return c ? TypeConversions.arrayToCollection(ev as any, c) : (ev as any);\r\n      })\r\n      );\r\n    return result;\r\n  }\r\n\r\n  public static getDataCollectionForTypeObservable<T>(http: HttpClient, endpoint: string, c: { new(): T } = null): Observable<GxCollectionData<T>> {\r\n    return this.getDataCollectionForTypeObservableImpl(http, endpoint, false, c);\r\n  }\r\n\r\n\r\n  public static getDataCollectionForType<T>(http: HttpClient, endpoint: string, c: { new(): T; } = null): Promise<GxCollectionData<T>> {\r\n    return new Promise<GxCollectionData<T>>((resolve, reject) => {\r\n      http.get(endpoint, { headers: this.getHeaders(), withCredentials: true }).toPromise().then(\r\n        (response: any) => {\r\n          resolve((c) ? TypeConversions.arrayToCollection(response, c) : response)\r\n        }\r\n      ).catch(\r\n        response => reject(response)\r\n      )\r\n    });\r\n  }\r\n\r\n  public static uploadGXobject(http: HttpClient, endpointObject: string, loginService: GAMService, file: File): Promise<any> {\r\n    return new Promise<any>((resolve, reject) => {\r\n      let uri = Settings.SERVICE_API_ENDPOINT + 'gxobject';\r\n      if (endpointObject) {\r\n        uri = Settings.SERVICE_API_ENDPOINT + endpointObject + '/gxobject';\r\n      }\r\n      let contentType = \"image\";\r\n      if (file.type) {\r\n        contentType = file.type;\r\n      }\r\n      const headers = new HttpHeaders({ 'Accept': 'application/json', 'Content-Type': contentType });\r\n      const options = { headers: headers, withCredentials: true };\r\n      http.post(uri, file, options).toPromise().then(\r\n        response => resolve(response)\r\n      ).catch(\r\n        response => reject(response));\r\n    });\r\n  }\r\n\r\n  private static getHeaders(staleWhileRevalidate?: boolean) {\r\n    return new HttpHeaders({\r\n      \"Content-Type\": \"application/json\",\r\n      \"DeviceId\": GeneXusClientClientInformation.id(),\r\n      \"DeviceType\": GeneXusClientClientInformation.deviceType().toString(),\r\n      \"Cache-Control\": (staleWhileRevalidate) ? \"must-revalidate\" : \"no-cache\",\r\n      \"GxTZOffset\": this.getTimezone()\r\n    });\r\n  }\r\n\r\n  private static getTimezone(): string {\r\n    const germanFakeRegion = new Intl.DateTimeFormat();\r\n    return germanFakeRegion.resolvedOptions().timeZone;\r\n  }\r\n\r\n  private static getJsonPayload(data: any): string {\r\n    let jsonData = null;\r\n    if (typeof data === \"string\") {\r\n      jsonData = data;\r\n    } else {\r\n      jsonData = JSON.stringify(data, (key, value) => {\r\n        if (key === \"uiModel\") {\r\n          return undefined;\r\n        }\r\n        return value;\r\n      });\r\n    }\r\n    return jsonData;\r\n  }\r\n}\r\n","import { GxCollectionData } from \"./gxcollection.dt\";\r\nimport { plainToClassFromExist, classToPlain } from \"class-transformer\";\r\n\r\nexport class GxSdtData extends GxCollectionData<any> {\r\n\r\n  static fromJson(obj: any, json: string,) {\r\n    plainToClassFromExist(obj, JSON.parse(json));\r\n  }\r\n\r\n  static toJson(obj: any): string {\r\n    return JSON.stringify(classToPlain(obj));\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { DomSanitizer} from '@angular/platform-browser';\r\n\r\n@Pipe({ name: 'safe' })\r\nexport class SafePipe implements PipeTransform {\r\n  constructor(private sanitizer: DomSanitizer) {}\r\n  transform(url) {\r\n    return this.sanitizer.bypassSecurityTrustResourceUrl(url);\r\n  }\r\n} ","import { NavigationStyle } from \"app/gx/base/view-manager\";\r\nimport { IButtonElement } from \"app/gx/ui/model/ui-button\";\r\n\r\nexport interface IActionBarElement {\r\n  caption: string;\r\n  class: string;\r\n  navigationItems: IButtonElement[];\r\n  actionItems: IButtonElement[];\r\n  toggleButtonLabel: string;\r\n  visible: boolean;\r\n  navigationStyle: NavigationStyle;\r\n  showBackButton: boolean;\r\n  onBackButtonClick: () => void;\r\n}\r\n\r\nexport class UIActionBarElement implements IActionBarElement {\r\n  caption: string;\r\n  class: string;\r\n  navigationItems: IButtonElement[];\r\n  actionItems: IButtonElement[];\r\n  toggleButtonLabel: string;\r\n  visible: boolean;\r\n  navigationStyle: NavigationStyle;\r\n  showBackButton: boolean;\r\n  onBackButtonClick: () => void;\r\n\r\n  constructor() {\r\n    this.navigationItems = new Array<IButtonElement>();\r\n    this.actionItems = new Array<IButtonElement>();\r\n\r\n  }\r\n}","import { UIActionBarElement } from \"app/gx/ui/model/ui-actionbar\";\r\n\r\nexport interface IFormElement {\r\n  caption: string;\r\n  applicationBar: UIActionBarElement;\r\n}\r\n\r\nexport class UIFormElement implements IFormElement {\r\n  _caption = null;\r\n  applicationBar = new UIActionBarElement();\r\n\r\n  get caption() { return this._caption }\r\n  set caption(value: string) {\r\n    if (this.applicationBar) {\r\n      this.applicationBar.caption = value;\r\n    }\r\n    this._caption = value;\r\n  }\r\n\r\n}","export interface ITextblockElement {\r\n\r\n  class: string;\r\n  caption: string;\r\n  visible: boolean;\r\n  enabled: boolean;\r\n\r\n  onDoubleclick(eventInfo: any);\r\n  onClick(eventInfo: any);\r\n\r\n  setClickAction(action: any);\r\n  setDoubleclickAction(action: any);\r\n  setLongclickAction(action: any);\r\n  setSwipeAction(action: any);\r\n  setSwipeleftAction(action: any);\r\n  setSwiperightAction(action: any);\r\n  setSwipedownAction(action: any);\r\n  setSwipeupAction(action: any);\r\n\r\n  setDragAction(action: any);\r\n  setDropAction(action: any);\r\n  setDropAcceptedAction(action: any);\r\n  setDragCanceledAction(action: any);\r\n\r\n}\r\n\r\nlet clickPending = false;\r\n\r\nexport class UITextblockElement implements ITextblockElement {\r\n\r\n  class = null;\r\n  caption = null;\r\n  visible = null;\r\n  enabled = null;\r\n\r\n  onClickAction = null;\r\n  onDoubleclickAction = null;\r\n\r\n  async onDoubleclick(eventInfo: any) {\r\n    eventInfo.stopPropagation();\r\n    if (this.onDoubleclickAction) {\r\n      clickPending = false;\r\n      await this.onDoubleclickAction();\r\n    }\r\n  }\r\n\r\n  onClick(eventInfo: any) {\r\n    eventInfo.stopPropagation();\r\n    if (this.onClickAction) {\r\n      clickPending = true;\r\n      setTimeout(() => {\r\n        if (clickPending) {\r\n          this.onClickAction();\r\n        }\r\n      }, 250);\r\n    }\r\n  }\r\n\r\n  setClickAction(action: any) {\r\n    this.onClickAction = action;\r\n  }\r\n\r\n  setDoubleclickAction(action: any) {\r\n    this.onDoubleclickAction = action;\r\n  }\r\n\r\n  setLongclickAction(action: any) {\r\n    // TODO\r\n  }\r\n\r\n  setSwipeAction(action: any) {\r\n    // TODO\r\n  }\r\n\r\n  setSwipeleftAction(action: any) {\r\n    // TODO\r\n  }\r\n\r\n  setSwiperightAction(action: any) {\r\n    // TODO\r\n  }\r\n\r\n  setSwipedownAction(action: any) {\r\n    // TODO\r\n  }\r\n\r\n  setSwipeupAction(action: any) {\r\n    // TODO\r\n  }\r\n\r\n  setDragAction(action: any) {\r\n    // TODO\r\n  }\r\n\r\n  setDropAction(action: any) {\r\n    // TODO\r\n  }\r\n\r\n  setDropAcceptedAction(action: any) {\r\n    // TODO\r\n  }\r\n\r\n  setDragCanceledAction(action: any) {\r\n    // TODO\r\n  }\r\n\r\n}\r\n\r\n","import { ModuleWithProviders, NgModule } from \"@angular/core\";\r\nimport { Routes, RouterModule } from \"@angular/router\";\r\nimport { GetEmoji_Level_DetailComponent } from \"app/GetEmoji/getemoji_level_detail.component\" ;\r\n\r\nexport const moduleRoutes: Routes = [\r\n  { path: \"GetEmoji-Level_Detail\", component: GetEmoji_Level_DetailComponent } \r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(moduleRoutes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class SharedRoutingModule {}\r\n","import { CUSTOM_ELEMENTS_SCHEMA, NgModule } from \"@angular/core\";\r\nimport { FormsModule } from \"@angular/forms\";\r\nimport { CommonModule } from \"@angular/common\";\r\n\r\nimport { CommonModule as GxCommonModule } from \"./common.module\";\r\nimport { MainModule } from \"./main.module\";\r\nimport { SafePipe } from \"app/gx/ui/controls/safe-pipe/safe-pipe.component\";\r\nimport { GetEmoji_Level_DetailComponent } from \"app/GetEmoji/getemoji_level_detail.component\" ;\r\n\r\nimport { SharedRoutingModule, moduleRoutes } from \"app/shared-routing.module\";\r\n\r\nimport { VirtualScrollerModule } from '@genexus/ngx-virtual-scroller';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule, \r\n    FormsModule, \r\n    SharedRoutingModule, \r\n    VirtualScrollerModule,\r\n    GxCommonModule,\r\n    MainModule\r\n  ],\r\n  declarations: [\r\n    SafePipe\r\n    , GetEmoji_Level_DetailComponent \r\n  ],\r\n  bootstrap: [],\r\n  schemas: [CUSTOM_ELEMENTS_SCHEMA]\r\n})\r\nexport class SharedModule {\r\n  static routes = moduleRoutes;\r\n}\r\n"],"names":[],"sourceRoot":"webpack:///"}