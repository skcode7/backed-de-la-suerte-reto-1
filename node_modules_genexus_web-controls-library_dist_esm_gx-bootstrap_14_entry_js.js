"use strict";
(self["webpackChunkgenexus_web_application"] = self["webpackChunkgenexus_web_application"] || []).push([["node_modules_genexus_web-controls-library_dist_esm_gx-bootstrap_14_entry_js"],{

/***/ 9295:
/*!**************************************************************************************!*\
  !*** ./node_modules/@genexus/web-controls-library/dist/esm/gx-bootstrap_14.entry.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "gx_bootstrap": () => (/* binding */ Bootstrap),
/* harmony export */   "gx_button": () => (/* binding */ Button),
/* harmony export */   "gx_card": () => (/* binding */ Card),
/* harmony export */   "gx_icon": () => (/* binding */ Icon),
/* harmony export */   "gx_image": () => (/* binding */ Image),
/* harmony export */   "gx_layout": () => (/* binding */ Layout),
/* harmony export */   "gx_message": () => (/* binding */ Message),
/* harmony export */   "gx_modal": () => (/* binding */ Modal),
/* harmony export */   "gx_navbar": () => (/* binding */ NavBar),
/* harmony export */   "gx_navbar_item": () => (/* binding */ NavBarItem),
/* harmony export */   "gx_progress_bar": () => (/* binding */ ProgressBar),
/* harmony export */   "gx_table": () => (/* binding */ Table),
/* harmony export */   "gx_table_cell": () => (/* binding */ TableCell),
/* harmony export */   "gx_textblock": () => (/* binding */ TextBlock)
/* harmony export */ });
/* harmony import */ var C_KBs_Koder_SupaBase_CSharpModel_mobile_Angular_Menu_node_modules_babel_runtime_helpers_esm_asyncToGenerator_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js */ 4475);
/* harmony import */ var _index_10623738_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./index-10623738.js */ 9689);
/* harmony import */ var _swipeable_71a0e453_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./swipeable-71a0e453.js */ 1772);
/* harmony import */ var _highlightable_e5a00dd1_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./highlightable-e5a00dd1.js */ 6847);
/* harmony import */ var _css_variables_watcher_cf910941_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./css-variables-watcher-cf910941.js */ 9438);
/* harmony import */ var _line_clamp_b4163b3c_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./line-clamp-b4163b3c.js */ 481);
/* harmony import */ var _image_position_f497f3df_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./image-position-f497f3df.js */ 839);
/* harmony import */ var _commonjsHelpers_7b8ed50b_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./_commonjsHelpers-7b8ed50b.js */ 6153);








const bootstrapCss = "@charset \"UTF-8\";:root{--blue:#007bff;--indigo:#6610f2;--purple:#6f42c1;--pink:#e83e8c;--red:#dc3545;--orange:#fd7e14;--yellow:#ffc107;--green:#28a745;--teal:#20c997;--cyan:#17a2b8;--white:#fff;--gray:#6c757d;--gray-dark:#343a40;--primary:#007bff;--secondary:#6c757d;--success:#28a745;--info:#17a2b8;--warning:#ffc107;--danger:#dc3545;--light:#f8f9fa;--dark:#343a40;--breakpoint-xs:0;--breakpoint-sm:576px;--breakpoint-md:768px;--breakpoint-lg:992px;--breakpoint-xl:1200px;--font-family-sans-serif:-apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, \"Helvetica Neue\", Arial, \"Noto Sans\", sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\", \"Noto Color Emoji\";--font-family-monospace:SFMono-Regular, Menlo, Monaco, Consolas, \"Liberation Mono\", \"Courier New\", monospace}*,*::before,*::after{-webkit-box-sizing:border-box;box-sizing:border-box}html{font-family:sans-serif;line-height:1.15;-webkit-text-size-adjust:100%;-webkit-tap-highlight-color:rgba(0, 0, 0, 0)}article,aside,figcaption,figure,footer,header,hgroup,main,nav,section{display:block}body{margin:0;font-family:-apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, \"Helvetica Neue\", Arial, \"Noto Sans\", sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\", \"Noto Color Emoji\";font-size:1rem;font-weight:400;line-height:1.5;color:#212529;text-align:left;background-color:#fff}[tabindex=\"-1\"]:focus:not(:focus-visible){outline:0 !important}hr{-webkit-box-sizing:content-box;box-sizing:content-box;height:0;overflow:visible}h1,h2,h3,h4,h5,h6{margin-top:0;margin-bottom:0.5rem}p{margin-top:0;margin-bottom:1rem}abbr[title],abbr[data-original-title]{text-decoration:underline;-webkit-text-decoration:underline dotted;text-decoration:underline dotted;cursor:help;border-bottom:0;-webkit-text-decoration-skip-ink:none;text-decoration-skip-ink:none}address{margin-bottom:1rem;font-style:normal;line-height:inherit}ol,ul,dl{margin-top:0;margin-bottom:1rem}ol ol,ul ul,ol ul,ul ol{margin-bottom:0}dt{font-weight:700}dd{margin-bottom:0.5rem;margin-left:0}blockquote{margin:0 0 1rem}b,strong{font-weight:bolder}small{font-size:80%}sub,sup{position:relative;font-size:75%;line-height:0;vertical-align:baseline}sub{bottom:-0.25em}sup{top:-0.5em}a{color:#007bff;text-decoration:none;background-color:transparent}a:hover{color:#0056b3;text-decoration:underline}a:not([href]):not([class]){color:inherit;text-decoration:none}a:not([href]):not([class]):hover{color:inherit;text-decoration:none}pre,code,kbd,samp{font-family:SFMono-Regular, Menlo, Monaco, Consolas, \"Liberation Mono\", \"Courier New\", monospace;font-size:1em}pre{margin-top:0;margin-bottom:1rem;overflow:auto;-ms-overflow-style:scrollbar}figure{margin:0 0 1rem}img{vertical-align:middle;border-style:none}svg{overflow:hidden;vertical-align:middle}table{border-collapse:collapse}caption{padding-top:0.75rem;padding-bottom:0.75rem;color:#6c757d;text-align:left;caption-side:bottom}th{text-align:inherit}label{display:inline-block;margin-bottom:0.5rem}button{border-radius:0}button:focus{outline:1px dotted;outline:5px auto -webkit-focus-ring-color}input,button,select,optgroup,textarea{margin:0;font-family:inherit;font-size:inherit;line-height:inherit}button,input{overflow:visible}button,select{text-transform:none}[role=button]{cursor:pointer}select{word-wrap:normal}button,[type=button],[type=reset],[type=submit]{-webkit-appearance:button}button:not(:disabled),[type=button]:not(:disabled),[type=reset]:not(:disabled),[type=submit]:not(:disabled){cursor:pointer}button::-moz-focus-inner,[type=button]::-moz-focus-inner,[type=reset]::-moz-focus-inner,[type=submit]::-moz-focus-inner{padding:0;border-style:none}input[type=radio],input[type=checkbox]{-webkit-box-sizing:border-box;box-sizing:border-box;padding:0}textarea{overflow:auto;resize:vertical}fieldset{min-width:0;padding:0;margin:0;border:0}legend{display:block;width:100%;max-width:100%;padding:0;margin-bottom:0.5rem;font-size:1.5rem;line-height:inherit;color:inherit;white-space:normal}progress{vertical-align:baseline}[type=number]::-webkit-inner-spin-button,[type=number]::-webkit-outer-spin-button{height:auto}[type=search]{outline-offset:-2px;-webkit-appearance:none}[type=search]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{font:inherit;-webkit-appearance:button}output{display:inline-block}summary{display:list-item;cursor:pointer}template{display:none}[hidden]{display:none !important}h1,h2,h3,h4,h5,h6,.h1,.h2,.h3,.h4,.h5,.h6{margin-bottom:0.5rem;font-weight:500;line-height:1.2}h1,.h1{font-size:2.5rem}h2,.h2{font-size:2rem}h3,.h3{font-size:1.75rem}h4,.h4{font-size:1.5rem}h5,.h5{font-size:1.25rem}h6,.h6{font-size:1rem}.lead{font-size:1.25rem;font-weight:300}.display-1{font-size:6rem;font-weight:300;line-height:1.2}.display-2{font-size:5.5rem;font-weight:300;line-height:1.2}.display-3{font-size:4.5rem;font-weight:300;line-height:1.2}.display-4{font-size:3.5rem;font-weight:300;line-height:1.2}hr{margin-top:1rem;margin-bottom:1rem;border:0;border-top:1px solid rgba(0, 0, 0, 0.1)}small,.small{font-size:80%;font-weight:400}mark,.mark{padding:0.2em;background-color:#fcf8e3}.list-unstyled{padding-left:0;list-style:none}.list-inline{padding-left:0;list-style:none}.list-inline-item{display:inline-block}.list-inline-item:not(:last-child){margin-right:0.5rem}.initialism{font-size:90%;text-transform:uppercase}.blockquote{margin-bottom:1rem;font-size:1.25rem}.blockquote-footer{display:block;font-size:80%;color:#6c757d}.blockquote-footer::before{content:\"— \"}.form-control{display:block;width:100%;height:calc(1.5em + 0.75rem + 2px);padding:0.375rem 0.75rem;font-size:1rem;font-weight:400;line-height:1.5;color:#495057;background-color:#fff;background-clip:padding-box;border:1px solid #ced4da;border-radius:0.25rem;-webkit-transition:border-color 0.15s ease-in-out, -webkit-box-shadow 0.15s ease-in-out;transition:border-color 0.15s ease-in-out, -webkit-box-shadow 0.15s ease-in-out;transition:border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;transition:border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out, -webkit-box-shadow 0.15s ease-in-out}@media (prefers-reduced-motion: reduce){.form-control{-webkit-transition:none;transition:none}}.form-control::-ms-expand{background-color:transparent;border:0}.form-control:-moz-focusring{color:transparent;text-shadow:0 0 0 #495057}.form-control:focus{color:#495057;background-color:#fff;border-color:#80bdff;outline:0;-webkit-box-shadow:0 0 0 0.2rem rgba(0, 123, 255, 0.25);box-shadow:0 0 0 0.2rem rgba(0, 123, 255, 0.25)}.form-control::-webkit-input-placeholder{color:#6c757d;opacity:1}.form-control::-moz-placeholder{color:#6c757d;opacity:1}.form-control:-ms-input-placeholder{color:#6c757d;opacity:1}.form-control::-ms-input-placeholder{color:#6c757d;opacity:1}.form-control::placeholder{color:#6c757d;opacity:1}.form-control:disabled,.form-control[readonly]{background-color:#e9ecef;opacity:1}input[type=date].form-control,input[type=time].form-control,input[type=datetime-local].form-control,input[type=month].form-control{-webkit-appearance:none;-moz-appearance:none;appearance:none}select.form-control:focus::-ms-value{color:#495057;background-color:#fff}.form-control-file,.form-control-range{display:block;width:100%}.col-form-label{padding-top:calc(0.375rem + 1px);padding-bottom:calc(0.375rem + 1px);margin-bottom:0;font-size:inherit;line-height:1.5}.col-form-label-lg{padding-top:calc(0.5rem + 1px);padding-bottom:calc(0.5rem + 1px);font-size:1.25rem;line-height:1.5}.col-form-label-sm{padding-top:calc(0.25rem + 1px);padding-bottom:calc(0.25rem + 1px);font-size:0.875rem;line-height:1.5}.form-control-plaintext{display:block;width:100%;padding:0.375rem 0;margin-bottom:0;font-size:1rem;line-height:1.5;color:#212529;background-color:transparent;border:solid transparent;border-width:1px 0}.form-control-plaintext.form-control-sm,.form-control-plaintext.form-control-lg{padding-right:0;padding-left:0}.form-control-sm{height:calc(1.5em + 0.5rem + 2px);padding:0.25rem 0.5rem;font-size:0.875rem;line-height:1.5;border-radius:0.2rem}.form-control-lg{height:calc(1.5em + 1rem + 2px);padding:0.5rem 1rem;font-size:1.25rem;line-height:1.5;border-radius:0.3rem}select.form-control[size],select.form-control[multiple]{height:auto}textarea.form-control{height:auto}.form-group{margin-bottom:1rem}.form-text{display:block;margin-top:0.25rem}.form-row{display:-ms-flexbox;display:flex;-ms-flex-wrap:wrap;flex-wrap:wrap;margin-right:-5px;margin-left:-5px}.form-row>.col,.form-row>[class*=col-]{padding-right:5px;padding-left:5px}.form-check{position:relative;display:block;padding-left:1.25rem}.form-check-input{position:absolute;margin-top:0.3rem;margin-left:-1.25rem}.form-check-input[disabled]~.form-check-label,.form-check-input:disabled~.form-check-label{color:#6c757d}.form-check-label{margin-bottom:0}.form-check-inline{display:-ms-inline-flexbox;display:inline-flex;-ms-flex-align:center;align-items:center;padding-left:0;margin-right:0.75rem}.form-check-inline .form-check-input{position:static;margin-top:0;margin-right:0.3125rem;margin-left:0}.valid-feedback{display:none;width:100%;margin-top:0.25rem;font-size:80%;color:#28a745}.valid-tooltip{position:absolute;top:100%;left:0;z-index:5;display:none;max-width:100%;padding:0.25rem 0.5rem;margin-top:0.1rem;font-size:0.875rem;line-height:1.5;color:#fff;background-color:rgba(40, 167, 69, 0.9);border-radius:0.25rem}.was-validated :valid~.valid-feedback,.was-validated :valid~.valid-tooltip,.is-valid~.valid-feedback,.is-valid~.valid-tooltip{display:block}.was-validated .form-control:valid,.form-control.is-valid{border-color:#28a745;padding-right:calc(1.5em + 0.75rem);background-image:url(\"data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' width='8' height='8' viewBox='0 0 8 8'%3e%3cpath fill='%2328a745' d='M2.3 6.73L.6 4.53c-.4-1.04.46-1.4 1.1-.8l1.1 1.4 3.4-3.8c.6-.63 1.6-.27 1.2.7l-4 4.6c-.43.5-.8.4-1.1.1z'/%3e%3c/svg%3e\");background-repeat:no-repeat;background-position:right calc(0.375em + 0.1875rem) center;background-size:calc(0.75em + 0.375rem) calc(0.75em + 0.375rem)}.was-validated .form-control:valid:focus,.form-control.is-valid:focus{border-color:#28a745;-webkit-box-shadow:0 0 0 0.2rem rgba(40, 167, 69, 0.25);box-shadow:0 0 0 0.2rem rgba(40, 167, 69, 0.25)}.was-validated textarea.form-control:valid,textarea.form-control.is-valid{padding-right:calc(1.5em + 0.75rem);background-position:top calc(0.375em + 0.1875rem) right calc(0.375em + 0.1875rem)}.was-validated .custom-select:valid,.custom-select.is-valid{border-color:#28a745;padding-right:calc(0.75em + 2.3125rem);background:url(\"data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' width='4' height='5' viewBox='0 0 4 5'%3e%3cpath fill='%23343a40' d='M2 0L0 2h4zm0 5L0 3h4z'/%3e%3c/svg%3e\") no-repeat right 0.75rem center/8px 10px, url(\"data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' width='8' height='8' viewBox='0 0 8 8'%3e%3cpath fill='%2328a745' d='M2.3 6.73L.6 4.53c-.4-1.04.46-1.4 1.1-.8l1.1 1.4 3.4-3.8c.6-.63 1.6-.27 1.2.7l-4 4.6c-.43.5-.8.4-1.1.1z'/%3e%3c/svg%3e\") #fff no-repeat center right 1.75rem/calc(0.75em + 0.375rem) calc(0.75em + 0.375rem)}.was-validated .custom-select:valid:focus,.custom-select.is-valid:focus{border-color:#28a745;-webkit-box-shadow:0 0 0 0.2rem rgba(40, 167, 69, 0.25);box-shadow:0 0 0 0.2rem rgba(40, 167, 69, 0.25)}.was-validated .form-check-input:valid~.form-check-label,.form-check-input.is-valid~.form-check-label{color:#28a745}.was-validated .form-check-input:valid~.valid-feedback,.was-validated .form-check-input:valid~.valid-tooltip,.form-check-input.is-valid~.valid-feedback,.form-check-input.is-valid~.valid-tooltip{display:block}.was-validated .custom-control-input:valid~.custom-control-label,.custom-control-input.is-valid~.custom-control-label{color:#28a745}.was-validated .custom-control-input:valid~.custom-control-label::before,.custom-control-input.is-valid~.custom-control-label::before{border-color:#28a745}.was-validated .custom-control-input:valid:checked~.custom-control-label::before,.custom-control-input.is-valid:checked~.custom-control-label::before{border-color:#34ce57;background-color:#34ce57}.was-validated .custom-control-input:valid:focus~.custom-control-label::before,.custom-control-input.is-valid:focus~.custom-control-label::before{-webkit-box-shadow:0 0 0 0.2rem rgba(40, 167, 69, 0.25);box-shadow:0 0 0 0.2rem rgba(40, 167, 69, 0.25)}.was-validated .custom-control-input:valid:focus:not(:checked)~.custom-control-label::before,.custom-control-input.is-valid:focus:not(:checked)~.custom-control-label::before{border-color:#28a745}.was-validated .custom-file-input:valid~.custom-file-label,.custom-file-input.is-valid~.custom-file-label{border-color:#28a745}.was-validated .custom-file-input:valid:focus~.custom-file-label,.custom-file-input.is-valid:focus~.custom-file-label{border-color:#28a745;-webkit-box-shadow:0 0 0 0.2rem rgba(40, 167, 69, 0.25);box-shadow:0 0 0 0.2rem rgba(40, 167, 69, 0.25)}.invalid-feedback{display:none;width:100%;margin-top:0.25rem;font-size:80%;color:#dc3545}.invalid-tooltip{position:absolute;top:100%;left:0;z-index:5;display:none;max-width:100%;padding:0.25rem 0.5rem;margin-top:0.1rem;font-size:0.875rem;line-height:1.5;color:#fff;background-color:rgba(220, 53, 69, 0.9);border-radius:0.25rem}.was-validated :invalid~.invalid-feedback,.was-validated :invalid~.invalid-tooltip,.is-invalid~.invalid-feedback,.is-invalid~.invalid-tooltip{display:block}.was-validated .form-control:invalid,.form-control.is-invalid{border-color:#dc3545;padding-right:calc(1.5em + 0.75rem);background-image:url(\"data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' width='12' height='12' fill='none' stroke='%23dc3545' viewBox='0 0 12 12'%3e%3ccircle cx='6' cy='6' r='4.5'/%3e%3cpath stroke-linejoin='round' d='M5.8 3.6h.4L6 6.5z'/%3e%3ccircle cx='6' cy='8.2' r='.6' fill='%23dc3545' stroke='none'/%3e%3c/svg%3e\");background-repeat:no-repeat;background-position:right calc(0.375em + 0.1875rem) center;background-size:calc(0.75em + 0.375rem) calc(0.75em + 0.375rem)}.was-validated .form-control:invalid:focus,.form-control.is-invalid:focus{border-color:#dc3545;-webkit-box-shadow:0 0 0 0.2rem rgba(220, 53, 69, 0.25);box-shadow:0 0 0 0.2rem rgba(220, 53, 69, 0.25)}.was-validated textarea.form-control:invalid,textarea.form-control.is-invalid{padding-right:calc(1.5em + 0.75rem);background-position:top calc(0.375em + 0.1875rem) right calc(0.375em + 0.1875rem)}.was-validated .custom-select:invalid,.custom-select.is-invalid{border-color:#dc3545;padding-right:calc(0.75em + 2.3125rem);background:url(\"data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' width='4' height='5' viewBox='0 0 4 5'%3e%3cpath fill='%23343a40' d='M2 0L0 2h4zm0 5L0 3h4z'/%3e%3c/svg%3e\") no-repeat right 0.75rem center/8px 10px, url(\"data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' width='12' height='12' fill='none' stroke='%23dc3545' viewBox='0 0 12 12'%3e%3ccircle cx='6' cy='6' r='4.5'/%3e%3cpath stroke-linejoin='round' d='M5.8 3.6h.4L6 6.5z'/%3e%3ccircle cx='6' cy='8.2' r='.6' fill='%23dc3545' stroke='none'/%3e%3c/svg%3e\") #fff no-repeat center right 1.75rem/calc(0.75em + 0.375rem) calc(0.75em + 0.375rem)}.was-validated .custom-select:invalid:focus,.custom-select.is-invalid:focus{border-color:#dc3545;-webkit-box-shadow:0 0 0 0.2rem rgba(220, 53, 69, 0.25);box-shadow:0 0 0 0.2rem rgba(220, 53, 69, 0.25)}.was-validated .form-check-input:invalid~.form-check-label,.form-check-input.is-invalid~.form-check-label{color:#dc3545}.was-validated .form-check-input:invalid~.invalid-feedback,.was-validated .form-check-input:invalid~.invalid-tooltip,.form-check-input.is-invalid~.invalid-feedback,.form-check-input.is-invalid~.invalid-tooltip{display:block}.was-validated .custom-control-input:invalid~.custom-control-label,.custom-control-input.is-invalid~.custom-control-label{color:#dc3545}.was-validated .custom-control-input:invalid~.custom-control-label::before,.custom-control-input.is-invalid~.custom-control-label::before{border-color:#dc3545}.was-validated .custom-control-input:invalid:checked~.custom-control-label::before,.custom-control-input.is-invalid:checked~.custom-control-label::before{border-color:#e4606d;background-color:#e4606d}.was-validated .custom-control-input:invalid:focus~.custom-control-label::before,.custom-control-input.is-invalid:focus~.custom-control-label::before{-webkit-box-shadow:0 0 0 0.2rem rgba(220, 53, 69, 0.25);box-shadow:0 0 0 0.2rem rgba(220, 53, 69, 0.25)}.was-validated .custom-control-input:invalid:focus:not(:checked)~.custom-control-label::before,.custom-control-input.is-invalid:focus:not(:checked)~.custom-control-label::before{border-color:#dc3545}.was-validated .custom-file-input:invalid~.custom-file-label,.custom-file-input.is-invalid~.custom-file-label{border-color:#dc3545}.was-validated .custom-file-input:invalid:focus~.custom-file-label,.custom-file-input.is-invalid:focus~.custom-file-label{border-color:#dc3545;-webkit-box-shadow:0 0 0 0.2rem rgba(220, 53, 69, 0.25);box-shadow:0 0 0 0.2rem rgba(220, 53, 69, 0.25)}.form-inline{display:-ms-flexbox;display:flex;-ms-flex-flow:row wrap;flex-flow:row wrap;-ms-flex-align:center;align-items:center}.form-inline .form-check{width:100%}@media (min-width: 576px){.form-inline label{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;margin-bottom:0}.form-inline .form-group{display:-ms-flexbox;display:flex;-ms-flex:0 0 auto;flex:0 0 auto;-ms-flex-flow:row wrap;flex-flow:row wrap;-ms-flex-align:center;align-items:center;margin-bottom:0}.form-inline .form-control{display:inline-block;width:auto;vertical-align:middle}.form-inline .form-control-plaintext{display:inline-block}.form-inline .input-group,.form-inline .custom-select{width:auto}.form-inline .form-check{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;width:auto;padding-left:0}.form-inline .form-check-input{position:relative;-ms-flex-negative:0;flex-shrink:0;margin-top:0;margin-right:0.25rem;margin-left:0}.form-inline .custom-control{-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center}.form-inline .custom-control-label{margin-bottom:0}}.btn{display:inline-block;font-weight:400;color:#212529;text-align:center;vertical-align:middle;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;background-color:transparent;border:1px solid transparent;padding:0.375rem 0.75rem;font-size:1rem;line-height:1.5;border-radius:0.25rem;-webkit-transition:color 0.15s ease-in-out, background-color 0.15s ease-in-out, border-color 0.15s ease-in-out, -webkit-box-shadow 0.15s ease-in-out;transition:color 0.15s ease-in-out, background-color 0.15s ease-in-out, border-color 0.15s ease-in-out, -webkit-box-shadow 0.15s ease-in-out;transition:color 0.15s ease-in-out, background-color 0.15s ease-in-out, border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;transition:color 0.15s ease-in-out, background-color 0.15s ease-in-out, border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out, -webkit-box-shadow 0.15s ease-in-out}@media (prefers-reduced-motion: reduce){.btn{-webkit-transition:none;transition:none}}.btn:hover{color:#212529;text-decoration:none}.btn:focus,.btn.focus{outline:0;-webkit-box-shadow:0 0 0 0.2rem rgba(0, 123, 255, 0.25);box-shadow:0 0 0 0.2rem rgba(0, 123, 255, 0.25)}.btn.disabled,.btn:disabled{opacity:0.65}.btn:not(:disabled):not(.disabled){cursor:pointer}a.btn.disabled,fieldset:disabled a.btn{pointer-events:none}.btn-primary{color:#fff;background-color:#007bff;border-color:#007bff}.btn-primary:hover{color:#fff;background-color:#0069d9;border-color:#0062cc}.btn-primary:focus,.btn-primary.focus{color:#fff;background-color:#0069d9;border-color:#0062cc;-webkit-box-shadow:0 0 0 0.2rem rgba(38, 143, 255, 0.5);box-shadow:0 0 0 0.2rem rgba(38, 143, 255, 0.5)}.btn-primary.disabled,.btn-primary:disabled{color:#fff;background-color:#007bff;border-color:#007bff}.btn-primary:not(:disabled):not(.disabled):active,.btn-primary:not(:disabled):not(.disabled).active,.show>.btn-primary.dropdown-toggle{color:#fff;background-color:#0062cc;border-color:#005cbf}.btn-primary:not(:disabled):not(.disabled):active:focus,.btn-primary:not(:disabled):not(.disabled).active:focus,.show>.btn-primary.dropdown-toggle:focus{-webkit-box-shadow:0 0 0 0.2rem rgba(38, 143, 255, 0.5);box-shadow:0 0 0 0.2rem rgba(38, 143, 255, 0.5)}.btn-secondary{color:#fff;background-color:#6c757d;border-color:#6c757d}.btn-secondary:hover{color:#fff;background-color:#5a6268;border-color:#545b62}.btn-secondary:focus,.btn-secondary.focus{color:#fff;background-color:#5a6268;border-color:#545b62;-webkit-box-shadow:0 0 0 0.2rem rgba(130, 138, 145, 0.5);box-shadow:0 0 0 0.2rem rgba(130, 138, 145, 0.5)}.btn-secondary.disabled,.btn-secondary:disabled{color:#fff;background-color:#6c757d;border-color:#6c757d}.btn-secondary:not(:disabled):not(.disabled):active,.btn-secondary:not(:disabled):not(.disabled).active,.show>.btn-secondary.dropdown-toggle{color:#fff;background-color:#545b62;border-color:#4e555b}.btn-secondary:not(:disabled):not(.disabled):active:focus,.btn-secondary:not(:disabled):not(.disabled).active:focus,.show>.btn-secondary.dropdown-toggle:focus{-webkit-box-shadow:0 0 0 0.2rem rgba(130, 138, 145, 0.5);box-shadow:0 0 0 0.2rem rgba(130, 138, 145, 0.5)}.btn-success{color:#fff;background-color:#28a745;border-color:#28a745}.btn-success:hover{color:#fff;background-color:#218838;border-color:#1e7e34}.btn-success:focus,.btn-success.focus{color:#fff;background-color:#218838;border-color:#1e7e34;-webkit-box-shadow:0 0 0 0.2rem rgba(72, 180, 97, 0.5);box-shadow:0 0 0 0.2rem rgba(72, 180, 97, 0.5)}.btn-success.disabled,.btn-success:disabled{color:#fff;background-color:#28a745;border-color:#28a745}.btn-success:not(:disabled):not(.disabled):active,.btn-success:not(:disabled):not(.disabled).active,.show>.btn-success.dropdown-toggle{color:#fff;background-color:#1e7e34;border-color:#1c7430}.btn-success:not(:disabled):not(.disabled):active:focus,.btn-success:not(:disabled):not(.disabled).active:focus,.show>.btn-success.dropdown-toggle:focus{-webkit-box-shadow:0 0 0 0.2rem rgba(72, 180, 97, 0.5);box-shadow:0 0 0 0.2rem rgba(72, 180, 97, 0.5)}.btn-info{color:#fff;background-color:#17a2b8;border-color:#17a2b8}.btn-info:hover{color:#fff;background-color:#138496;border-color:#117a8b}.btn-info:focus,.btn-info.focus{color:#fff;background-color:#138496;border-color:#117a8b;-webkit-box-shadow:0 0 0 0.2rem rgba(58, 176, 195, 0.5);box-shadow:0 0 0 0.2rem rgba(58, 176, 195, 0.5)}.btn-info.disabled,.btn-info:disabled{color:#fff;background-color:#17a2b8;border-color:#17a2b8}.btn-info:not(:disabled):not(.disabled):active,.btn-info:not(:disabled):not(.disabled).active,.show>.btn-info.dropdown-toggle{color:#fff;background-color:#117a8b;border-color:#10707f}.btn-info:not(:disabled):not(.disabled):active:focus,.btn-info:not(:disabled):not(.disabled).active:focus,.show>.btn-info.dropdown-toggle:focus{-webkit-box-shadow:0 0 0 0.2rem rgba(58, 176, 195, 0.5);box-shadow:0 0 0 0.2rem rgba(58, 176, 195, 0.5)}.btn-warning{color:#212529;background-color:#ffc107;border-color:#ffc107}.btn-warning:hover{color:#212529;background-color:#e0a800;border-color:#d39e00}.btn-warning:focus,.btn-warning.focus{color:#212529;background-color:#e0a800;border-color:#d39e00;-webkit-box-shadow:0 0 0 0.2rem rgba(222, 170, 12, 0.5);box-shadow:0 0 0 0.2rem rgba(222, 170, 12, 0.5)}.btn-warning.disabled,.btn-warning:disabled{color:#212529;background-color:#ffc107;border-color:#ffc107}.btn-warning:not(:disabled):not(.disabled):active,.btn-warning:not(:disabled):not(.disabled).active,.show>.btn-warning.dropdown-toggle{color:#212529;background-color:#d39e00;border-color:#c69500}.btn-warning:not(:disabled):not(.disabled):active:focus,.btn-warning:not(:disabled):not(.disabled).active:focus,.show>.btn-warning.dropdown-toggle:focus{-webkit-box-shadow:0 0 0 0.2rem rgba(222, 170, 12, 0.5);box-shadow:0 0 0 0.2rem rgba(222, 170, 12, 0.5)}.btn-danger{color:#fff;background-color:#dc3545;border-color:#dc3545}.btn-danger:hover{color:#fff;background-color:#c82333;border-color:#bd2130}.btn-danger:focus,.btn-danger.focus{color:#fff;background-color:#c82333;border-color:#bd2130;-webkit-box-shadow:0 0 0 0.2rem rgba(225, 83, 97, 0.5);box-shadow:0 0 0 0.2rem rgba(225, 83, 97, 0.5)}.btn-danger.disabled,.btn-danger:disabled{color:#fff;background-color:#dc3545;border-color:#dc3545}.btn-danger:not(:disabled):not(.disabled):active,.btn-danger:not(:disabled):not(.disabled).active,.show>.btn-danger.dropdown-toggle{color:#fff;background-color:#bd2130;border-color:#b21f2d}.btn-danger:not(:disabled):not(.disabled):active:focus,.btn-danger:not(:disabled):not(.disabled).active:focus,.show>.btn-danger.dropdown-toggle:focus{-webkit-box-shadow:0 0 0 0.2rem rgba(225, 83, 97, 0.5);box-shadow:0 0 0 0.2rem rgba(225, 83, 97, 0.5)}.btn-light{color:#212529;background-color:#f8f9fa;border-color:#f8f9fa}.btn-light:hover{color:#212529;background-color:#e2e6ea;border-color:#dae0e5}.btn-light:focus,.btn-light.focus{color:#212529;background-color:#e2e6ea;border-color:#dae0e5;-webkit-box-shadow:0 0 0 0.2rem rgba(216, 217, 219, 0.5);box-shadow:0 0 0 0.2rem rgba(216, 217, 219, 0.5)}.btn-light.disabled,.btn-light:disabled{color:#212529;background-color:#f8f9fa;border-color:#f8f9fa}.btn-light:not(:disabled):not(.disabled):active,.btn-light:not(:disabled):not(.disabled).active,.show>.btn-light.dropdown-toggle{color:#212529;background-color:#dae0e5;border-color:#d3d9df}.btn-light:not(:disabled):not(.disabled):active:focus,.btn-light:not(:disabled):not(.disabled).active:focus,.show>.btn-light.dropdown-toggle:focus{-webkit-box-shadow:0 0 0 0.2rem rgba(216, 217, 219, 0.5);box-shadow:0 0 0 0.2rem rgba(216, 217, 219, 0.5)}.btn-dark{color:#fff;background-color:#343a40;border-color:#343a40}.btn-dark:hover{color:#fff;background-color:#23272b;border-color:#1d2124}.btn-dark:focus,.btn-dark.focus{color:#fff;background-color:#23272b;border-color:#1d2124;-webkit-box-shadow:0 0 0 0.2rem rgba(82, 88, 93, 0.5);box-shadow:0 0 0 0.2rem rgba(82, 88, 93, 0.5)}.btn-dark.disabled,.btn-dark:disabled{color:#fff;background-color:#343a40;border-color:#343a40}.btn-dark:not(:disabled):not(.disabled):active,.btn-dark:not(:disabled):not(.disabled).active,.show>.btn-dark.dropdown-toggle{color:#fff;background-color:#1d2124;border-color:#171a1d}.btn-dark:not(:disabled):not(.disabled):active:focus,.btn-dark:not(:disabled):not(.disabled).active:focus,.show>.btn-dark.dropdown-toggle:focus{-webkit-box-shadow:0 0 0 0.2rem rgba(82, 88, 93, 0.5);box-shadow:0 0 0 0.2rem rgba(82, 88, 93, 0.5)}.btn-outline-primary{color:#007bff;border-color:#007bff}.btn-outline-primary:hover{color:#fff;background-color:#007bff;border-color:#007bff}.btn-outline-primary:focus,.btn-outline-primary.focus{-webkit-box-shadow:0 0 0 0.2rem rgba(0, 123, 255, 0.5);box-shadow:0 0 0 0.2rem rgba(0, 123, 255, 0.5)}.btn-outline-primary.disabled,.btn-outline-primary:disabled{color:#007bff;background-color:transparent}.btn-outline-primary:not(:disabled):not(.disabled):active,.btn-outline-primary:not(:disabled):not(.disabled).active,.show>.btn-outline-primary.dropdown-toggle{color:#fff;background-color:#007bff;border-color:#007bff}.btn-outline-primary:not(:disabled):not(.disabled):active:focus,.btn-outline-primary:not(:disabled):not(.disabled).active:focus,.show>.btn-outline-primary.dropdown-toggle:focus{-webkit-box-shadow:0 0 0 0.2rem rgba(0, 123, 255, 0.5);box-shadow:0 0 0 0.2rem rgba(0, 123, 255, 0.5)}.btn-outline-secondary{color:#6c757d;border-color:#6c757d}.btn-outline-secondary:hover{color:#fff;background-color:#6c757d;border-color:#6c757d}.btn-outline-secondary:focus,.btn-outline-secondary.focus{-webkit-box-shadow:0 0 0 0.2rem rgba(108, 117, 125, 0.5);box-shadow:0 0 0 0.2rem rgba(108, 117, 125, 0.5)}.btn-outline-secondary.disabled,.btn-outline-secondary:disabled{color:#6c757d;background-color:transparent}.btn-outline-secondary:not(:disabled):not(.disabled):active,.btn-outline-secondary:not(:disabled):not(.disabled).active,.show>.btn-outline-secondary.dropdown-toggle{color:#fff;background-color:#6c757d;border-color:#6c757d}.btn-outline-secondary:not(:disabled):not(.disabled):active:focus,.btn-outline-secondary:not(:disabled):not(.disabled).active:focus,.show>.btn-outline-secondary.dropdown-toggle:focus{-webkit-box-shadow:0 0 0 0.2rem rgba(108, 117, 125, 0.5);box-shadow:0 0 0 0.2rem rgba(108, 117, 125, 0.5)}.btn-outline-success{color:#28a745;border-color:#28a745}.btn-outline-success:hover{color:#fff;background-color:#28a745;border-color:#28a745}.btn-outline-success:focus,.btn-outline-success.focus{-webkit-box-shadow:0 0 0 0.2rem rgba(40, 167, 69, 0.5);box-shadow:0 0 0 0.2rem rgba(40, 167, 69, 0.5)}.btn-outline-success.disabled,.btn-outline-success:disabled{color:#28a745;background-color:transparent}.btn-outline-success:not(:disabled):not(.disabled):active,.btn-outline-success:not(:disabled):not(.disabled).active,.show>.btn-outline-success.dropdown-toggle{color:#fff;background-color:#28a745;border-color:#28a745}.btn-outline-success:not(:disabled):not(.disabled):active:focus,.btn-outline-success:not(:disabled):not(.disabled).active:focus,.show>.btn-outline-success.dropdown-toggle:focus{-webkit-box-shadow:0 0 0 0.2rem rgba(40, 167, 69, 0.5);box-shadow:0 0 0 0.2rem rgba(40, 167, 69, 0.5)}.btn-outline-info{color:#17a2b8;border-color:#17a2b8}.btn-outline-info:hover{color:#fff;background-color:#17a2b8;border-color:#17a2b8}.btn-outline-info:focus,.btn-outline-info.focus{-webkit-box-shadow:0 0 0 0.2rem rgba(23, 162, 184, 0.5);box-shadow:0 0 0 0.2rem rgba(23, 162, 184, 0.5)}.btn-outline-info.disabled,.btn-outline-info:disabled{color:#17a2b8;background-color:transparent}.btn-outline-info:not(:disabled):not(.disabled):active,.btn-outline-info:not(:disabled):not(.disabled).active,.show>.btn-outline-info.dropdown-toggle{color:#fff;background-color:#17a2b8;border-color:#17a2b8}.btn-outline-info:not(:disabled):not(.disabled):active:focus,.btn-outline-info:not(:disabled):not(.disabled).active:focus,.show>.btn-outline-info.dropdown-toggle:focus{-webkit-box-shadow:0 0 0 0.2rem rgba(23, 162, 184, 0.5);box-shadow:0 0 0 0.2rem rgba(23, 162, 184, 0.5)}.btn-outline-warning{color:#ffc107;border-color:#ffc107}.btn-outline-warning:hover{color:#212529;background-color:#ffc107;border-color:#ffc107}.btn-outline-warning:focus,.btn-outline-warning.focus{-webkit-box-shadow:0 0 0 0.2rem rgba(255, 193, 7, 0.5);box-shadow:0 0 0 0.2rem rgba(255, 193, 7, 0.5)}.btn-outline-warning.disabled,.btn-outline-warning:disabled{color:#ffc107;background-color:transparent}.btn-outline-warning:not(:disabled):not(.disabled):active,.btn-outline-warning:not(:disabled):not(.disabled).active,.show>.btn-outline-warning.dropdown-toggle{color:#212529;background-color:#ffc107;border-color:#ffc107}.btn-outline-warning:not(:disabled):not(.disabled):active:focus,.btn-outline-warning:not(:disabled):not(.disabled).active:focus,.show>.btn-outline-warning.dropdown-toggle:focus{-webkit-box-shadow:0 0 0 0.2rem rgba(255, 193, 7, 0.5);box-shadow:0 0 0 0.2rem rgba(255, 193, 7, 0.5)}.btn-outline-danger{color:#dc3545;border-color:#dc3545}.btn-outline-danger:hover{color:#fff;background-color:#dc3545;border-color:#dc3545}.btn-outline-danger:focus,.btn-outline-danger.focus{-webkit-box-shadow:0 0 0 0.2rem rgba(220, 53, 69, 0.5);box-shadow:0 0 0 0.2rem rgba(220, 53, 69, 0.5)}.btn-outline-danger.disabled,.btn-outline-danger:disabled{color:#dc3545;background-color:transparent}.btn-outline-danger:not(:disabled):not(.disabled):active,.btn-outline-danger:not(:disabled):not(.disabled).active,.show>.btn-outline-danger.dropdown-toggle{color:#fff;background-color:#dc3545;border-color:#dc3545}.btn-outline-danger:not(:disabled):not(.disabled):active:focus,.btn-outline-danger:not(:disabled):not(.disabled).active:focus,.show>.btn-outline-danger.dropdown-toggle:focus{-webkit-box-shadow:0 0 0 0.2rem rgba(220, 53, 69, 0.5);box-shadow:0 0 0 0.2rem rgba(220, 53, 69, 0.5)}.btn-outline-light{color:#f8f9fa;border-color:#f8f9fa}.btn-outline-light:hover{color:#212529;background-color:#f8f9fa;border-color:#f8f9fa}.btn-outline-light:focus,.btn-outline-light.focus{-webkit-box-shadow:0 0 0 0.2rem rgba(248, 249, 250, 0.5);box-shadow:0 0 0 0.2rem rgba(248, 249, 250, 0.5)}.btn-outline-light.disabled,.btn-outline-light:disabled{color:#f8f9fa;background-color:transparent}.btn-outline-light:not(:disabled):not(.disabled):active,.btn-outline-light:not(:disabled):not(.disabled).active,.show>.btn-outline-light.dropdown-toggle{color:#212529;background-color:#f8f9fa;border-color:#f8f9fa}.btn-outline-light:not(:disabled):not(.disabled):active:focus,.btn-outline-light:not(:disabled):not(.disabled).active:focus,.show>.btn-outline-light.dropdown-toggle:focus{-webkit-box-shadow:0 0 0 0.2rem rgba(248, 249, 250, 0.5);box-shadow:0 0 0 0.2rem rgba(248, 249, 250, 0.5)}.btn-outline-dark{color:#343a40;border-color:#343a40}.btn-outline-dark:hover{color:#fff;background-color:#343a40;border-color:#343a40}.btn-outline-dark:focus,.btn-outline-dark.focus{-webkit-box-shadow:0 0 0 0.2rem rgba(52, 58, 64, 0.5);box-shadow:0 0 0 0.2rem rgba(52, 58, 64, 0.5)}.btn-outline-dark.disabled,.btn-outline-dark:disabled{color:#343a40;background-color:transparent}.btn-outline-dark:not(:disabled):not(.disabled):active,.btn-outline-dark:not(:disabled):not(.disabled).active,.show>.btn-outline-dark.dropdown-toggle{color:#fff;background-color:#343a40;border-color:#343a40}.btn-outline-dark:not(:disabled):not(.disabled):active:focus,.btn-outline-dark:not(:disabled):not(.disabled).active:focus,.show>.btn-outline-dark.dropdown-toggle:focus{-webkit-box-shadow:0 0 0 0.2rem rgba(52, 58, 64, 0.5);box-shadow:0 0 0 0.2rem rgba(52, 58, 64, 0.5)}.btn-link{font-weight:400;color:#007bff;text-decoration:none}.btn-link:hover{color:#0056b3;text-decoration:underline}.btn-link:focus,.btn-link.focus{text-decoration:underline}.btn-link:disabled,.btn-link.disabled{color:#6c757d;pointer-events:none}.btn-lg{padding:0.5rem 1rem;font-size:1.25rem;line-height:1.5;border-radius:0.3rem}.btn-sm{padding:0.25rem 0.5rem;font-size:0.875rem;line-height:1.5;border-radius:0.2rem}.btn-block{display:block;width:100%}.btn-block+.btn-block{margin-top:0.5rem}input[type=submit].btn-block,input[type=reset].btn-block,input[type=button].btn-block{width:100%}.fade{-webkit-transition:opacity 0.15s linear;transition:opacity 0.15s linear}@media (prefers-reduced-motion: reduce){.fade{-webkit-transition:none;transition:none}}.fade:not(.show){opacity:0}.collapse:not(.show){display:none}.collapsing{position:relative;height:0;overflow:hidden;-webkit-transition:height 0.35s ease;transition:height 0.35s ease}@media (prefers-reduced-motion: reduce){.collapsing{-webkit-transition:none;transition:none}}.dropup,.dropright,.dropdown,.dropleft{position:relative}.dropdown-toggle{white-space:nowrap}.dropdown-toggle::after{display:inline-block;margin-left:0.255em;vertical-align:0.255em;content:\"\";border-top:0.3em solid;border-right:0.3em solid transparent;border-bottom:0;border-left:0.3em solid transparent}.dropdown-toggle:empty::after{margin-left:0}.dropdown-menu{position:absolute;top:100%;left:0;z-index:1000;display:none;float:left;min-width:10rem;padding:0.5rem 0;margin:0.125rem 0 0;font-size:1rem;color:#212529;text-align:left;list-style:none;background-color:#fff;background-clip:padding-box;border:1px solid rgba(0, 0, 0, 0.15);border-radius:0.25rem}.dropdown-menu-left{right:auto;left:0}.dropdown-menu-right{right:0;left:auto}@media (min-width: 576px){.dropdown-menu-sm-left{right:auto;left:0}.dropdown-menu-sm-right{right:0;left:auto}}@media (min-width: 768px){.dropdown-menu-md-left{right:auto;left:0}.dropdown-menu-md-right{right:0;left:auto}}@media (min-width: 992px){.dropdown-menu-lg-left{right:auto;left:0}.dropdown-menu-lg-right{right:0;left:auto}}@media (min-width: 1200px){.dropdown-menu-xl-left{right:auto;left:0}.dropdown-menu-xl-right{right:0;left:auto}}.dropup .dropdown-menu{top:auto;bottom:100%;margin-top:0;margin-bottom:0.125rem}.dropup .dropdown-toggle::after{display:inline-block;margin-left:0.255em;vertical-align:0.255em;content:\"\";border-top:0;border-right:0.3em solid transparent;border-bottom:0.3em solid;border-left:0.3em solid transparent}.dropup .dropdown-toggle:empty::after{margin-left:0}.dropright .dropdown-menu{top:0;right:auto;left:100%;margin-top:0;margin-left:0.125rem}.dropright .dropdown-toggle::after{display:inline-block;margin-left:0.255em;vertical-align:0.255em;content:\"\";border-top:0.3em solid transparent;border-right:0;border-bottom:0.3em solid transparent;border-left:0.3em solid}.dropright .dropdown-toggle:empty::after{margin-left:0}.dropright .dropdown-toggle::after{vertical-align:0}.dropleft .dropdown-menu{top:0;right:100%;left:auto;margin-top:0;margin-right:0.125rem}.dropleft .dropdown-toggle::after{display:inline-block;margin-left:0.255em;vertical-align:0.255em;content:\"\"}.dropleft .dropdown-toggle::after{display:none}.dropleft .dropdown-toggle::before{display:inline-block;margin-right:0.255em;vertical-align:0.255em;content:\"\";border-top:0.3em solid transparent;border-right:0.3em solid;border-bottom:0.3em solid transparent}.dropleft .dropdown-toggle:empty::after{margin-left:0}.dropleft .dropdown-toggle::before{vertical-align:0}.dropdown-menu[x-placement^=top],.dropdown-menu[x-placement^=right],.dropdown-menu[x-placement^=bottom],.dropdown-menu[x-placement^=left]{right:auto;bottom:auto}.dropdown-divider{height:0;margin:0.5rem 0;overflow:hidden;border-top:1px solid #e9ecef}.dropdown-item{display:block;width:100%;padding:0.25rem 1.5rem;clear:both;font-weight:400;color:#212529;text-align:inherit;white-space:nowrap;background-color:transparent;border:0}.dropdown-item:hover,.dropdown-item:focus{color:#16181b;text-decoration:none;background-color:#f8f9fa}.dropdown-item.active,.dropdown-item:active{color:#fff;text-decoration:none;background-color:#007bff}.dropdown-item.disabled,.dropdown-item:disabled{color:#6c757d;pointer-events:none;background-color:transparent}.dropdown-menu.show{display:block}.dropdown-header{display:block;padding:0.5rem 1.5rem;margin-bottom:0;font-size:0.875rem;color:#6c757d;white-space:nowrap}.dropdown-item-text{display:block;padding:0.25rem 1.5rem;color:#212529}.input-group{position:relative;display:-ms-flexbox;display:flex;-ms-flex-wrap:wrap;flex-wrap:wrap;-ms-flex-align:stretch;align-items:stretch;width:100%}.input-group>.form-control,.input-group>.form-control-plaintext,.input-group>.custom-select,.input-group>.custom-file{position:relative;-ms-flex:1 1 auto;flex:1 1 auto;width:1%;min-width:0;margin-bottom:0}.input-group>.form-control+.form-control,.input-group>.form-control+.custom-select,.input-group>.form-control+.custom-file,.input-group>.form-control-plaintext+.form-control,.input-group>.form-control-plaintext+.custom-select,.input-group>.form-control-plaintext+.custom-file,.input-group>.custom-select+.form-control,.input-group>.custom-select+.custom-select,.input-group>.custom-select+.custom-file,.input-group>.custom-file+.form-control,.input-group>.custom-file+.custom-select,.input-group>.custom-file+.custom-file{margin-left:-1px}.input-group>.form-control:focus,.input-group>.custom-select:focus,.input-group>.custom-file .custom-file-input:focus~.custom-file-label{z-index:3}.input-group>.custom-file .custom-file-input:focus{z-index:4}.input-group>.form-control:not(:last-child),.input-group>.custom-select:not(:last-child){border-top-right-radius:0;border-bottom-right-radius:0}.input-group>.form-control:not(:first-child),.input-group>.custom-select:not(:first-child){border-top-left-radius:0;border-bottom-left-radius:0}.input-group>.custom-file{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center}.input-group>.custom-file:not(:last-child) .custom-file-label,.input-group>.custom-file:not(:last-child) .custom-file-label::after{border-top-right-radius:0;border-bottom-right-radius:0}.input-group>.custom-file:not(:first-child) .custom-file-label{border-top-left-radius:0;border-bottom-left-radius:0}.input-group-prepend,.input-group-append{display:-ms-flexbox;display:flex}.input-group-prepend .btn,.input-group-append .btn{position:relative;z-index:2}.input-group-prepend .btn:focus,.input-group-append .btn:focus{z-index:3}.input-group-prepend .btn+.btn,.input-group-prepend .btn+.input-group-text,.input-group-prepend .input-group-text+.input-group-text,.input-group-prepend .input-group-text+.btn,.input-group-append .btn+.btn,.input-group-append .btn+.input-group-text,.input-group-append .input-group-text+.input-group-text,.input-group-append .input-group-text+.btn{margin-left:-1px}.input-group-prepend{margin-right:-1px}.input-group-append{margin-left:-1px}.input-group-text{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;padding:0.375rem 0.75rem;margin-bottom:0;font-size:1rem;font-weight:400;line-height:1.5;color:#495057;text-align:center;white-space:nowrap;background-color:#e9ecef;border:1px solid #ced4da;border-radius:0.25rem}.input-group-text input[type=radio],.input-group-text input[type=checkbox]{margin-top:0}.input-group-lg>.form-control:not(textarea),.input-group-lg>.custom-select{height:calc(1.5em + 1rem + 2px)}.input-group-lg>.form-control,.input-group-lg>.custom-select,.input-group-lg>.input-group-prepend>.input-group-text,.input-group-lg>.input-group-append>.input-group-text,.input-group-lg>.input-group-prepend>.btn,.input-group-lg>.input-group-append>.btn{padding:0.5rem 1rem;font-size:1.25rem;line-height:1.5;border-radius:0.3rem}.input-group-sm>.form-control:not(textarea),.input-group-sm>.custom-select{height:calc(1.5em + 0.5rem + 2px)}.input-group-sm>.form-control,.input-group-sm>.custom-select,.input-group-sm>.input-group-prepend>.input-group-text,.input-group-sm>.input-group-append>.input-group-text,.input-group-sm>.input-group-prepend>.btn,.input-group-sm>.input-group-append>.btn{padding:0.25rem 0.5rem;font-size:0.875rem;line-height:1.5;border-radius:0.2rem}.input-group-lg>.custom-select,.input-group-sm>.custom-select{padding-right:1.75rem}.input-group>.input-group-prepend>.btn,.input-group>.input-group-prepend>.input-group-text,.input-group>.input-group-append:not(:last-child)>.btn,.input-group>.input-group-append:not(:last-child)>.input-group-text,.input-group>.input-group-append:last-child>.btn:not(:last-child):not(.dropdown-toggle),.input-group>.input-group-append:last-child>.input-group-text:not(:last-child){border-top-right-radius:0;border-bottom-right-radius:0}.input-group>.input-group-append>.btn,.input-group>.input-group-append>.input-group-text,.input-group>.input-group-prepend:not(:first-child)>.btn,.input-group>.input-group-prepend:not(:first-child)>.input-group-text,.input-group>.input-group-prepend:first-child>.btn:not(:first-child),.input-group>.input-group-prepend:first-child>.input-group-text:not(:first-child){border-top-left-radius:0;border-bottom-left-radius:0}.custom-control{position:relative;z-index:1;display:block;min-height:1.5rem;padding-left:1.5rem}.custom-control-inline{display:-ms-inline-flexbox;display:inline-flex;margin-right:1rem}.custom-control-input{position:absolute;left:0;z-index:-1;width:1rem;height:1.25rem;opacity:0}.custom-control-input:checked~.custom-control-label::before{color:#fff;border-color:#007bff;background-color:#007bff}.custom-control-input:focus~.custom-control-label::before{-webkit-box-shadow:0 0 0 0.2rem rgba(0, 123, 255, 0.25);box-shadow:0 0 0 0.2rem rgba(0, 123, 255, 0.25)}.custom-control-input:focus:not(:checked)~.custom-control-label::before{border-color:#80bdff}.custom-control-input:not(:disabled):active~.custom-control-label::before{color:#fff;background-color:#b3d7ff;border-color:#b3d7ff}.custom-control-input[disabled]~.custom-control-label,.custom-control-input:disabled~.custom-control-label{color:#6c757d}.custom-control-input[disabled]~.custom-control-label::before,.custom-control-input:disabled~.custom-control-label::before{background-color:#e9ecef}.custom-control-label{position:relative;margin-bottom:0;vertical-align:top}.custom-control-label::before{position:absolute;top:0.25rem;left:-1.5rem;display:block;width:1rem;height:1rem;pointer-events:none;content:\"\";background-color:#fff;border:#adb5bd solid 1px}.custom-control-label::after{position:absolute;top:0.25rem;left:-1.5rem;display:block;width:1rem;height:1rem;content:\"\";background:no-repeat 50%/50% 50%}.custom-checkbox .custom-control-label::before{border-radius:0.25rem}.custom-checkbox .custom-control-input:checked~.custom-control-label::after{background-image:url(\"data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' width='8' height='8' viewBox='0 0 8 8'%3e%3cpath fill='%23fff' d='M6.564.75l-3.59 3.612-1.538-1.55L0 4.26l2.974 2.99L8 2.193z'/%3e%3c/svg%3e\")}.custom-checkbox .custom-control-input:indeterminate~.custom-control-label::before{border-color:#007bff;background-color:#007bff}.custom-checkbox .custom-control-input:indeterminate~.custom-control-label::after{background-image:url(\"data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' width='4' height='4' viewBox='0 0 4 4'%3e%3cpath stroke='%23fff' d='M0 2h4'/%3e%3c/svg%3e\")}.custom-checkbox .custom-control-input:disabled:checked~.custom-control-label::before{background-color:rgba(0, 123, 255, 0.5)}.custom-checkbox .custom-control-input:disabled:indeterminate~.custom-control-label::before{background-color:rgba(0, 123, 255, 0.5)}.custom-radio .custom-control-label::before{border-radius:50%}.custom-radio .custom-control-input:checked~.custom-control-label::after{background-image:url(\"data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' width='12' height='12' viewBox='-4 -4 8 8'%3e%3ccircle r='3' fill='%23fff'/%3e%3c/svg%3e\")}.custom-radio .custom-control-input:disabled:checked~.custom-control-label::before{background-color:rgba(0, 123, 255, 0.5)}.custom-switch{padding-left:2.25rem}.custom-switch .custom-control-label::before{left:-2.25rem;width:1.75rem;pointer-events:all;border-radius:0.5rem}.custom-switch .custom-control-label::after{top:calc(0.25rem + 2px);left:calc(-2.25rem + 2px);width:calc(1rem - 4px);height:calc(1rem - 4px);background-color:#adb5bd;border-radius:0.5rem;-webkit-transition:background-color 0.15s ease-in-out, border-color 0.15s ease-in-out, -webkit-transform 0.15s ease-in-out, -webkit-box-shadow 0.15s ease-in-out;transition:background-color 0.15s ease-in-out, border-color 0.15s ease-in-out, -webkit-transform 0.15s ease-in-out, -webkit-box-shadow 0.15s ease-in-out;transition:transform 0.15s ease-in-out, background-color 0.15s ease-in-out, border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;transition:transform 0.15s ease-in-out, background-color 0.15s ease-in-out, border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out, -webkit-transform 0.15s ease-in-out, -webkit-box-shadow 0.15s ease-in-out}@media (prefers-reduced-motion: reduce){.custom-switch .custom-control-label::after{-webkit-transition:none;transition:none}}.custom-switch .custom-control-input:checked~.custom-control-label::after{background-color:#fff;-webkit-transform:translateX(0.75rem);transform:translateX(0.75rem)}.custom-switch .custom-control-input:disabled:checked~.custom-control-label::before{background-color:rgba(0, 123, 255, 0.5)}.custom-select{display:inline-block;width:100%;height:calc(1.5em + 0.75rem + 2px);padding:0.375rem 1.75rem 0.375rem 0.75rem;font-size:1rem;font-weight:400;line-height:1.5;color:#495057;vertical-align:middle;background:#fff url(\"data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' width='4' height='5' viewBox='0 0 4 5'%3e%3cpath fill='%23343a40' d='M2 0L0 2h4zm0 5L0 3h4z'/%3e%3c/svg%3e\") no-repeat right 0.75rem center/8px 10px;border:1px solid #ced4da;border-radius:0.25rem;-webkit-appearance:none;-moz-appearance:none;appearance:none}.custom-select:focus{border-color:#80bdff;outline:0;-webkit-box-shadow:0 0 0 0.2rem rgba(0, 123, 255, 0.25);box-shadow:0 0 0 0.2rem rgba(0, 123, 255, 0.25)}.custom-select:focus::-ms-value{color:#495057;background-color:#fff}.custom-select[multiple],.custom-select[size]:not([size=\"1\"]){height:auto;padding-right:0.75rem;background-image:none}.custom-select:disabled{color:#6c757d;background-color:#e9ecef}.custom-select::-ms-expand{display:none}.custom-select:-moz-focusring{color:transparent;text-shadow:0 0 0 #495057}.custom-select-sm{height:calc(1.5em + 0.5rem + 2px);padding-top:0.25rem;padding-bottom:0.25rem;padding-left:0.5rem;font-size:0.875rem}.custom-select-lg{height:calc(1.5em + 1rem + 2px);padding-top:0.5rem;padding-bottom:0.5rem;padding-left:1rem;font-size:1.25rem}.custom-file{position:relative;display:inline-block;width:100%;height:calc(1.5em + 0.75rem + 2px);margin-bottom:0}.custom-file-input{position:relative;z-index:2;width:100%;height:calc(1.5em + 0.75rem + 2px);margin:0;opacity:0}.custom-file-input:focus~.custom-file-label{border-color:#80bdff;-webkit-box-shadow:0 0 0 0.2rem rgba(0, 123, 255, 0.25);box-shadow:0 0 0 0.2rem rgba(0, 123, 255, 0.25)}.custom-file-input[disabled]~.custom-file-label,.custom-file-input:disabled~.custom-file-label{background-color:#e9ecef}.custom-file-input:lang(en)~.custom-file-label::after{content:\"Browse\"}.custom-file-input~.custom-file-label[data-browse]::after{content:attr(data-browse)}.custom-file-label{position:absolute;top:0;right:0;left:0;z-index:1;height:calc(1.5em + 0.75rem + 2px);padding:0.375rem 0.75rem;font-weight:400;line-height:1.5;color:#495057;background-color:#fff;border:1px solid #ced4da;border-radius:0.25rem}.custom-file-label::after{position:absolute;top:0;right:0;bottom:0;z-index:3;display:block;height:calc(1.5em + 0.75rem);padding:0.375rem 0.75rem;line-height:1.5;color:#495057;content:\"Browse\";background-color:#e9ecef;border-left:inherit;border-radius:0 0.25rem 0.25rem 0}.custom-range{width:100%;height:1.4rem;padding:0;background-color:transparent;-webkit-appearance:none;-moz-appearance:none;appearance:none}.custom-range:focus{outline:none}.custom-range:focus::-webkit-slider-thumb{-webkit-box-shadow:0 0 0 1px #fff, 0 0 0 0.2rem rgba(0, 123, 255, 0.25);box-shadow:0 0 0 1px #fff, 0 0 0 0.2rem rgba(0, 123, 255, 0.25)}.custom-range:focus::-moz-range-thumb{box-shadow:0 0 0 1px #fff, 0 0 0 0.2rem rgba(0, 123, 255, 0.25)}.custom-range:focus::-ms-thumb{box-shadow:0 0 0 1px #fff, 0 0 0 0.2rem rgba(0, 123, 255, 0.25)}.custom-range::-moz-focus-outer{border:0}.custom-range::-webkit-slider-thumb{width:1rem;height:1rem;margin-top:-0.25rem;background-color:#007bff;border:0;border-radius:1rem;-webkit-transition:background-color 0.15s ease-in-out, border-color 0.15s ease-in-out, -webkit-box-shadow 0.15s ease-in-out;transition:background-color 0.15s ease-in-out, border-color 0.15s ease-in-out, -webkit-box-shadow 0.15s ease-in-out;transition:background-color 0.15s ease-in-out, border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;transition:background-color 0.15s ease-in-out, border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out, -webkit-box-shadow 0.15s ease-in-out;-webkit-appearance:none;appearance:none}@media (prefers-reduced-motion: reduce){.custom-range::-webkit-slider-thumb{-webkit-transition:none;transition:none}}.custom-range::-webkit-slider-thumb:active{background-color:#b3d7ff}.custom-range::-webkit-slider-runnable-track{width:100%;height:0.5rem;color:transparent;cursor:pointer;background-color:#dee2e6;border-color:transparent;border-radius:1rem}.custom-range::-moz-range-thumb{width:1rem;height:1rem;background-color:#007bff;border:0;border-radius:1rem;-moz-transition:background-color 0.15s ease-in-out, border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;transition:background-color 0.15s ease-in-out, border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;-moz-appearance:none;appearance:none}@media (prefers-reduced-motion: reduce){.custom-range::-moz-range-thumb{-moz-transition:none;transition:none}}.custom-range::-moz-range-thumb:active{background-color:#b3d7ff}.custom-range::-moz-range-track{width:100%;height:0.5rem;color:transparent;cursor:pointer;background-color:#dee2e6;border-color:transparent;border-radius:1rem}.custom-range::-ms-thumb{width:1rem;height:1rem;margin-top:0;margin-right:0.2rem;margin-left:0.2rem;background-color:#007bff;border:0;border-radius:1rem;-ms-transition:background-color 0.15s ease-in-out, border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;transition:background-color 0.15s ease-in-out, border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;appearance:none}@media (prefers-reduced-motion: reduce){.custom-range::-ms-thumb{-ms-transition:none;transition:none}}.custom-range::-ms-thumb:active{background-color:#b3d7ff}.custom-range::-ms-track{width:100%;height:0.5rem;color:transparent;cursor:pointer;background-color:transparent;border-color:transparent;border-width:0.5rem}.custom-range::-ms-fill-lower{background-color:#dee2e6;border-radius:1rem}.custom-range::-ms-fill-upper{margin-right:15px;background-color:#dee2e6;border-radius:1rem}.custom-range:disabled::-webkit-slider-thumb{background-color:#adb5bd}.custom-range:disabled::-webkit-slider-runnable-track{cursor:default}.custom-range:disabled::-moz-range-thumb{background-color:#adb5bd}.custom-range:disabled::-moz-range-track{cursor:default}.custom-range:disabled::-ms-thumb{background-color:#adb5bd}.custom-control-label::before,.custom-file-label,.custom-select{-webkit-transition:background-color 0.15s ease-in-out, border-color 0.15s ease-in-out, -webkit-box-shadow 0.15s ease-in-out;transition:background-color 0.15s ease-in-out, border-color 0.15s ease-in-out, -webkit-box-shadow 0.15s ease-in-out;transition:background-color 0.15s ease-in-out, border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;transition:background-color 0.15s ease-in-out, border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out, -webkit-box-shadow 0.15s ease-in-out}@media (prefers-reduced-motion: reduce){.custom-control-label::before,.custom-file-label,.custom-select{-webkit-transition:none;transition:none}}.nav{display:-ms-flexbox;display:flex;-ms-flex-wrap:wrap;flex-wrap:wrap;padding-left:0;margin-bottom:0;list-style:none}.nav-link{display:block;padding:0.5rem 1rem}.nav-link:hover,.nav-link:focus{text-decoration:none}.nav-link.disabled{color:#6c757d;pointer-events:none;cursor:default}.nav-tabs{border-bottom:1px solid #dee2e6}.nav-tabs .nav-item{margin-bottom:-1px}.nav-tabs .nav-link{border:1px solid transparent;border-top-left-radius:0.25rem;border-top-right-radius:0.25rem}.nav-tabs .nav-link:hover,.nav-tabs .nav-link:focus{border-color:#e9ecef #e9ecef #dee2e6}.nav-tabs .nav-link.disabled{color:#6c757d;background-color:transparent;border-color:transparent}.nav-tabs .nav-link.active,.nav-tabs .nav-item.show .nav-link{color:#495057;background-color:#fff;border-color:#dee2e6 #dee2e6 #fff}.nav-tabs .dropdown-menu{margin-top:-1px;border-top-left-radius:0;border-top-right-radius:0}.nav-pills .nav-link{border-radius:0.25rem}.nav-pills .nav-link.active,.nav-pills .show>.nav-link{color:#fff;background-color:#007bff}.nav-fill>.nav-link,.nav-fill .nav-item{-ms-flex:1 1 auto;flex:1 1 auto;text-align:center}.nav-justified>.nav-link,.nav-justified .nav-item{-ms-flex-preferred-size:0;flex-basis:0;-ms-flex-positive:1;flex-grow:1;text-align:center}.tab-content>.tab-pane{display:none}.tab-content>.active{display:block}.navbar{position:relative;display:-ms-flexbox;display:flex;-ms-flex-wrap:wrap;flex-wrap:wrap;-ms-flex-align:center;align-items:center;-ms-flex-pack:justify;justify-content:space-between;padding:0.5rem 1rem}.navbar>.container-xl,.navbar>.container-lg,.navbar>.container-md,.navbar>.container-sm,.navbar .container,.navbar .container-fluid{display:-ms-flexbox;display:flex;-ms-flex-wrap:wrap;flex-wrap:wrap;-ms-flex-align:center;align-items:center;-ms-flex-pack:justify;justify-content:space-between}.navbar-brand{display:inline-block;padding-top:0.3125rem;padding-bottom:0.3125rem;margin-right:1rem;font-size:1.25rem;line-height:inherit;white-space:nowrap}.navbar-brand:hover,.navbar-brand:focus{text-decoration:none}.navbar-nav{display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column;padding-left:0;margin-bottom:0;list-style:none}.navbar-nav .nav-link{padding-right:0;padding-left:0}.navbar-nav .dropdown-menu{position:static;float:none}.navbar-text{display:inline-block;padding-top:0.5rem;padding-bottom:0.5rem}.navbar-collapse{-ms-flex-preferred-size:100%;flex-basis:100%;-ms-flex-positive:1;flex-grow:1;-ms-flex-align:center;align-items:center}.navbar-toggler{padding:0.25rem 0.75rem;font-size:1.25rem;line-height:1;background-color:transparent;border:1px solid transparent;border-radius:0.25rem}.navbar-toggler:hover,.navbar-toggler:focus{text-decoration:none}.navbar-toggler-icon{display:inline-block;width:1.5em;height:1.5em;vertical-align:middle;content:\"\";background:no-repeat center center;background-size:100% 100%}@media (max-width: 575.98px){.navbar-expand-sm>.container-xl,.navbar-expand-sm>.container-lg,.navbar-expand-sm>.container-md,.navbar-expand-sm>.container-sm,.navbar-expand-sm>.container,.navbar-expand-sm>.container-fluid{padding-right:0;padding-left:0}}@media (min-width: 576px){.navbar-expand-sm{-ms-flex-flow:row nowrap;flex-flow:row nowrap;-ms-flex-pack:start;justify-content:flex-start}.navbar-expand-sm .navbar-nav{-ms-flex-direction:row;flex-direction:row}.navbar-expand-sm .navbar-nav .dropdown-menu{position:absolute}.navbar-expand-sm .navbar-nav .nav-link{padding-right:0.5rem;padding-left:0.5rem}.navbar-expand-sm>.container-xl,.navbar-expand-sm>.container-lg,.navbar-expand-sm>.container-md,.navbar-expand-sm>.container-sm,.navbar-expand-sm>.container,.navbar-expand-sm>.container-fluid{-ms-flex-wrap:nowrap;flex-wrap:nowrap}.navbar-expand-sm .navbar-collapse{display:-ms-flexbox !important;display:flex !important;-ms-flex-preferred-size:auto;flex-basis:auto}.navbar-expand-sm .navbar-toggler{display:none}}@media (max-width: 767.98px){.navbar-expand-md>.container-xl,.navbar-expand-md>.container-lg,.navbar-expand-md>.container-md,.navbar-expand-md>.container-sm,.navbar-expand-md>.container,.navbar-expand-md>.container-fluid{padding-right:0;padding-left:0}}@media (min-width: 768px){.navbar-expand-md{-ms-flex-flow:row nowrap;flex-flow:row nowrap;-ms-flex-pack:start;justify-content:flex-start}.navbar-expand-md .navbar-nav{-ms-flex-direction:row;flex-direction:row}.navbar-expand-md .navbar-nav .dropdown-menu{position:absolute}.navbar-expand-md .navbar-nav .nav-link{padding-right:0.5rem;padding-left:0.5rem}.navbar-expand-md>.container-xl,.navbar-expand-md>.container-lg,.navbar-expand-md>.container-md,.navbar-expand-md>.container-sm,.navbar-expand-md>.container,.navbar-expand-md>.container-fluid{-ms-flex-wrap:nowrap;flex-wrap:nowrap}.navbar-expand-md .navbar-collapse{display:-ms-flexbox !important;display:flex !important;-ms-flex-preferred-size:auto;flex-basis:auto}.navbar-expand-md .navbar-toggler{display:none}}@media (max-width: 991.98px){.navbar-expand-lg>.container-xl,.navbar-expand-lg>.container-lg,.navbar-expand-lg>.container-md,.navbar-expand-lg>.container-sm,.navbar-expand-lg>.container,.navbar-expand-lg>.container-fluid{padding-right:0;padding-left:0}}@media (min-width: 992px){.navbar-expand-lg{-ms-flex-flow:row nowrap;flex-flow:row nowrap;-ms-flex-pack:start;justify-content:flex-start}.navbar-expand-lg .navbar-nav{-ms-flex-direction:row;flex-direction:row}.navbar-expand-lg .navbar-nav .dropdown-menu{position:absolute}.navbar-expand-lg .navbar-nav .nav-link{padding-right:0.5rem;padding-left:0.5rem}.navbar-expand-lg>.container-xl,.navbar-expand-lg>.container-lg,.navbar-expand-lg>.container-md,.navbar-expand-lg>.container-sm,.navbar-expand-lg>.container,.navbar-expand-lg>.container-fluid{-ms-flex-wrap:nowrap;flex-wrap:nowrap}.navbar-expand-lg .navbar-collapse{display:-ms-flexbox !important;display:flex !important;-ms-flex-preferred-size:auto;flex-basis:auto}.navbar-expand-lg .navbar-toggler{display:none}}@media (max-width: 1199.98px){.navbar-expand-xl>.container-xl,.navbar-expand-xl>.container-lg,.navbar-expand-xl>.container-md,.navbar-expand-xl>.container-sm,.navbar-expand-xl>.container,.navbar-expand-xl>.container-fluid{padding-right:0;padding-left:0}}@media (min-width: 1200px){.navbar-expand-xl{-ms-flex-flow:row nowrap;flex-flow:row nowrap;-ms-flex-pack:start;justify-content:flex-start}.navbar-expand-xl .navbar-nav{-ms-flex-direction:row;flex-direction:row}.navbar-expand-xl .navbar-nav .dropdown-menu{position:absolute}.navbar-expand-xl .navbar-nav .nav-link{padding-right:0.5rem;padding-left:0.5rem}.navbar-expand-xl>.container-xl,.navbar-expand-xl>.container-lg,.navbar-expand-xl>.container-md,.navbar-expand-xl>.container-sm,.navbar-expand-xl>.container,.navbar-expand-xl>.container-fluid{-ms-flex-wrap:nowrap;flex-wrap:nowrap}.navbar-expand-xl .navbar-collapse{display:-ms-flexbox !important;display:flex !important;-ms-flex-preferred-size:auto;flex-basis:auto}.navbar-expand-xl .navbar-toggler{display:none}}.navbar-expand{-ms-flex-flow:row nowrap;flex-flow:row nowrap;-ms-flex-pack:start;justify-content:flex-start}.navbar-expand>.container-xl,.navbar-expand>.container-lg,.navbar-expand>.container-md,.navbar-expand>.container-sm,.navbar-expand>.container,.navbar-expand>.container-fluid{padding-right:0;padding-left:0}.navbar-expand .navbar-nav{-ms-flex-direction:row;flex-direction:row}.navbar-expand .navbar-nav .dropdown-menu{position:absolute}.navbar-expand .navbar-nav .nav-link{padding-right:0.5rem;padding-left:0.5rem}.navbar-expand>.container-xl,.navbar-expand>.container-lg,.navbar-expand>.container-md,.navbar-expand>.container-sm,.navbar-expand>.container,.navbar-expand>.container-fluid{-ms-flex-wrap:nowrap;flex-wrap:nowrap}.navbar-expand .navbar-collapse{display:-ms-flexbox !important;display:flex !important;-ms-flex-preferred-size:auto;flex-basis:auto}.navbar-expand .navbar-toggler{display:none}.navbar-light .navbar-brand{color:rgba(0, 0, 0, 0.9)}.navbar-light .navbar-brand:hover,.navbar-light .navbar-brand:focus{color:rgba(0, 0, 0, 0.9)}.navbar-light .navbar-nav .nav-link{color:rgba(0, 0, 0, 0.5)}.navbar-light .navbar-nav .nav-link:hover,.navbar-light .navbar-nav .nav-link:focus{color:rgba(0, 0, 0, 0.7)}.navbar-light .navbar-nav .nav-link.disabled{color:rgba(0, 0, 0, 0.3)}.navbar-light .navbar-nav .show>.nav-link,.navbar-light .navbar-nav .active>.nav-link,.navbar-light .navbar-nav .nav-link.show,.navbar-light .navbar-nav .nav-link.active{color:rgba(0, 0, 0, 0.9)}.navbar-light .navbar-toggler{color:rgba(0, 0, 0, 0.5);border-color:rgba(0, 0, 0, 0.1)}.navbar-light .navbar-toggler-icon{background-image:url(\"data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' width='30' height='30' viewBox='0 0 30 30'%3e%3cpath stroke='rgba%280, 0, 0, 0.5%29' stroke-linecap='round' stroke-miterlimit='10' stroke-width='2' d='M4 7h22M4 15h22M4 23h22'/%3e%3c/svg%3e\")}.navbar-light .navbar-text{color:rgba(0, 0, 0, 0.5)}.navbar-light .navbar-text a{color:rgba(0, 0, 0, 0.9)}.navbar-light .navbar-text a:hover,.navbar-light .navbar-text a:focus{color:rgba(0, 0, 0, 0.9)}.navbar-dark .navbar-brand{color:#fff}.navbar-dark .navbar-brand:hover,.navbar-dark .navbar-brand:focus{color:#fff}.navbar-dark .navbar-nav .nav-link{color:rgba(255, 255, 255, 0.5)}.navbar-dark .navbar-nav .nav-link:hover,.navbar-dark .navbar-nav .nav-link:focus{color:rgba(255, 255, 255, 0.75)}.navbar-dark .navbar-nav .nav-link.disabled{color:rgba(255, 255, 255, 0.25)}.navbar-dark .navbar-nav .show>.nav-link,.navbar-dark .navbar-nav .active>.nav-link,.navbar-dark .navbar-nav .nav-link.show,.navbar-dark .navbar-nav .nav-link.active{color:#fff}.navbar-dark .navbar-toggler{color:rgba(255, 255, 255, 0.5);border-color:rgba(255, 255, 255, 0.1)}.navbar-dark .navbar-toggler-icon{background-image:url(\"data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' width='30' height='30' viewBox='0 0 30 30'%3e%3cpath stroke='rgba%28255, 255, 255, 0.5%29' stroke-linecap='round' stroke-miterlimit='10' stroke-width='2' d='M4 7h22M4 15h22M4 23h22'/%3e%3c/svg%3e\")}.navbar-dark .navbar-text{color:rgba(255, 255, 255, 0.5)}.navbar-dark .navbar-text a{color:#fff}.navbar-dark .navbar-text a:hover,.navbar-dark .navbar-text a:focus{color:#fff}.card{position:relative;display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column;min-width:0;word-wrap:break-word;background-color:#fff;background-clip:border-box;border:1px solid rgba(0, 0, 0, 0.125);border-radius:0.25rem}.card>hr{margin-right:0;margin-left:0}.card>.list-group{border-top:inherit;border-bottom:inherit}.card>.list-group:first-child{border-top-width:0;border-top-left-radius:calc(0.25rem - 1px);border-top-right-radius:calc(0.25rem - 1px)}.card>.list-group:last-child{border-bottom-width:0;border-bottom-right-radius:calc(0.25rem - 1px);border-bottom-left-radius:calc(0.25rem - 1px)}.card>.card-header+.list-group,.card>.list-group+.card-footer{border-top:0}.card-body{-ms-flex:1 1 auto;flex:1 1 auto;min-height:1px;padding:1.25rem}.card-title{margin-bottom:0.75rem}.card-subtitle{margin-top:-0.375rem;margin-bottom:0}.card-text:last-child{margin-bottom:0}.card-link:hover{text-decoration:none}.card-link+.card-link{margin-left:1.25rem}.card-header{padding:0.75rem 1.25rem;margin-bottom:0;background-color:rgba(0, 0, 0, 0.03);border-bottom:1px solid rgba(0, 0, 0, 0.125)}.card-header:first-child{border-radius:calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0}.card-footer{padding:0.75rem 1.25rem;background-color:rgba(0, 0, 0, 0.03);border-top:1px solid rgba(0, 0, 0, 0.125)}.card-footer:last-child{border-radius:0 0 calc(0.25rem - 1px) calc(0.25rem - 1px)}.card-header-tabs{margin-right:-0.625rem;margin-bottom:-0.75rem;margin-left:-0.625rem;border-bottom:0}.card-header-pills{margin-right:-0.625rem;margin-left:-0.625rem}.card-img-overlay{position:absolute;top:0;right:0;bottom:0;left:0;padding:1.25rem;border-radius:calc(0.25rem - 1px)}.card-img,.card-img-top,.card-img-bottom{-ms-flex-negative:0;flex-shrink:0;width:100%}.card-img,.card-img-top{border-top-left-radius:calc(0.25rem - 1px);border-top-right-radius:calc(0.25rem - 1px)}.card-img,.card-img-bottom{border-bottom-right-radius:calc(0.25rem - 1px);border-bottom-left-radius:calc(0.25rem - 1px)}.card-deck .card{margin-bottom:15px}@media (min-width: 576px){.card-deck{display:-ms-flexbox;display:flex;-ms-flex-flow:row wrap;flex-flow:row wrap;margin-right:-15px;margin-left:-15px}.card-deck .card{-ms-flex:1 0 0%;flex:1 0 0%;margin-right:15px;margin-bottom:0;margin-left:15px}}.card-group>.card{margin-bottom:15px}@media (min-width: 576px){.card-group{display:-ms-flexbox;display:flex;-ms-flex-flow:row wrap;flex-flow:row wrap}.card-group>.card{-ms-flex:1 0 0%;flex:1 0 0%;margin-bottom:0}.card-group>.card+.card{margin-left:0;border-left:0}.card-group>.card:not(:last-child){border-top-right-radius:0;border-bottom-right-radius:0}.card-group>.card:not(:last-child) .card-img-top,.card-group>.card:not(:last-child) .card-header{border-top-right-radius:0}.card-group>.card:not(:last-child) .card-img-bottom,.card-group>.card:not(:last-child) .card-footer{border-bottom-right-radius:0}.card-group>.card:not(:first-child){border-top-left-radius:0;border-bottom-left-radius:0}.card-group>.card:not(:first-child) .card-img-top,.card-group>.card:not(:first-child) .card-header{border-top-left-radius:0}.card-group>.card:not(:first-child) .card-img-bottom,.card-group>.card:not(:first-child) .card-footer{border-bottom-left-radius:0}}.card-columns .card{margin-bottom:0.75rem}@media (min-width: 576px){.card-columns{-webkit-column-count:3;-moz-column-count:3;column-count:3;-webkit-column-gap:1.25rem;-moz-column-gap:1.25rem;column-gap:1.25rem;orphans:1;widows:1}.card-columns .card{display:inline-block;width:100%}}.accordion{overflow-anchor:none}.accordion>.card{overflow:hidden}.accordion>.card:not(:last-of-type){border-bottom:0;border-bottom-right-radius:0;border-bottom-left-radius:0}.accordion>.card:not(:first-of-type){border-top-left-radius:0;border-top-right-radius:0}.accordion>.card>.card-header{border-radius:0;margin-bottom:-1px}.alert{position:relative;padding:0.75rem 1.25rem;margin-bottom:1rem;border:1px solid transparent;border-radius:0.25rem}.alert-heading{color:inherit}.alert-link{font-weight:700}.alert-dismissible{padding-right:4rem}.alert-dismissible .close{position:absolute;top:0;right:0;padding:0.75rem 1.25rem;color:inherit}.alert-primary{color:#004085;background-color:#cce5ff;border-color:#b8daff}.alert-primary hr{border-top-color:#9fcdff}.alert-primary .alert-link{color:#002752}.alert-secondary{color:#383d41;background-color:#e2e3e5;border-color:#d6d8db}.alert-secondary hr{border-top-color:#c8cbcf}.alert-secondary .alert-link{color:#202326}.alert-success{color:#155724;background-color:#d4edda;border-color:#c3e6cb}.alert-success hr{border-top-color:#b1dfbb}.alert-success .alert-link{color:#0b2e13}.alert-info{color:#0c5460;background-color:#d1ecf1;border-color:#bee5eb}.alert-info hr{border-top-color:#abdde5}.alert-info .alert-link{color:#062c33}.alert-warning{color:#856404;background-color:#fff3cd;border-color:#ffeeba}.alert-warning hr{border-top-color:#ffe8a1}.alert-warning .alert-link{color:#533f03}.alert-danger{color:#721c24;background-color:#f8d7da;border-color:#f5c6cb}.alert-danger hr{border-top-color:#f1b0b7}.alert-danger .alert-link{color:#491217}.alert-light{color:#818182;background-color:#fefefe;border-color:#fdfdfe}.alert-light hr{border-top-color:#ececf6}.alert-light .alert-link{color:#686868}.alert-dark{color:#1b1e21;background-color:#d6d8d9;border-color:#c6c8ca}.alert-dark hr{border-top-color:#b9bbbe}.alert-dark .alert-link{color:#040505}@-webkit-keyframes progress-bar-stripes{from{background-position:1rem 0}to{background-position:0 0}}@keyframes progress-bar-stripes{from{background-position:1rem 0}to{background-position:0 0}}.progress{display:-ms-flexbox;display:flex;height:1rem;overflow:hidden;line-height:0;font-size:0.75rem;background-color:#e9ecef;border-radius:0.25rem}.progress-bar{display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column;-ms-flex-pack:center;justify-content:center;overflow:hidden;color:#fff;text-align:center;white-space:nowrap;background-color:#007bff;-webkit-transition:width 0.6s ease;transition:width 0.6s ease}@media (prefers-reduced-motion: reduce){.progress-bar{-webkit-transition:none;transition:none}}.progress-bar-striped{background-image:linear-gradient(45deg, rgba(255, 255, 255, 0.15) 25%, transparent 25%, transparent 50%, rgba(255, 255, 255, 0.15) 50%, rgba(255, 255, 255, 0.15) 75%, transparent 75%, transparent);background-size:1rem 1rem}.progress-bar-animated{-webkit-animation:progress-bar-stripes 1s linear infinite;animation:progress-bar-stripes 1s linear infinite}@media (prefers-reduced-motion: reduce){.progress-bar-animated{-webkit-animation:none;animation:none}}.list-group{display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column;padding-left:0;margin-bottom:0;border-radius:0.25rem}.list-group-item-action{width:100%;color:#495057;text-align:inherit}.list-group-item-action:hover,.list-group-item-action:focus{z-index:1;color:#495057;text-decoration:none;background-color:#f8f9fa}.list-group-item-action:active{color:#212529;background-color:#e9ecef}.list-group-item{position:relative;display:block;padding:0.75rem 1.25rem;background-color:#fff;border:1px solid rgba(0, 0, 0, 0.125)}.list-group-item:first-child{border-top-left-radius:inherit;border-top-right-radius:inherit}.list-group-item:last-child{border-bottom-right-radius:inherit;border-bottom-left-radius:inherit}.list-group-item.disabled,.list-group-item:disabled{color:#6c757d;pointer-events:none;background-color:#fff}.list-group-item.active{z-index:2;color:#fff;background-color:#007bff;border-color:#007bff}.list-group-item+.list-group-item{border-top-width:0}.list-group-item+.list-group-item.active{margin-top:-1px;border-top-width:1px}.list-group-horizontal{-ms-flex-direction:row;flex-direction:row}.list-group-horizontal>.list-group-item:first-child{border-bottom-left-radius:0.25rem;border-top-right-radius:0}.list-group-horizontal>.list-group-item:last-child{border-top-right-radius:0.25rem;border-bottom-left-radius:0}.list-group-horizontal>.list-group-item.active{margin-top:0}.list-group-horizontal>.list-group-item+.list-group-item{border-top-width:1px;border-left-width:0}.list-group-horizontal>.list-group-item+.list-group-item.active{margin-left:-1px;border-left-width:1px}@media (min-width: 576px){.list-group-horizontal-sm{-ms-flex-direction:row;flex-direction:row}.list-group-horizontal-sm>.list-group-item:first-child{border-bottom-left-radius:0.25rem;border-top-right-radius:0}.list-group-horizontal-sm>.list-group-item:last-child{border-top-right-radius:0.25rem;border-bottom-left-radius:0}.list-group-horizontal-sm>.list-group-item.active{margin-top:0}.list-group-horizontal-sm>.list-group-item+.list-group-item{border-top-width:1px;border-left-width:0}.list-group-horizontal-sm>.list-group-item+.list-group-item.active{margin-left:-1px;border-left-width:1px}}@media (min-width: 768px){.list-group-horizontal-md{-ms-flex-direction:row;flex-direction:row}.list-group-horizontal-md>.list-group-item:first-child{border-bottom-left-radius:0.25rem;border-top-right-radius:0}.list-group-horizontal-md>.list-group-item:last-child{border-top-right-radius:0.25rem;border-bottom-left-radius:0}.list-group-horizontal-md>.list-group-item.active{margin-top:0}.list-group-horizontal-md>.list-group-item+.list-group-item{border-top-width:1px;border-left-width:0}.list-group-horizontal-md>.list-group-item+.list-group-item.active{margin-left:-1px;border-left-width:1px}}@media (min-width: 992px){.list-group-horizontal-lg{-ms-flex-direction:row;flex-direction:row}.list-group-horizontal-lg>.list-group-item:first-child{border-bottom-left-radius:0.25rem;border-top-right-radius:0}.list-group-horizontal-lg>.list-group-item:last-child{border-top-right-radius:0.25rem;border-bottom-left-radius:0}.list-group-horizontal-lg>.list-group-item.active{margin-top:0}.list-group-horizontal-lg>.list-group-item+.list-group-item{border-top-width:1px;border-left-width:0}.list-group-horizontal-lg>.list-group-item+.list-group-item.active{margin-left:-1px;border-left-width:1px}}@media (min-width: 1200px){.list-group-horizontal-xl{-ms-flex-direction:row;flex-direction:row}.list-group-horizontal-xl>.list-group-item:first-child{border-bottom-left-radius:0.25rem;border-top-right-radius:0}.list-group-horizontal-xl>.list-group-item:last-child{border-top-right-radius:0.25rem;border-bottom-left-radius:0}.list-group-horizontal-xl>.list-group-item.active{margin-top:0}.list-group-horizontal-xl>.list-group-item+.list-group-item{border-top-width:1px;border-left-width:0}.list-group-horizontal-xl>.list-group-item+.list-group-item.active{margin-left:-1px;border-left-width:1px}}.list-group-flush{border-radius:0}.list-group-flush>.list-group-item{border-width:0 0 1px}.list-group-flush>.list-group-item:last-child{border-bottom-width:0}.list-group-item-primary{color:#004085;background-color:#b8daff}.list-group-item-primary.list-group-item-action:hover,.list-group-item-primary.list-group-item-action:focus{color:#004085;background-color:#9fcdff}.list-group-item-primary.list-group-item-action.active{color:#fff;background-color:#004085;border-color:#004085}.list-group-item-secondary{color:#383d41;background-color:#d6d8db}.list-group-item-secondary.list-group-item-action:hover,.list-group-item-secondary.list-group-item-action:focus{color:#383d41;background-color:#c8cbcf}.list-group-item-secondary.list-group-item-action.active{color:#fff;background-color:#383d41;border-color:#383d41}.list-group-item-success{color:#155724;background-color:#c3e6cb}.list-group-item-success.list-group-item-action:hover,.list-group-item-success.list-group-item-action:focus{color:#155724;background-color:#b1dfbb}.list-group-item-success.list-group-item-action.active{color:#fff;background-color:#155724;border-color:#155724}.list-group-item-info{color:#0c5460;background-color:#bee5eb}.list-group-item-info.list-group-item-action:hover,.list-group-item-info.list-group-item-action:focus{color:#0c5460;background-color:#abdde5}.list-group-item-info.list-group-item-action.active{color:#fff;background-color:#0c5460;border-color:#0c5460}.list-group-item-warning{color:#856404;background-color:#ffeeba}.list-group-item-warning.list-group-item-action:hover,.list-group-item-warning.list-group-item-action:focus{color:#856404;background-color:#ffe8a1}.list-group-item-warning.list-group-item-action.active{color:#fff;background-color:#856404;border-color:#856404}.list-group-item-danger{color:#721c24;background-color:#f5c6cb}.list-group-item-danger.list-group-item-action:hover,.list-group-item-danger.list-group-item-action:focus{color:#721c24;background-color:#f1b0b7}.list-group-item-danger.list-group-item-action.active{color:#fff;background-color:#721c24;border-color:#721c24}.list-group-item-light{color:#818182;background-color:#fdfdfe}.list-group-item-light.list-group-item-action:hover,.list-group-item-light.list-group-item-action:focus{color:#818182;background-color:#ececf6}.list-group-item-light.list-group-item-action.active{color:#fff;background-color:#818182;border-color:#818182}.list-group-item-dark{color:#1b1e21;background-color:#c6c8ca}.list-group-item-dark.list-group-item-action:hover,.list-group-item-dark.list-group-item-action:focus{color:#1b1e21;background-color:#b9bbbe}.list-group-item-dark.list-group-item-action.active{color:#fff;background-color:#1b1e21;border-color:#1b1e21}.close{float:right;font-size:1.5rem;font-weight:700;line-height:1;color:#000;text-shadow:0 1px 0 #fff;opacity:0.5}.close:hover{color:#000;text-decoration:none}.close:not(:disabled):not(.disabled):hover,.close:not(:disabled):not(.disabled):focus{opacity:0.75}button.close{padding:0;background-color:transparent;border:0}a.close.disabled{pointer-events:none}.modal-open{overflow:hidden}.modal-open .modal{overflow-x:hidden;overflow-y:auto}.modal{position:fixed;top:0;left:0;z-index:1050;display:none;width:100%;height:100%;overflow:hidden;outline:0}.modal-dialog{position:relative;width:auto;margin:0.5rem;pointer-events:none}.modal.fade .modal-dialog{-webkit-transition:-webkit-transform 0.3s ease-out;transition:-webkit-transform 0.3s ease-out;transition:transform 0.3s ease-out;transition:transform 0.3s ease-out, -webkit-transform 0.3s ease-out;-webkit-transform:translate(0, -50px);transform:translate(0, -50px)}@media (prefers-reduced-motion: reduce){.modal.fade .modal-dialog{-webkit-transition:none;transition:none}}.modal.show .modal-dialog{-webkit-transform:none;transform:none}.modal.modal-static .modal-dialog{-webkit-transform:scale(1.02);transform:scale(1.02)}.modal-dialog-scrollable{display:-ms-flexbox;display:flex;max-height:calc(100% - 1rem)}.modal-dialog-scrollable .modal-content{max-height:calc(100vh - 1rem);overflow:hidden}.modal-dialog-scrollable .modal-header,.modal-dialog-scrollable .modal-footer{-ms-flex-negative:0;flex-shrink:0}.modal-dialog-scrollable .modal-body{overflow-y:auto}.modal-dialog-centered{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;min-height:calc(100% - 1rem)}.modal-dialog-centered::before{display:block;height:calc(100vh - 1rem);height:-webkit-min-content;height:-moz-min-content;height:min-content;content:\"\"}.modal-dialog-centered.modal-dialog-scrollable{-ms-flex-direction:column;flex-direction:column;-ms-flex-pack:center;justify-content:center;height:100%}.modal-dialog-centered.modal-dialog-scrollable .modal-content{max-height:none}.modal-dialog-centered.modal-dialog-scrollable::before{content:none}.modal-content{position:relative;display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column;width:100%;pointer-events:auto;background-color:#fff;background-clip:padding-box;border:1px solid rgba(0, 0, 0, 0.2);border-radius:0.3rem;outline:0}.modal-backdrop{position:fixed;top:0;left:0;z-index:1040;width:100vw;height:100vh;background-color:#000}.modal-backdrop.fade{opacity:0}.modal-backdrop.show{opacity:0.5}.modal-header{display:-ms-flexbox;display:flex;-ms-flex-align:start;align-items:flex-start;-ms-flex-pack:justify;justify-content:space-between;padding:1rem 1rem;border-bottom:1px solid #dee2e6;border-top-left-radius:calc(0.3rem - 1px);border-top-right-radius:calc(0.3rem - 1px)}.modal-header .close{padding:1rem 1rem;margin:-1rem -1rem -1rem auto}.modal-title{margin-bottom:0;line-height:1.5}.modal-body{position:relative;-ms-flex:1 1 auto;flex:1 1 auto;padding:1rem}.modal-footer{display:-ms-flexbox;display:flex;-ms-flex-wrap:wrap;flex-wrap:wrap;-ms-flex-align:center;align-items:center;-ms-flex-pack:end;justify-content:flex-end;padding:0.75rem;border-top:1px solid #dee2e6;border-bottom-right-radius:calc(0.3rem - 1px);border-bottom-left-radius:calc(0.3rem - 1px)}.modal-footer>*{margin:0.25rem}.modal-scrollbar-measure{position:absolute;top:-9999px;width:50px;height:50px;overflow:scroll}@media (min-width: 576px){.modal-dialog{max-width:500px;margin:1.75rem auto}.modal-dialog-scrollable{max-height:calc(100% - 3.5rem)}.modal-dialog-scrollable .modal-content{max-height:calc(100vh - 3.5rem)}.modal-dialog-centered{min-height:calc(100% - 3.5rem)}.modal-dialog-centered::before{height:calc(100vh - 3.5rem);height:-webkit-min-content;height:-moz-min-content;height:min-content}.modal-sm{max-width:300px}}@media (min-width: 992px){.modal-lg,.modal-xl{max-width:800px}}@media (min-width: 1200px){.modal-xl{max-width:1140px}}.align-baseline{vertical-align:baseline !important}.align-top{vertical-align:top !important}.align-middle{vertical-align:middle !important}.align-bottom{vertical-align:bottom !important}.align-text-bottom{vertical-align:text-bottom !important}.align-text-top{vertical-align:text-top !important}.bg-primary{background-color:#007bff !important}a.bg-primary:hover,a.bg-primary:focus,button.bg-primary:hover,button.bg-primary:focus{background-color:#0062cc !important}.bg-secondary{background-color:#6c757d !important}a.bg-secondary:hover,a.bg-secondary:focus,button.bg-secondary:hover,button.bg-secondary:focus{background-color:#545b62 !important}.bg-success{background-color:#28a745 !important}a.bg-success:hover,a.bg-success:focus,button.bg-success:hover,button.bg-success:focus{background-color:#1e7e34 !important}.bg-info{background-color:#17a2b8 !important}a.bg-info:hover,a.bg-info:focus,button.bg-info:hover,button.bg-info:focus{background-color:#117a8b !important}.bg-warning{background-color:#ffc107 !important}a.bg-warning:hover,a.bg-warning:focus,button.bg-warning:hover,button.bg-warning:focus{background-color:#d39e00 !important}.bg-danger{background-color:#dc3545 !important}a.bg-danger:hover,a.bg-danger:focus,button.bg-danger:hover,button.bg-danger:focus{background-color:#bd2130 !important}.bg-light{background-color:#f8f9fa !important}a.bg-light:hover,a.bg-light:focus,button.bg-light:hover,button.bg-light:focus{background-color:#dae0e5 !important}.bg-dark{background-color:#343a40 !important}a.bg-dark:hover,a.bg-dark:focus,button.bg-dark:hover,button.bg-dark:focus{background-color:#1d2124 !important}.bg-white{background-color:#fff !important}.bg-transparent{background-color:transparent !important}.border{border:1px solid #dee2e6 !important}.border-top{border-top:1px solid #dee2e6 !important}.border-right{border-right:1px solid #dee2e6 !important}.border-bottom{border-bottom:1px solid #dee2e6 !important}.border-left{border-left:1px solid #dee2e6 !important}.border-0{border:0 !important}.border-top-0{border-top:0 !important}.border-right-0{border-right:0 !important}.border-bottom-0{border-bottom:0 !important}.border-left-0{border-left:0 !important}.border-primary{border-color:#007bff !important}.border-secondary{border-color:#6c757d !important}.border-success{border-color:#28a745 !important}.border-info{border-color:#17a2b8 !important}.border-warning{border-color:#ffc107 !important}.border-danger{border-color:#dc3545 !important}.border-light{border-color:#f8f9fa !important}.border-dark{border-color:#343a40 !important}.border-white{border-color:#fff !important}.rounded-sm{border-radius:0.2rem !important}.rounded{border-radius:0.25rem !important}.rounded-top{border-top-left-radius:0.25rem !important;border-top-right-radius:0.25rem !important}.rounded-right{border-top-right-radius:0.25rem !important;border-bottom-right-radius:0.25rem !important}.rounded-bottom{border-bottom-right-radius:0.25rem !important;border-bottom-left-radius:0.25rem !important}.rounded-left{border-top-left-radius:0.25rem !important;border-bottom-left-radius:0.25rem !important}.rounded-lg{border-radius:0.3rem !important}.rounded-circle{border-radius:50% !important}.rounded-pill{border-radius:50rem !important}.rounded-0{border-radius:0 !important}.clearfix::after{display:block;clear:both;content:\"\"}.d-none{display:none !important}.d-inline{display:inline !important}.d-inline-block{display:inline-block !important}.d-block{display:block !important}.d-table{display:table !important}.d-table-row{display:table-row !important}.d-table-cell{display:table-cell !important}.d-flex{display:-ms-flexbox !important;display:flex !important}.d-inline-flex{display:-ms-inline-flexbox !important;display:inline-flex !important}@media (min-width: 576px){.d-sm-none{display:none !important}.d-sm-inline{display:inline !important}.d-sm-inline-block{display:inline-block !important}.d-sm-block{display:block !important}.d-sm-table{display:table !important}.d-sm-table-row{display:table-row !important}.d-sm-table-cell{display:table-cell !important}.d-sm-flex{display:-ms-flexbox !important;display:flex !important}.d-sm-inline-flex{display:-ms-inline-flexbox !important;display:inline-flex !important}}@media (min-width: 768px){.d-md-none{display:none !important}.d-md-inline{display:inline !important}.d-md-inline-block{display:inline-block !important}.d-md-block{display:block !important}.d-md-table{display:table !important}.d-md-table-row{display:table-row !important}.d-md-table-cell{display:table-cell !important}.d-md-flex{display:-ms-flexbox !important;display:flex !important}.d-md-inline-flex{display:-ms-inline-flexbox !important;display:inline-flex !important}}@media (min-width: 992px){.d-lg-none{display:none !important}.d-lg-inline{display:inline !important}.d-lg-inline-block{display:inline-block !important}.d-lg-block{display:block !important}.d-lg-table{display:table !important}.d-lg-table-row{display:table-row !important}.d-lg-table-cell{display:table-cell !important}.d-lg-flex{display:-ms-flexbox !important;display:flex !important}.d-lg-inline-flex{display:-ms-inline-flexbox !important;display:inline-flex !important}}@media (min-width: 1200px){.d-xl-none{display:none !important}.d-xl-inline{display:inline !important}.d-xl-inline-block{display:inline-block !important}.d-xl-block{display:block !important}.d-xl-table{display:table !important}.d-xl-table-row{display:table-row !important}.d-xl-table-cell{display:table-cell !important}.d-xl-flex{display:-ms-flexbox !important;display:flex !important}.d-xl-inline-flex{display:-ms-inline-flexbox !important;display:inline-flex !important}}@media print{.d-print-none{display:none !important}.d-print-inline{display:inline !important}.d-print-inline-block{display:inline-block !important}.d-print-block{display:block !important}.d-print-table{display:table !important}.d-print-table-row{display:table-row !important}.d-print-table-cell{display:table-cell !important}.d-print-flex{display:-ms-flexbox !important;display:flex !important}.d-print-inline-flex{display:-ms-inline-flexbox !important;display:inline-flex !important}}.embed-responsive{position:relative;display:block;width:100%;padding:0;overflow:hidden}.embed-responsive::before{display:block;content:\"\"}.embed-responsive .embed-responsive-item,.embed-responsive iframe,.embed-responsive embed,.embed-responsive object,.embed-responsive video{position:absolute;top:0;bottom:0;left:0;width:100%;height:100%;border:0}.embed-responsive-21by9::before{padding-top:42.8571428571%}.embed-responsive-16by9::before{padding-top:56.25%}.embed-responsive-4by3::before{padding-top:75%}.embed-responsive-1by1::before{padding-top:100%}.flex-row{-ms-flex-direction:row !important;flex-direction:row !important}.flex-column{-ms-flex-direction:column !important;flex-direction:column !important}.flex-row-reverse{-ms-flex-direction:row-reverse !important;flex-direction:row-reverse !important}.flex-column-reverse{-ms-flex-direction:column-reverse !important;flex-direction:column-reverse !important}.flex-wrap{-ms-flex-wrap:wrap !important;flex-wrap:wrap !important}.flex-nowrap{-ms-flex-wrap:nowrap !important;flex-wrap:nowrap !important}.flex-wrap-reverse{-ms-flex-wrap:wrap-reverse !important;flex-wrap:wrap-reverse !important}.flex-fill{-ms-flex:1 1 auto !important;flex:1 1 auto !important}.flex-grow-0{-ms-flex-positive:0 !important;flex-grow:0 !important}.flex-grow-1{-ms-flex-positive:1 !important;flex-grow:1 !important}.flex-shrink-0{-ms-flex-negative:0 !important;flex-shrink:0 !important}.flex-shrink-1{-ms-flex-negative:1 !important;flex-shrink:1 !important}.justify-content-start{-ms-flex-pack:start !important;justify-content:flex-start !important}.justify-content-end{-ms-flex-pack:end !important;justify-content:flex-end !important}.justify-content-center{-ms-flex-pack:center !important;justify-content:center !important}.justify-content-between{-ms-flex-pack:justify !important;justify-content:space-between !important}.justify-content-around{-ms-flex-pack:distribute !important;justify-content:space-around !important}.align-items-start{-ms-flex-align:start !important;align-items:flex-start !important}.align-items-end{-ms-flex-align:end !important;align-items:flex-end !important}.align-items-center{-ms-flex-align:center !important;align-items:center !important}.align-items-baseline{-ms-flex-align:baseline !important;align-items:baseline !important}.align-items-stretch{-ms-flex-align:stretch !important;align-items:stretch !important}.align-content-start{-ms-flex-line-pack:start !important;align-content:flex-start !important}.align-content-end{-ms-flex-line-pack:end !important;align-content:flex-end !important}.align-content-center{-ms-flex-line-pack:center !important;align-content:center !important}.align-content-between{-ms-flex-line-pack:justify !important;align-content:space-between !important}.align-content-around{-ms-flex-line-pack:distribute !important;align-content:space-around !important}.align-content-stretch{-ms-flex-line-pack:stretch !important;align-content:stretch !important}.align-self-auto{-ms-flex-item-align:auto !important;align-self:auto !important}.align-self-start{-ms-flex-item-align:start !important;align-self:flex-start !important}.align-self-end{-ms-flex-item-align:end !important;align-self:flex-end !important}.align-self-center{-ms-flex-item-align:center !important;align-self:center !important}.align-self-baseline{-ms-flex-item-align:baseline !important;align-self:baseline !important}.align-self-stretch{-ms-flex-item-align:stretch !important;align-self:stretch !important}@media (min-width: 576px){.flex-sm-row{-ms-flex-direction:row !important;flex-direction:row !important}.flex-sm-column{-ms-flex-direction:column !important;flex-direction:column !important}.flex-sm-row-reverse{-ms-flex-direction:row-reverse !important;flex-direction:row-reverse !important}.flex-sm-column-reverse{-ms-flex-direction:column-reverse !important;flex-direction:column-reverse !important}.flex-sm-wrap{-ms-flex-wrap:wrap !important;flex-wrap:wrap !important}.flex-sm-nowrap{-ms-flex-wrap:nowrap !important;flex-wrap:nowrap !important}.flex-sm-wrap-reverse{-ms-flex-wrap:wrap-reverse !important;flex-wrap:wrap-reverse !important}.flex-sm-fill{-ms-flex:1 1 auto !important;flex:1 1 auto !important}.flex-sm-grow-0{-ms-flex-positive:0 !important;flex-grow:0 !important}.flex-sm-grow-1{-ms-flex-positive:1 !important;flex-grow:1 !important}.flex-sm-shrink-0{-ms-flex-negative:0 !important;flex-shrink:0 !important}.flex-sm-shrink-1{-ms-flex-negative:1 !important;flex-shrink:1 !important}.justify-content-sm-start{-ms-flex-pack:start !important;justify-content:flex-start !important}.justify-content-sm-end{-ms-flex-pack:end !important;justify-content:flex-end !important}.justify-content-sm-center{-ms-flex-pack:center !important;justify-content:center !important}.justify-content-sm-between{-ms-flex-pack:justify !important;justify-content:space-between !important}.justify-content-sm-around{-ms-flex-pack:distribute !important;justify-content:space-around !important}.align-items-sm-start{-ms-flex-align:start !important;align-items:flex-start !important}.align-items-sm-end{-ms-flex-align:end !important;align-items:flex-end !important}.align-items-sm-center{-ms-flex-align:center !important;align-items:center !important}.align-items-sm-baseline{-ms-flex-align:baseline !important;align-items:baseline !important}.align-items-sm-stretch{-ms-flex-align:stretch !important;align-items:stretch !important}.align-content-sm-start{-ms-flex-line-pack:start !important;align-content:flex-start !important}.align-content-sm-end{-ms-flex-line-pack:end !important;align-content:flex-end !important}.align-content-sm-center{-ms-flex-line-pack:center !important;align-content:center !important}.align-content-sm-between{-ms-flex-line-pack:justify !important;align-content:space-between !important}.align-content-sm-around{-ms-flex-line-pack:distribute !important;align-content:space-around !important}.align-content-sm-stretch{-ms-flex-line-pack:stretch !important;align-content:stretch !important}.align-self-sm-auto{-ms-flex-item-align:auto !important;align-self:auto !important}.align-self-sm-start{-ms-flex-item-align:start !important;align-self:flex-start !important}.align-self-sm-end{-ms-flex-item-align:end !important;align-self:flex-end !important}.align-self-sm-center{-ms-flex-item-align:center !important;align-self:center !important}.align-self-sm-baseline{-ms-flex-item-align:baseline !important;align-self:baseline !important}.align-self-sm-stretch{-ms-flex-item-align:stretch !important;align-self:stretch !important}}@media (min-width: 768px){.flex-md-row{-ms-flex-direction:row !important;flex-direction:row !important}.flex-md-column{-ms-flex-direction:column !important;flex-direction:column !important}.flex-md-row-reverse{-ms-flex-direction:row-reverse !important;flex-direction:row-reverse !important}.flex-md-column-reverse{-ms-flex-direction:column-reverse !important;flex-direction:column-reverse !important}.flex-md-wrap{-ms-flex-wrap:wrap !important;flex-wrap:wrap !important}.flex-md-nowrap{-ms-flex-wrap:nowrap !important;flex-wrap:nowrap !important}.flex-md-wrap-reverse{-ms-flex-wrap:wrap-reverse !important;flex-wrap:wrap-reverse !important}.flex-md-fill{-ms-flex:1 1 auto !important;flex:1 1 auto !important}.flex-md-grow-0{-ms-flex-positive:0 !important;flex-grow:0 !important}.flex-md-grow-1{-ms-flex-positive:1 !important;flex-grow:1 !important}.flex-md-shrink-0{-ms-flex-negative:0 !important;flex-shrink:0 !important}.flex-md-shrink-1{-ms-flex-negative:1 !important;flex-shrink:1 !important}.justify-content-md-start{-ms-flex-pack:start !important;justify-content:flex-start !important}.justify-content-md-end{-ms-flex-pack:end !important;justify-content:flex-end !important}.justify-content-md-center{-ms-flex-pack:center !important;justify-content:center !important}.justify-content-md-between{-ms-flex-pack:justify !important;justify-content:space-between !important}.justify-content-md-around{-ms-flex-pack:distribute !important;justify-content:space-around !important}.align-items-md-start{-ms-flex-align:start !important;align-items:flex-start !important}.align-items-md-end{-ms-flex-align:end !important;align-items:flex-end !important}.align-items-md-center{-ms-flex-align:center !important;align-items:center !important}.align-items-md-baseline{-ms-flex-align:baseline !important;align-items:baseline !important}.align-items-md-stretch{-ms-flex-align:stretch !important;align-items:stretch !important}.align-content-md-start{-ms-flex-line-pack:start !important;align-content:flex-start !important}.align-content-md-end{-ms-flex-line-pack:end !important;align-content:flex-end !important}.align-content-md-center{-ms-flex-line-pack:center !important;align-content:center !important}.align-content-md-between{-ms-flex-line-pack:justify !important;align-content:space-between !important}.align-content-md-around{-ms-flex-line-pack:distribute !important;align-content:space-around !important}.align-content-md-stretch{-ms-flex-line-pack:stretch !important;align-content:stretch !important}.align-self-md-auto{-ms-flex-item-align:auto !important;align-self:auto !important}.align-self-md-start{-ms-flex-item-align:start !important;align-self:flex-start !important}.align-self-md-end{-ms-flex-item-align:end !important;align-self:flex-end !important}.align-self-md-center{-ms-flex-item-align:center !important;align-self:center !important}.align-self-md-baseline{-ms-flex-item-align:baseline !important;align-self:baseline !important}.align-self-md-stretch{-ms-flex-item-align:stretch !important;align-self:stretch !important}}@media (min-width: 992px){.flex-lg-row{-ms-flex-direction:row !important;flex-direction:row !important}.flex-lg-column{-ms-flex-direction:column !important;flex-direction:column !important}.flex-lg-row-reverse{-ms-flex-direction:row-reverse !important;flex-direction:row-reverse !important}.flex-lg-column-reverse{-ms-flex-direction:column-reverse !important;flex-direction:column-reverse !important}.flex-lg-wrap{-ms-flex-wrap:wrap !important;flex-wrap:wrap !important}.flex-lg-nowrap{-ms-flex-wrap:nowrap !important;flex-wrap:nowrap !important}.flex-lg-wrap-reverse{-ms-flex-wrap:wrap-reverse !important;flex-wrap:wrap-reverse !important}.flex-lg-fill{-ms-flex:1 1 auto !important;flex:1 1 auto !important}.flex-lg-grow-0{-ms-flex-positive:0 !important;flex-grow:0 !important}.flex-lg-grow-1{-ms-flex-positive:1 !important;flex-grow:1 !important}.flex-lg-shrink-0{-ms-flex-negative:0 !important;flex-shrink:0 !important}.flex-lg-shrink-1{-ms-flex-negative:1 !important;flex-shrink:1 !important}.justify-content-lg-start{-ms-flex-pack:start !important;justify-content:flex-start !important}.justify-content-lg-end{-ms-flex-pack:end !important;justify-content:flex-end !important}.justify-content-lg-center{-ms-flex-pack:center !important;justify-content:center !important}.justify-content-lg-between{-ms-flex-pack:justify !important;justify-content:space-between !important}.justify-content-lg-around{-ms-flex-pack:distribute !important;justify-content:space-around !important}.align-items-lg-start{-ms-flex-align:start !important;align-items:flex-start !important}.align-items-lg-end{-ms-flex-align:end !important;align-items:flex-end !important}.align-items-lg-center{-ms-flex-align:center !important;align-items:center !important}.align-items-lg-baseline{-ms-flex-align:baseline !important;align-items:baseline !important}.align-items-lg-stretch{-ms-flex-align:stretch !important;align-items:stretch !important}.align-content-lg-start{-ms-flex-line-pack:start !important;align-content:flex-start !important}.align-content-lg-end{-ms-flex-line-pack:end !important;align-content:flex-end !important}.align-content-lg-center{-ms-flex-line-pack:center !important;align-content:center !important}.align-content-lg-between{-ms-flex-line-pack:justify !important;align-content:space-between !important}.align-content-lg-around{-ms-flex-line-pack:distribute !important;align-content:space-around !important}.align-content-lg-stretch{-ms-flex-line-pack:stretch !important;align-content:stretch !important}.align-self-lg-auto{-ms-flex-item-align:auto !important;align-self:auto !important}.align-self-lg-start{-ms-flex-item-align:start !important;align-self:flex-start !important}.align-self-lg-end{-ms-flex-item-align:end !important;align-self:flex-end !important}.align-self-lg-center{-ms-flex-item-align:center !important;align-self:center !important}.align-self-lg-baseline{-ms-flex-item-align:baseline !important;align-self:baseline !important}.align-self-lg-stretch{-ms-flex-item-align:stretch !important;align-self:stretch !important}}@media (min-width: 1200px){.flex-xl-row{-ms-flex-direction:row !important;flex-direction:row !important}.flex-xl-column{-ms-flex-direction:column !important;flex-direction:column !important}.flex-xl-row-reverse{-ms-flex-direction:row-reverse !important;flex-direction:row-reverse !important}.flex-xl-column-reverse{-ms-flex-direction:column-reverse !important;flex-direction:column-reverse !important}.flex-xl-wrap{-ms-flex-wrap:wrap !important;flex-wrap:wrap !important}.flex-xl-nowrap{-ms-flex-wrap:nowrap !important;flex-wrap:nowrap !important}.flex-xl-wrap-reverse{-ms-flex-wrap:wrap-reverse !important;flex-wrap:wrap-reverse !important}.flex-xl-fill{-ms-flex:1 1 auto !important;flex:1 1 auto !important}.flex-xl-grow-0{-ms-flex-positive:0 !important;flex-grow:0 !important}.flex-xl-grow-1{-ms-flex-positive:1 !important;flex-grow:1 !important}.flex-xl-shrink-0{-ms-flex-negative:0 !important;flex-shrink:0 !important}.flex-xl-shrink-1{-ms-flex-negative:1 !important;flex-shrink:1 !important}.justify-content-xl-start{-ms-flex-pack:start !important;justify-content:flex-start !important}.justify-content-xl-end{-ms-flex-pack:end !important;justify-content:flex-end !important}.justify-content-xl-center{-ms-flex-pack:center !important;justify-content:center !important}.justify-content-xl-between{-ms-flex-pack:justify !important;justify-content:space-between !important}.justify-content-xl-around{-ms-flex-pack:distribute !important;justify-content:space-around !important}.align-items-xl-start{-ms-flex-align:start !important;align-items:flex-start !important}.align-items-xl-end{-ms-flex-align:end !important;align-items:flex-end !important}.align-items-xl-center{-ms-flex-align:center !important;align-items:center !important}.align-items-xl-baseline{-ms-flex-align:baseline !important;align-items:baseline !important}.align-items-xl-stretch{-ms-flex-align:stretch !important;align-items:stretch !important}.align-content-xl-start{-ms-flex-line-pack:start !important;align-content:flex-start !important}.align-content-xl-end{-ms-flex-line-pack:end !important;align-content:flex-end !important}.align-content-xl-center{-ms-flex-line-pack:center !important;align-content:center !important}.align-content-xl-between{-ms-flex-line-pack:justify !important;align-content:space-between !important}.align-content-xl-around{-ms-flex-line-pack:distribute !important;align-content:space-around !important}.align-content-xl-stretch{-ms-flex-line-pack:stretch !important;align-content:stretch !important}.align-self-xl-auto{-ms-flex-item-align:auto !important;align-self:auto !important}.align-self-xl-start{-ms-flex-item-align:start !important;align-self:flex-start !important}.align-self-xl-end{-ms-flex-item-align:end !important;align-self:flex-end !important}.align-self-xl-center{-ms-flex-item-align:center !important;align-self:center !important}.align-self-xl-baseline{-ms-flex-item-align:baseline !important;align-self:baseline !important}.align-self-xl-stretch{-ms-flex-item-align:stretch !important;align-self:stretch !important}}.float-left{float:left !important}.float-right{float:right !important}.float-none{float:none !important}@media (min-width: 576px){.float-sm-left{float:left !important}.float-sm-right{float:right !important}.float-sm-none{float:none !important}}@media (min-width: 768px){.float-md-left{float:left !important}.float-md-right{float:right !important}.float-md-none{float:none !important}}@media (min-width: 992px){.float-lg-left{float:left !important}.float-lg-right{float:right !important}.float-lg-none{float:none !important}}@media (min-width: 1200px){.float-xl-left{float:left !important}.float-xl-right{float:right !important}.float-xl-none{float:none !important}}.user-select-all{-webkit-user-select:all !important;-moz-user-select:all !important;-ms-user-select:all !important;user-select:all !important}.user-select-auto{-webkit-user-select:auto !important;-moz-user-select:auto !important;-ms-user-select:auto !important;user-select:auto !important}.user-select-none{-webkit-user-select:none !important;-moz-user-select:none !important;-ms-user-select:none !important;user-select:none !important}.overflow-auto{overflow:auto !important}.overflow-hidden{overflow:hidden !important}.position-static{position:static !important}.position-relative{position:relative !important}.position-absolute{position:absolute !important}.position-fixed{position:fixed !important}.position-sticky{position:-webkit-sticky !important;position:sticky !important}.fixed-top{position:fixed;top:0;right:0;left:0;z-index:1030}.fixed-bottom{position:fixed;right:0;bottom:0;left:0;z-index:1030}@supports ((position: -webkit-sticky) or (position: sticky)){.sticky-top{position:-webkit-sticky;position:sticky;top:0;z-index:1020}}.sr-only{position:absolute;width:1px;height:1px;padding:0;margin:-1px;overflow:hidden;clip:rect(0, 0, 0, 0);white-space:nowrap;border:0}.sr-only-focusable:active,.sr-only-focusable:focus{position:static;width:auto;height:auto;overflow:visible;clip:auto;white-space:normal}.shadow-sm{-webkit-box-shadow:0 0.125rem 0.25rem rgba(0, 0, 0, 0.075) !important;box-shadow:0 0.125rem 0.25rem rgba(0, 0, 0, 0.075) !important}.shadow{-webkit-box-shadow:0 0.5rem 1rem rgba(0, 0, 0, 0.15) !important;box-shadow:0 0.5rem 1rem rgba(0, 0, 0, 0.15) !important}.shadow-lg{-webkit-box-shadow:0 1rem 3rem rgba(0, 0, 0, 0.175) !important;box-shadow:0 1rem 3rem rgba(0, 0, 0, 0.175) !important}.shadow-none{-webkit-box-shadow:none !important;box-shadow:none !important}.w-25{width:25% !important}.w-50{width:50% !important}.w-75{width:75% !important}.w-100{width:100% !important}.w-auto{width:auto !important}.h-25{height:25% !important}.h-50{height:50% !important}.h-75{height:75% !important}.h-100{height:100% !important}.h-auto{height:auto !important}.mw-100{max-width:100% !important}.mh-100{max-height:100% !important}.min-vw-100{min-width:100vw !important}.min-vh-100{min-height:100vh !important}.vw-100{width:100vw !important}.vh-100{height:100vh !important}.m-0{margin:0 !important}.mt-0,.my-0{margin-top:0 !important}.mr-0,.mx-0{margin-right:0 !important}.mb-0,.my-0{margin-bottom:0 !important}.ml-0,.mx-0{margin-left:0 !important}.m-1{margin:0.25rem !important}.mt-1,.my-1{margin-top:0.25rem !important}.mr-1,.mx-1{margin-right:0.25rem !important}.mb-1,.my-1{margin-bottom:0.25rem !important}.ml-1,.mx-1{margin-left:0.25rem !important}.m-2{margin:0.5rem !important}.mt-2,.my-2{margin-top:0.5rem !important}.mr-2,.mx-2{margin-right:0.5rem !important}.mb-2,.my-2{margin-bottom:0.5rem !important}.ml-2,.mx-2{margin-left:0.5rem !important}.m-3{margin:1rem !important}.mt-3,.my-3{margin-top:1rem !important}.mr-3,.mx-3{margin-right:1rem !important}.mb-3,.my-3{margin-bottom:1rem !important}.ml-3,.mx-3{margin-left:1rem !important}.m-4{margin:1.5rem !important}.mt-4,.my-4{margin-top:1.5rem !important}.mr-4,.mx-4{margin-right:1.5rem !important}.mb-4,.my-4{margin-bottom:1.5rem !important}.ml-4,.mx-4{margin-left:1.5rem !important}.m-5{margin:3rem !important}.mt-5,.my-5{margin-top:3rem !important}.mr-5,.mx-5{margin-right:3rem !important}.mb-5,.my-5{margin-bottom:3rem !important}.ml-5,.mx-5{margin-left:3rem !important}.p-0{padding:0 !important}.pt-0,.py-0{padding-top:0 !important}.pr-0,.px-0{padding-right:0 !important}.pb-0,.py-0{padding-bottom:0 !important}.pl-0,.px-0{padding-left:0 !important}.p-1{padding:0.25rem !important}.pt-1,.py-1{padding-top:0.25rem !important}.pr-1,.px-1{padding-right:0.25rem !important}.pb-1,.py-1{padding-bottom:0.25rem !important}.pl-1,.px-1{padding-left:0.25rem !important}.p-2{padding:0.5rem !important}.pt-2,.py-2{padding-top:0.5rem !important}.pr-2,.px-2{padding-right:0.5rem !important}.pb-2,.py-2{padding-bottom:0.5rem !important}.pl-2,.px-2{padding-left:0.5rem !important}.p-3{padding:1rem !important}.pt-3,.py-3{padding-top:1rem !important}.pr-3,.px-3{padding-right:1rem !important}.pb-3,.py-3{padding-bottom:1rem !important}.pl-3,.px-3{padding-left:1rem !important}.p-4{padding:1.5rem !important}.pt-4,.py-4{padding-top:1.5rem !important}.pr-4,.px-4{padding-right:1.5rem !important}.pb-4,.py-4{padding-bottom:1.5rem !important}.pl-4,.px-4{padding-left:1.5rem !important}.p-5{padding:3rem !important}.pt-5,.py-5{padding-top:3rem !important}.pr-5,.px-5{padding-right:3rem !important}.pb-5,.py-5{padding-bottom:3rem !important}.pl-5,.px-5{padding-left:3rem !important}.m-n1{margin:-0.25rem !important}.mt-n1,.my-n1{margin-top:-0.25rem !important}.mr-n1,.mx-n1{margin-right:-0.25rem !important}.mb-n1,.my-n1{margin-bottom:-0.25rem !important}.ml-n1,.mx-n1{margin-left:-0.25rem !important}.m-n2{margin:-0.5rem !important}.mt-n2,.my-n2{margin-top:-0.5rem !important}.mr-n2,.mx-n2{margin-right:-0.5rem !important}.mb-n2,.my-n2{margin-bottom:-0.5rem !important}.ml-n2,.mx-n2{margin-left:-0.5rem !important}.m-n3{margin:-1rem !important}.mt-n3,.my-n3{margin-top:-1rem !important}.mr-n3,.mx-n3{margin-right:-1rem !important}.mb-n3,.my-n3{margin-bottom:-1rem !important}.ml-n3,.mx-n3{margin-left:-1rem !important}.m-n4{margin:-1.5rem !important}.mt-n4,.my-n4{margin-top:-1.5rem !important}.mr-n4,.mx-n4{margin-right:-1.5rem !important}.mb-n4,.my-n4{margin-bottom:-1.5rem !important}.ml-n4,.mx-n4{margin-left:-1.5rem !important}.m-n5{margin:-3rem !important}.mt-n5,.my-n5{margin-top:-3rem !important}.mr-n5,.mx-n5{margin-right:-3rem !important}.mb-n5,.my-n5{margin-bottom:-3rem !important}.ml-n5,.mx-n5{margin-left:-3rem !important}.m-auto{margin:auto !important}.mt-auto,.my-auto{margin-top:auto !important}.mr-auto,.mx-auto{margin-right:auto !important}.mb-auto,.my-auto{margin-bottom:auto !important}.ml-auto,.mx-auto{margin-left:auto !important}@media (min-width: 576px){.m-sm-0{margin:0 !important}.mt-sm-0,.my-sm-0{margin-top:0 !important}.mr-sm-0,.mx-sm-0{margin-right:0 !important}.mb-sm-0,.my-sm-0{margin-bottom:0 !important}.ml-sm-0,.mx-sm-0{margin-left:0 !important}.m-sm-1{margin:0.25rem !important}.mt-sm-1,.my-sm-1{margin-top:0.25rem !important}.mr-sm-1,.mx-sm-1{margin-right:0.25rem !important}.mb-sm-1,.my-sm-1{margin-bottom:0.25rem !important}.ml-sm-1,.mx-sm-1{margin-left:0.25rem !important}.m-sm-2{margin:0.5rem !important}.mt-sm-2,.my-sm-2{margin-top:0.5rem !important}.mr-sm-2,.mx-sm-2{margin-right:0.5rem !important}.mb-sm-2,.my-sm-2{margin-bottom:0.5rem !important}.ml-sm-2,.mx-sm-2{margin-left:0.5rem !important}.m-sm-3{margin:1rem !important}.mt-sm-3,.my-sm-3{margin-top:1rem !important}.mr-sm-3,.mx-sm-3{margin-right:1rem !important}.mb-sm-3,.my-sm-3{margin-bottom:1rem !important}.ml-sm-3,.mx-sm-3{margin-left:1rem !important}.m-sm-4{margin:1.5rem !important}.mt-sm-4,.my-sm-4{margin-top:1.5rem !important}.mr-sm-4,.mx-sm-4{margin-right:1.5rem !important}.mb-sm-4,.my-sm-4{margin-bottom:1.5rem !important}.ml-sm-4,.mx-sm-4{margin-left:1.5rem !important}.m-sm-5{margin:3rem !important}.mt-sm-5,.my-sm-5{margin-top:3rem !important}.mr-sm-5,.mx-sm-5{margin-right:3rem !important}.mb-sm-5,.my-sm-5{margin-bottom:3rem !important}.ml-sm-5,.mx-sm-5{margin-left:3rem !important}.p-sm-0{padding:0 !important}.pt-sm-0,.py-sm-0{padding-top:0 !important}.pr-sm-0,.px-sm-0{padding-right:0 !important}.pb-sm-0,.py-sm-0{padding-bottom:0 !important}.pl-sm-0,.px-sm-0{padding-left:0 !important}.p-sm-1{padding:0.25rem !important}.pt-sm-1,.py-sm-1{padding-top:0.25rem !important}.pr-sm-1,.px-sm-1{padding-right:0.25rem !important}.pb-sm-1,.py-sm-1{padding-bottom:0.25rem !important}.pl-sm-1,.px-sm-1{padding-left:0.25rem !important}.p-sm-2{padding:0.5rem !important}.pt-sm-2,.py-sm-2{padding-top:0.5rem !important}.pr-sm-2,.px-sm-2{padding-right:0.5rem !important}.pb-sm-2,.py-sm-2{padding-bottom:0.5rem !important}.pl-sm-2,.px-sm-2{padding-left:0.5rem !important}.p-sm-3{padding:1rem !important}.pt-sm-3,.py-sm-3{padding-top:1rem !important}.pr-sm-3,.px-sm-3{padding-right:1rem !important}.pb-sm-3,.py-sm-3{padding-bottom:1rem !important}.pl-sm-3,.px-sm-3{padding-left:1rem !important}.p-sm-4{padding:1.5rem !important}.pt-sm-4,.py-sm-4{padding-top:1.5rem !important}.pr-sm-4,.px-sm-4{padding-right:1.5rem !important}.pb-sm-4,.py-sm-4{padding-bottom:1.5rem !important}.pl-sm-4,.px-sm-4{padding-left:1.5rem !important}.p-sm-5{padding:3rem !important}.pt-sm-5,.py-sm-5{padding-top:3rem !important}.pr-sm-5,.px-sm-5{padding-right:3rem !important}.pb-sm-5,.py-sm-5{padding-bottom:3rem !important}.pl-sm-5,.px-sm-5{padding-left:3rem !important}.m-sm-n1{margin:-0.25rem !important}.mt-sm-n1,.my-sm-n1{margin-top:-0.25rem !important}.mr-sm-n1,.mx-sm-n1{margin-right:-0.25rem !important}.mb-sm-n1,.my-sm-n1{margin-bottom:-0.25rem !important}.ml-sm-n1,.mx-sm-n1{margin-left:-0.25rem !important}.m-sm-n2{margin:-0.5rem !important}.mt-sm-n2,.my-sm-n2{margin-top:-0.5rem !important}.mr-sm-n2,.mx-sm-n2{margin-right:-0.5rem !important}.mb-sm-n2,.my-sm-n2{margin-bottom:-0.5rem !important}.ml-sm-n2,.mx-sm-n2{margin-left:-0.5rem !important}.m-sm-n3{margin:-1rem !important}.mt-sm-n3,.my-sm-n3{margin-top:-1rem !important}.mr-sm-n3,.mx-sm-n3{margin-right:-1rem !important}.mb-sm-n3,.my-sm-n3{margin-bottom:-1rem !important}.ml-sm-n3,.mx-sm-n3{margin-left:-1rem !important}.m-sm-n4{margin:-1.5rem !important}.mt-sm-n4,.my-sm-n4{margin-top:-1.5rem !important}.mr-sm-n4,.mx-sm-n4{margin-right:-1.5rem !important}.mb-sm-n4,.my-sm-n4{margin-bottom:-1.5rem !important}.ml-sm-n4,.mx-sm-n4{margin-left:-1.5rem !important}.m-sm-n5{margin:-3rem !important}.mt-sm-n5,.my-sm-n5{margin-top:-3rem !important}.mr-sm-n5,.mx-sm-n5{margin-right:-3rem !important}.mb-sm-n5,.my-sm-n5{margin-bottom:-3rem !important}.ml-sm-n5,.mx-sm-n5{margin-left:-3rem !important}.m-sm-auto{margin:auto !important}.mt-sm-auto,.my-sm-auto{margin-top:auto !important}.mr-sm-auto,.mx-sm-auto{margin-right:auto !important}.mb-sm-auto,.my-sm-auto{margin-bottom:auto !important}.ml-sm-auto,.mx-sm-auto{margin-left:auto !important}}@media (min-width: 768px){.m-md-0{margin:0 !important}.mt-md-0,.my-md-0{margin-top:0 !important}.mr-md-0,.mx-md-0{margin-right:0 !important}.mb-md-0,.my-md-0{margin-bottom:0 !important}.ml-md-0,.mx-md-0{margin-left:0 !important}.m-md-1{margin:0.25rem !important}.mt-md-1,.my-md-1{margin-top:0.25rem !important}.mr-md-1,.mx-md-1{margin-right:0.25rem !important}.mb-md-1,.my-md-1{margin-bottom:0.25rem !important}.ml-md-1,.mx-md-1{margin-left:0.25rem !important}.m-md-2{margin:0.5rem !important}.mt-md-2,.my-md-2{margin-top:0.5rem !important}.mr-md-2,.mx-md-2{margin-right:0.5rem !important}.mb-md-2,.my-md-2{margin-bottom:0.5rem !important}.ml-md-2,.mx-md-2{margin-left:0.5rem !important}.m-md-3{margin:1rem !important}.mt-md-3,.my-md-3{margin-top:1rem !important}.mr-md-3,.mx-md-3{margin-right:1rem !important}.mb-md-3,.my-md-3{margin-bottom:1rem !important}.ml-md-3,.mx-md-3{margin-left:1rem !important}.m-md-4{margin:1.5rem !important}.mt-md-4,.my-md-4{margin-top:1.5rem !important}.mr-md-4,.mx-md-4{margin-right:1.5rem !important}.mb-md-4,.my-md-4{margin-bottom:1.5rem !important}.ml-md-4,.mx-md-4{margin-left:1.5rem !important}.m-md-5{margin:3rem !important}.mt-md-5,.my-md-5{margin-top:3rem !important}.mr-md-5,.mx-md-5{margin-right:3rem !important}.mb-md-5,.my-md-5{margin-bottom:3rem !important}.ml-md-5,.mx-md-5{margin-left:3rem !important}.p-md-0{padding:0 !important}.pt-md-0,.py-md-0{padding-top:0 !important}.pr-md-0,.px-md-0{padding-right:0 !important}.pb-md-0,.py-md-0{padding-bottom:0 !important}.pl-md-0,.px-md-0{padding-left:0 !important}.p-md-1{padding:0.25rem !important}.pt-md-1,.py-md-1{padding-top:0.25rem !important}.pr-md-1,.px-md-1{padding-right:0.25rem !important}.pb-md-1,.py-md-1{padding-bottom:0.25rem !important}.pl-md-1,.px-md-1{padding-left:0.25rem !important}.p-md-2{padding:0.5rem !important}.pt-md-2,.py-md-2{padding-top:0.5rem !important}.pr-md-2,.px-md-2{padding-right:0.5rem !important}.pb-md-2,.py-md-2{padding-bottom:0.5rem !important}.pl-md-2,.px-md-2{padding-left:0.5rem !important}.p-md-3{padding:1rem !important}.pt-md-3,.py-md-3{padding-top:1rem !important}.pr-md-3,.px-md-3{padding-right:1rem !important}.pb-md-3,.py-md-3{padding-bottom:1rem !important}.pl-md-3,.px-md-3{padding-left:1rem !important}.p-md-4{padding:1.5rem !important}.pt-md-4,.py-md-4{padding-top:1.5rem !important}.pr-md-4,.px-md-4{padding-right:1.5rem !important}.pb-md-4,.py-md-4{padding-bottom:1.5rem !important}.pl-md-4,.px-md-4{padding-left:1.5rem !important}.p-md-5{padding:3rem !important}.pt-md-5,.py-md-5{padding-top:3rem !important}.pr-md-5,.px-md-5{padding-right:3rem !important}.pb-md-5,.py-md-5{padding-bottom:3rem !important}.pl-md-5,.px-md-5{padding-left:3rem !important}.m-md-n1{margin:-0.25rem !important}.mt-md-n1,.my-md-n1{margin-top:-0.25rem !important}.mr-md-n1,.mx-md-n1{margin-right:-0.25rem !important}.mb-md-n1,.my-md-n1{margin-bottom:-0.25rem !important}.ml-md-n1,.mx-md-n1{margin-left:-0.25rem !important}.m-md-n2{margin:-0.5rem !important}.mt-md-n2,.my-md-n2{margin-top:-0.5rem !important}.mr-md-n2,.mx-md-n2{margin-right:-0.5rem !important}.mb-md-n2,.my-md-n2{margin-bottom:-0.5rem !important}.ml-md-n2,.mx-md-n2{margin-left:-0.5rem !important}.m-md-n3{margin:-1rem !important}.mt-md-n3,.my-md-n3{margin-top:-1rem !important}.mr-md-n3,.mx-md-n3{margin-right:-1rem !important}.mb-md-n3,.my-md-n3{margin-bottom:-1rem !important}.ml-md-n3,.mx-md-n3{margin-left:-1rem !important}.m-md-n4{margin:-1.5rem !important}.mt-md-n4,.my-md-n4{margin-top:-1.5rem !important}.mr-md-n4,.mx-md-n4{margin-right:-1.5rem !important}.mb-md-n4,.my-md-n4{margin-bottom:-1.5rem !important}.ml-md-n4,.mx-md-n4{margin-left:-1.5rem !important}.m-md-n5{margin:-3rem !important}.mt-md-n5,.my-md-n5{margin-top:-3rem !important}.mr-md-n5,.mx-md-n5{margin-right:-3rem !important}.mb-md-n5,.my-md-n5{margin-bottom:-3rem !important}.ml-md-n5,.mx-md-n5{margin-left:-3rem !important}.m-md-auto{margin:auto !important}.mt-md-auto,.my-md-auto{margin-top:auto !important}.mr-md-auto,.mx-md-auto{margin-right:auto !important}.mb-md-auto,.my-md-auto{margin-bottom:auto !important}.ml-md-auto,.mx-md-auto{margin-left:auto !important}}@media (min-width: 992px){.m-lg-0{margin:0 !important}.mt-lg-0,.my-lg-0{margin-top:0 !important}.mr-lg-0,.mx-lg-0{margin-right:0 !important}.mb-lg-0,.my-lg-0{margin-bottom:0 !important}.ml-lg-0,.mx-lg-0{margin-left:0 !important}.m-lg-1{margin:0.25rem !important}.mt-lg-1,.my-lg-1{margin-top:0.25rem !important}.mr-lg-1,.mx-lg-1{margin-right:0.25rem !important}.mb-lg-1,.my-lg-1{margin-bottom:0.25rem !important}.ml-lg-1,.mx-lg-1{margin-left:0.25rem !important}.m-lg-2{margin:0.5rem !important}.mt-lg-2,.my-lg-2{margin-top:0.5rem !important}.mr-lg-2,.mx-lg-2{margin-right:0.5rem !important}.mb-lg-2,.my-lg-2{margin-bottom:0.5rem !important}.ml-lg-2,.mx-lg-2{margin-left:0.5rem !important}.m-lg-3{margin:1rem !important}.mt-lg-3,.my-lg-3{margin-top:1rem !important}.mr-lg-3,.mx-lg-3{margin-right:1rem !important}.mb-lg-3,.my-lg-3{margin-bottom:1rem !important}.ml-lg-3,.mx-lg-3{margin-left:1rem !important}.m-lg-4{margin:1.5rem !important}.mt-lg-4,.my-lg-4{margin-top:1.5rem !important}.mr-lg-4,.mx-lg-4{margin-right:1.5rem !important}.mb-lg-4,.my-lg-4{margin-bottom:1.5rem !important}.ml-lg-4,.mx-lg-4{margin-left:1.5rem !important}.m-lg-5{margin:3rem !important}.mt-lg-5,.my-lg-5{margin-top:3rem !important}.mr-lg-5,.mx-lg-5{margin-right:3rem !important}.mb-lg-5,.my-lg-5{margin-bottom:3rem !important}.ml-lg-5,.mx-lg-5{margin-left:3rem !important}.p-lg-0{padding:0 !important}.pt-lg-0,.py-lg-0{padding-top:0 !important}.pr-lg-0,.px-lg-0{padding-right:0 !important}.pb-lg-0,.py-lg-0{padding-bottom:0 !important}.pl-lg-0,.px-lg-0{padding-left:0 !important}.p-lg-1{padding:0.25rem !important}.pt-lg-1,.py-lg-1{padding-top:0.25rem !important}.pr-lg-1,.px-lg-1{padding-right:0.25rem !important}.pb-lg-1,.py-lg-1{padding-bottom:0.25rem !important}.pl-lg-1,.px-lg-1{padding-left:0.25rem !important}.p-lg-2{padding:0.5rem !important}.pt-lg-2,.py-lg-2{padding-top:0.5rem !important}.pr-lg-2,.px-lg-2{padding-right:0.5rem !important}.pb-lg-2,.py-lg-2{padding-bottom:0.5rem !important}.pl-lg-2,.px-lg-2{padding-left:0.5rem !important}.p-lg-3{padding:1rem !important}.pt-lg-3,.py-lg-3{padding-top:1rem !important}.pr-lg-3,.px-lg-3{padding-right:1rem !important}.pb-lg-3,.py-lg-3{padding-bottom:1rem !important}.pl-lg-3,.px-lg-3{padding-left:1rem !important}.p-lg-4{padding:1.5rem !important}.pt-lg-4,.py-lg-4{padding-top:1.5rem !important}.pr-lg-4,.px-lg-4{padding-right:1.5rem !important}.pb-lg-4,.py-lg-4{padding-bottom:1.5rem !important}.pl-lg-4,.px-lg-4{padding-left:1.5rem !important}.p-lg-5{padding:3rem !important}.pt-lg-5,.py-lg-5{padding-top:3rem !important}.pr-lg-5,.px-lg-5{padding-right:3rem !important}.pb-lg-5,.py-lg-5{padding-bottom:3rem !important}.pl-lg-5,.px-lg-5{padding-left:3rem !important}.m-lg-n1{margin:-0.25rem !important}.mt-lg-n1,.my-lg-n1{margin-top:-0.25rem !important}.mr-lg-n1,.mx-lg-n1{margin-right:-0.25rem !important}.mb-lg-n1,.my-lg-n1{margin-bottom:-0.25rem !important}.ml-lg-n1,.mx-lg-n1{margin-left:-0.25rem !important}.m-lg-n2{margin:-0.5rem !important}.mt-lg-n2,.my-lg-n2{margin-top:-0.5rem !important}.mr-lg-n2,.mx-lg-n2{margin-right:-0.5rem !important}.mb-lg-n2,.my-lg-n2{margin-bottom:-0.5rem !important}.ml-lg-n2,.mx-lg-n2{margin-left:-0.5rem !important}.m-lg-n3{margin:-1rem !important}.mt-lg-n3,.my-lg-n3{margin-top:-1rem !important}.mr-lg-n3,.mx-lg-n3{margin-right:-1rem !important}.mb-lg-n3,.my-lg-n3{margin-bottom:-1rem !important}.ml-lg-n3,.mx-lg-n3{margin-left:-1rem !important}.m-lg-n4{margin:-1.5rem !important}.mt-lg-n4,.my-lg-n4{margin-top:-1.5rem !important}.mr-lg-n4,.mx-lg-n4{margin-right:-1.5rem !important}.mb-lg-n4,.my-lg-n4{margin-bottom:-1.5rem !important}.ml-lg-n4,.mx-lg-n4{margin-left:-1.5rem !important}.m-lg-n5{margin:-3rem !important}.mt-lg-n5,.my-lg-n5{margin-top:-3rem !important}.mr-lg-n5,.mx-lg-n5{margin-right:-3rem !important}.mb-lg-n5,.my-lg-n5{margin-bottom:-3rem !important}.ml-lg-n5,.mx-lg-n5{margin-left:-3rem !important}.m-lg-auto{margin:auto !important}.mt-lg-auto,.my-lg-auto{margin-top:auto !important}.mr-lg-auto,.mx-lg-auto{margin-right:auto !important}.mb-lg-auto,.my-lg-auto{margin-bottom:auto !important}.ml-lg-auto,.mx-lg-auto{margin-left:auto !important}}@media (min-width: 1200px){.m-xl-0{margin:0 !important}.mt-xl-0,.my-xl-0{margin-top:0 !important}.mr-xl-0,.mx-xl-0{margin-right:0 !important}.mb-xl-0,.my-xl-0{margin-bottom:0 !important}.ml-xl-0,.mx-xl-0{margin-left:0 !important}.m-xl-1{margin:0.25rem !important}.mt-xl-1,.my-xl-1{margin-top:0.25rem !important}.mr-xl-1,.mx-xl-1{margin-right:0.25rem !important}.mb-xl-1,.my-xl-1{margin-bottom:0.25rem !important}.ml-xl-1,.mx-xl-1{margin-left:0.25rem !important}.m-xl-2{margin:0.5rem !important}.mt-xl-2,.my-xl-2{margin-top:0.5rem !important}.mr-xl-2,.mx-xl-2{margin-right:0.5rem !important}.mb-xl-2,.my-xl-2{margin-bottom:0.5rem !important}.ml-xl-2,.mx-xl-2{margin-left:0.5rem !important}.m-xl-3{margin:1rem !important}.mt-xl-3,.my-xl-3{margin-top:1rem !important}.mr-xl-3,.mx-xl-3{margin-right:1rem !important}.mb-xl-3,.my-xl-3{margin-bottom:1rem !important}.ml-xl-3,.mx-xl-3{margin-left:1rem !important}.m-xl-4{margin:1.5rem !important}.mt-xl-4,.my-xl-4{margin-top:1.5rem !important}.mr-xl-4,.mx-xl-4{margin-right:1.5rem !important}.mb-xl-4,.my-xl-4{margin-bottom:1.5rem !important}.ml-xl-4,.mx-xl-4{margin-left:1.5rem !important}.m-xl-5{margin:3rem !important}.mt-xl-5,.my-xl-5{margin-top:3rem !important}.mr-xl-5,.mx-xl-5{margin-right:3rem !important}.mb-xl-5,.my-xl-5{margin-bottom:3rem !important}.ml-xl-5,.mx-xl-5{margin-left:3rem !important}.p-xl-0{padding:0 !important}.pt-xl-0,.py-xl-0{padding-top:0 !important}.pr-xl-0,.px-xl-0{padding-right:0 !important}.pb-xl-0,.py-xl-0{padding-bottom:0 !important}.pl-xl-0,.px-xl-0{padding-left:0 !important}.p-xl-1{padding:0.25rem !important}.pt-xl-1,.py-xl-1{padding-top:0.25rem !important}.pr-xl-1,.px-xl-1{padding-right:0.25rem !important}.pb-xl-1,.py-xl-1{padding-bottom:0.25rem !important}.pl-xl-1,.px-xl-1{padding-left:0.25rem !important}.p-xl-2{padding:0.5rem !important}.pt-xl-2,.py-xl-2{padding-top:0.5rem !important}.pr-xl-2,.px-xl-2{padding-right:0.5rem !important}.pb-xl-2,.py-xl-2{padding-bottom:0.5rem !important}.pl-xl-2,.px-xl-2{padding-left:0.5rem !important}.p-xl-3{padding:1rem !important}.pt-xl-3,.py-xl-3{padding-top:1rem !important}.pr-xl-3,.px-xl-3{padding-right:1rem !important}.pb-xl-3,.py-xl-3{padding-bottom:1rem !important}.pl-xl-3,.px-xl-3{padding-left:1rem !important}.p-xl-4{padding:1.5rem !important}.pt-xl-4,.py-xl-4{padding-top:1.5rem !important}.pr-xl-4,.px-xl-4{padding-right:1.5rem !important}.pb-xl-4,.py-xl-4{padding-bottom:1.5rem !important}.pl-xl-4,.px-xl-4{padding-left:1.5rem !important}.p-xl-5{padding:3rem !important}.pt-xl-5,.py-xl-5{padding-top:3rem !important}.pr-xl-5,.px-xl-5{padding-right:3rem !important}.pb-xl-5,.py-xl-5{padding-bottom:3rem !important}.pl-xl-5,.px-xl-5{padding-left:3rem !important}.m-xl-n1{margin:-0.25rem !important}.mt-xl-n1,.my-xl-n1{margin-top:-0.25rem !important}.mr-xl-n1,.mx-xl-n1{margin-right:-0.25rem !important}.mb-xl-n1,.my-xl-n1{margin-bottom:-0.25rem !important}.ml-xl-n1,.mx-xl-n1{margin-left:-0.25rem !important}.m-xl-n2{margin:-0.5rem !important}.mt-xl-n2,.my-xl-n2{margin-top:-0.5rem !important}.mr-xl-n2,.mx-xl-n2{margin-right:-0.5rem !important}.mb-xl-n2,.my-xl-n2{margin-bottom:-0.5rem !important}.ml-xl-n2,.mx-xl-n2{margin-left:-0.5rem !important}.m-xl-n3{margin:-1rem !important}.mt-xl-n3,.my-xl-n3{margin-top:-1rem !important}.mr-xl-n3,.mx-xl-n3{margin-right:-1rem !important}.mb-xl-n3,.my-xl-n3{margin-bottom:-1rem !important}.ml-xl-n3,.mx-xl-n3{margin-left:-1rem !important}.m-xl-n4{margin:-1.5rem !important}.mt-xl-n4,.my-xl-n4{margin-top:-1.5rem !important}.mr-xl-n4,.mx-xl-n4{margin-right:-1.5rem !important}.mb-xl-n4,.my-xl-n4{margin-bottom:-1.5rem !important}.ml-xl-n4,.mx-xl-n4{margin-left:-1.5rem !important}.m-xl-n5{margin:-3rem !important}.mt-xl-n5,.my-xl-n5{margin-top:-3rem !important}.mr-xl-n5,.mx-xl-n5{margin-right:-3rem !important}.mb-xl-n5,.my-xl-n5{margin-bottom:-3rem !important}.ml-xl-n5,.mx-xl-n5{margin-left:-3rem !important}.m-xl-auto{margin:auto !important}.mt-xl-auto,.my-xl-auto{margin-top:auto !important}.mr-xl-auto,.mx-xl-auto{margin-right:auto !important}.mb-xl-auto,.my-xl-auto{margin-bottom:auto !important}.ml-xl-auto,.mx-xl-auto{margin-left:auto !important}}.stretched-link::after{position:absolute;top:0;right:0;bottom:0;left:0;z-index:1;pointer-events:auto;content:\"\";background-color:rgba(0, 0, 0, 0)}.text-monospace{font-family:SFMono-Regular, Menlo, Monaco, Consolas, \"Liberation Mono\", \"Courier New\", monospace !important}.text-justify{text-align:justify !important}.text-wrap{white-space:normal !important}.text-nowrap{white-space:nowrap !important}.text-truncate{overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.text-left{text-align:left !important}.text-right{text-align:right !important}.text-center{text-align:center !important}@media (min-width: 576px){.text-sm-left{text-align:left !important}.text-sm-right{text-align:right !important}.text-sm-center{text-align:center !important}}@media (min-width: 768px){.text-md-left{text-align:left !important}.text-md-right{text-align:right !important}.text-md-center{text-align:center !important}}@media (min-width: 992px){.text-lg-left{text-align:left !important}.text-lg-right{text-align:right !important}.text-lg-center{text-align:center !important}}@media (min-width: 1200px){.text-xl-left{text-align:left !important}.text-xl-right{text-align:right !important}.text-xl-center{text-align:center !important}}.text-lowercase{text-transform:lowercase !important}.text-uppercase{text-transform:uppercase !important}.text-capitalize{text-transform:capitalize !important}.font-weight-light{font-weight:300 !important}.font-weight-lighter{font-weight:lighter !important}.font-weight-normal{font-weight:400 !important}.font-weight-bold{font-weight:700 !important}.font-weight-bolder{font-weight:bolder !important}.font-italic{font-style:italic !important}.text-white{color:#fff !important}.text-primary{color:#007bff !important}a.text-primary:hover,a.text-primary:focus{color:#0056b3 !important}.text-secondary{color:#6c757d !important}a.text-secondary:hover,a.text-secondary:focus{color:#494f54 !important}.text-success{color:#28a745 !important}a.text-success:hover,a.text-success:focus{color:#19692c !important}.text-info{color:#17a2b8 !important}a.text-info:hover,a.text-info:focus{color:#0f6674 !important}.text-warning{color:#ffc107 !important}a.text-warning:hover,a.text-warning:focus{color:#ba8b00 !important}.text-danger{color:#dc3545 !important}a.text-danger:hover,a.text-danger:focus{color:#a71d2a !important}.text-light{color:#f8f9fa !important}a.text-light:hover,a.text-light:focus{color:#cbd3da !important}.text-dark{color:#343a40 !important}a.text-dark:hover,a.text-dark:focus{color:#121416 !important}.text-body{color:#212529 !important}.text-muted{color:#6c757d !important}.text-black-50{color:rgba(0, 0, 0, 0.5) !important}.text-white-50{color:rgba(255, 255, 255, 0.5) !important}.text-hide{font:0/0 a;color:transparent;text-shadow:none;background-color:transparent;border:0}.text-decoration-none{text-decoration:none !important}.text-break{word-break:break-word !important;overflow-wrap:break-word !important}.text-reset{color:inherit !important}.visible{visibility:visible !important}.invisible{visibility:hidden !important}@media print{*,*::before,*::after{text-shadow:none !important;-webkit-box-shadow:none !important;box-shadow:none !important}a:not(.btn){text-decoration:underline}abbr[title]::after{content:\" (\" attr(title) \")\"}pre{white-space:pre-wrap !important}pre,blockquote{border:1px solid #adb5bd;page-break-inside:avoid}thead{display:table-header-group}tr,img{page-break-inside:avoid}p,h2,h3{orphans:3;widows:3}h2,h3{page-break-after:avoid}@page {size:a3}body{min-width:992px !important}.container{min-width:992px !important}.navbar{display:none}.badge{border:1px solid #000}.table{border-collapse:collapse !important}.table td,.table th{background-color:#fff !important}.table-bordered th,.table-bordered td{border:1px solid #dee2e6 !important}.table-dark{color:inherit}.table-dark th,.table-dark td,.table-dark thead th,.table-dark tbody+tbody{border-color:#dee2e6}.table .thead-dark th{color:inherit;border-color:#dee2e6}}";
const Bootstrap = class {
  constructor(hostRef) {
    (0,_index_10623738_js__WEBPACK_IMPORTED_MODULE_1__.r)(this, hostRef);
  }

  render() {
    return (0,_index_10623738_js__WEBPACK_IMPORTED_MODULE_1__.h)(_index_10623738_js__WEBPACK_IMPORTED_MODULE_1__.H, {
      "aria-hidden": "true",
      hidden: true
    }, (0,_index_10623738_js__WEBPACK_IMPORTED_MODULE_1__.h)("slot", null));
  }

};
Bootstrap.style = bootstrapCss;

class ButtonRender {
  constructor(component, handlers) {
    this.component = component;
    this.hasDisabledImage = false;
    this.handleClick = handlers.handleClick;
  }

  componentWillLoad() {
    const element = this.component.element;
    this.hasDisabledImage = element.querySelector("[slot='disabled-image']") !== null;
  }

  render(slots) {
    const button = this.component; // True if the button does not have any text

    const isEmptyCaption = button.element.textContent.trim() === "";
    /*  Main image and disabled image are set with an empty alt as they are
        decorative images, but if the button has no caption, the alt property
        will take the name of the image.
    */

    const images = button.element.querySelectorAll("[slot='main-image'], [slot='disabled-image']");
    Array.from(images).forEach(img => {
      if (!img.alt) {
        // The src image property always contains a path to the image file
        const alt = isEmptyCaption ? (0,_css_variables_watcher_cf910941_js__WEBPACK_IMPORTED_MODULE_4__.g)(img.src) : "";
        img.setAttribute("alt", alt);
      }
    });
    return (0,_index_10623738_js__WEBPACK_IMPORTED_MODULE_1__.h)(_index_10623738_js__WEBPACK_IMPORTED_MODULE_1__.H, {
      role: "button",
      class: {
        "gx-button--disabled": button.disabled,
        [(0,_image_position_f497f3df_js__WEBPACK_IMPORTED_MODULE_6__.a)(button.imagePosition)]: true,
        [_image_position_f497f3df_js__WEBPACK_IMPORTED_MODULE_6__.h]: button.disabled && this.hasDisabledImage,
        ["stretch-height"]: button.height === "",
        // Strings with only white spaces are taken as null captions
        "empty-caption": isEmptyCaption
      },
      style: {
        "--width": button.width === "" ? "100%" : button.width,
        "--height": button.height === "" ? "auto" : button.height
      }
    }, (0,_index_10623738_js__WEBPACK_IMPORTED_MODULE_1__.h)("gx-bootstrap", null), (0,_index_10623738_js__WEBPACK_IMPORTED_MODULE_1__.h)("button", {
      class: {
        btn: true,
        "p-0": true,
        "btn-lg": button.size === "large",
        "btn-sm": button.size === "small",
        "gx-button": true,
        [button.cssClass]: !!button.cssClass
      },
      disabled: button.disabled,
      onClick: this.handleClick,
      tabindex: "0"
    }, (0,_image_position_f497f3df_js__WEBPACK_IMPORTED_MODULE_6__.i)(slots)));
  }

}

const buttonCss = ".gx-line-clamp{display:-webkit-box;-webkit-box-orient:vertical;-webkit-line-clamp:var(--max-lines);overflow:hidden}.line-measuring{visibility:hidden;position:absolute}gx-button{--elevation:0}gx-button>button{-webkit-box-shadow:0 calc(var(--elevation) * 0.125rem) calc(var(--elevation) * 0.25rem) rgba(0, 0, 0, calc(var(--elevation) * 0.075));box-shadow:0 calc(var(--elevation) * 0.125rem) calc(var(--elevation) * 0.25rem) rgba(0, 0, 0, calc(var(--elevation) * 0.075))}gx-table-cell>gx-button{width:var(--width, auto)}gx-canvas-cell>gx-button{-ms-flex:1;flex:1}gx-button{--gx-button-image-size:16px;--gx-button-image-margin-top:0px;--gx-button-image-margin-right:0px;--gx-button-image-margin-bottom:0px;--gx-button-image-margin-left:0px;display:-ms-inline-flexbox;display:inline-flex;--margin-top:initial;--margin-right:initial;--margin-bottom:initial;--margin-left:initial;--width:initial;--height:initial;margin-top:var(--margin-top, 0);margin-right:var(--margin-right, 0);margin-bottom:var(--margin-bottom, 0);margin-left:var(--margin-left, 0);height:var(--height);vertical-align:middle;}gx-button[hidden]{display:none !important}gx-button[hidden][invisible-mode=keep-space]{display:-ms-inline-flexbox !important;display:inline-flex !important;visibility:hidden}gx-button>button.gx-button{-ms-flex:1;flex:1;display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column;position:relative;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center}gx-button>button.gx-button>img[slot=disabled-image]{display:none}gx-button.gx-image-position--below>button.gx-button>img{-ms-flex-order:99;order:99}gx-button.gx-image-position--before>button.gx-button{-ms-flex-direction:row;flex-direction:row}gx-button.gx-image-position--after>button.gx-button{-ms-flex-direction:row;flex-direction:row}gx-button.gx-image-position--after>button.gx-button>img{-ms-flex-order:99;order:99}gx-button.gx-image-position--behind>button.gx-button{-ms-flex-direction:column;flex-direction:column}gx-button.gx-image-position--behind>button.gx-button>img{position:absolute}gx-button.gx-image-position--behind>button.gx-button>span{z-index:1}gx-button.gx-image-position--hide-main>button.gx-button>img[slot=main-image]{display:none}gx-button.gx-button--disabled>button.gx-button>img[slot=disabled-image]{display:inline-block}gx-button.gx-image-position--before [slot=main-image],gx-button.gx-image-position--before [slot=disabled-image],gx-button.gx-image-position--after [slot=main-image],gx-button.gx-image-position--after [slot=disabled-image],gx-button.gx-image-position--above [slot=main-image],gx-button.gx-image-position--above [slot=disabled-image],gx-button.gx-image-position--below [slot=main-image],gx-button.gx-image-position--below [slot=disabled-image],gx-button.gx-image-position--behind [slot=main-image],gx-button.gx-image-position--behind [slot=disabled-image]{margin:var(--gx-button-image-margin-top) var(--gx-button-image-margin-right) var(--gx-button-image-margin-bottom) var(--gx-button-image-margin-left)}gx-button.stretch-height{-ms-flex-item-align:stretch;align-self:stretch}gx-button.empty-caption{--gx-button-image-size:100%}gx-button>button.gx-button{display:-ms-flexbox;display:flex;-ms-flex:1;flex:1;-ms-flex-direction:column;flex-direction:column;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;position:relative;background-repeat:no-repeat;background-position:center center;background-size:contain;max-width:100%}gx-button>button.gx-button>img{height:var(--gx-button-image-size);width:var(--gx-button-image-size);-o-object-fit:contain;object-fit:contain}gx-button>button.gx-button>span{display:block;max-width:100%;white-space:nowrap;overflow:hidden;text-overflow:ellipsis}gx-button>button.gx-button:not(:disabled):not(.disabled):focus,gx-button>button.gx-button:not(:disabled):not(.disabled):active:focus{-webkit-box-shadow:none;box-shadow:none}";
const Button = class {
  constructor(hostRef) {
    (0,_index_10623738_js__WEBPACK_IMPORTED_MODULE_1__.r)(this, hostRef);
    /**
     * This attribute lets you specify how this element will behave when hidden.
     *
     * | Value        | Details                                                                     |
     * | ------------ | --------------------------------------------------------------------------- |
     * | `keep-space` | The element remains in the document flow, and it does occupy space.         |
     * | `collapse`   | The element is removed form the document flow, and it doesn't occupy space. |
     */

    this.invisibleMode = "collapse";
    /**
     * This attribute lets you specify if the element is disabled.
     * If disabled, it will not fire any user interaction related event
     * (for example, click event). If a disabled image has been specified,
     * it will be shown, hiding the base image (if specified).
     */

    this.disabled = false;
    /**
     * This attribute lets you specify the relative location of the image to the text.
     *
     * | Value    | Details                                                 |
     * | -------- | ------------------------------------------------------- |
     * | `above`  | The image is located above the text.                    |
     * | `before` | The image is located before the text, in the same line. |
     * | `after`  | The image is located after the text, in the same line.  |
     * | `below`  | The image is located below the text.                    |
     * | `behind` | The image is located behind the text.                   |
     */

    this.imagePosition = "above";
    /**
     * This attribute lets you specify the size of the button.
     *
     * | Value    | Details                                                 |
     * | -------- | ------------------------------------------------------- |
     * | `large`  | Large sized button.                                     |
     * | `normal` | Standard sized button.                                  |
     * | `small`  | Small sized button.                                     |
     */

    this.size = "normal";
    /**
     * True to highlight control when an action is fired.
     */

    this.highlightable = false;
    /**
     * This attribute lets you specify the width.
     */

    this.width = "";
    /**
     * This attribute lets you specify the height.
     */

    this.height = "";
    this.renderer = new ButtonRender(this, {
      handleClick: this.handleClick.bind(this)
    });
  }

  handleClick(event) {
    if (this.disabled) {
      event.stopPropagation();
      return;
    }
  }

  componentWillLoad() {
    this.renderer.componentWillLoad();
  }

  componentDidLoad() {
    (0,_highlightable_e5a00dd1_js__WEBPACK_IMPORTED_MODULE_3__.m)(this);
  }

  render() {
    return this.renderer.render({
      default: (0,_index_10623738_js__WEBPACK_IMPORTED_MODULE_1__.h)("slot", null),
      disabledImage: (0,_index_10623738_js__WEBPACK_IMPORTED_MODULE_1__.h)("slot", {
        name: "disabled-image"
      }),
      mainImage: (0,_index_10623738_js__WEBPACK_IMPORTED_MODULE_1__.h)("slot", {
        name: "main-image"
      })
    });
  }

  get element() {
    return (0,_index_10623738_js__WEBPACK_IMPORTED_MODULE_1__.g)(this);
  }

};
Button.style = buttonCss;
/**!
 * @fileOverview Kickass library to create and place poppers near their reference elements.
 * @version 1.16.1
 * @license
 * Copyright (c) 2016 Federico Zivolo and contributors
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

var isBrowser = typeof window !== 'undefined' && typeof document !== 'undefined' && typeof navigator !== 'undefined';

var timeoutDuration = function () {
  var longerTimeoutBrowsers = ['Edge', 'Trident', 'Firefox'];

  for (var i = 0; i < longerTimeoutBrowsers.length; i += 1) {
    if (isBrowser && navigator.userAgent.indexOf(longerTimeoutBrowsers[i]) >= 0) {
      return 1;
    }
  }

  return 0;
}();

function microtaskDebounce(fn) {
  var called = false;
  return function () {
    if (called) {
      return;
    }

    called = true;
    window.Promise.resolve().then(function () {
      called = false;
      fn();
    });
  };
}

function taskDebounce(fn) {
  var scheduled = false;
  return function () {
    if (!scheduled) {
      scheduled = true;
      setTimeout(function () {
        scheduled = false;
        fn();
      }, timeoutDuration);
    }
  };
}

var supportsMicroTasks = isBrowser && window.Promise;
/**
* Create a debounced version of a method, that's asynchronously deferred
* but called in the minimum time possible.
*
* @method
* @memberof Popper.Utils
* @argument {Function} fn
* @returns {Function}
*/

var debounce = supportsMicroTasks ? microtaskDebounce : taskDebounce;
/**
 * Check if the given variable is a function
 * @method
 * @memberof Popper.Utils
 * @argument {Any} functionToCheck - variable to check
 * @returns {Boolean} answer to: is a function?
 */

function isFunction(functionToCheck) {
  var getType = {};
  return functionToCheck && getType.toString.call(functionToCheck) === '[object Function]';
}
/**
 * Get CSS computed property of the given element
 * @method
 * @memberof Popper.Utils
 * @argument {Eement} element
 * @argument {String} property
 */


function getStyleComputedProperty(element, property) {
  if (element.nodeType !== 1) {
    return [];
  } // NOTE: 1 DOM access here


  var window = element.ownerDocument.defaultView;
  var css = window.getComputedStyle(element, null);
  return property ? css[property] : css;
}
/**
 * Returns the parentNode or the host of the element
 * @method
 * @memberof Popper.Utils
 * @argument {Element} element
 * @returns {Element} parent
 */


function getParentNode(element) {
  if (element.nodeName === 'HTML') {
    return element;
  }

  return element.parentNode || element.host;
}
/**
 * Returns the scrolling parent of the given element
 * @method
 * @memberof Popper.Utils
 * @argument {Element} element
 * @returns {Element} scroll parent
 */


function getScrollParent(element) {
  // Return body, `getScroll` will take care to get the correct `scrollTop` from it
  if (!element) {
    return document.body;
  }

  switch (element.nodeName) {
    case 'HTML':
    case 'BODY':
      return element.ownerDocument.body;

    case '#document':
      return element.body;
  } // Firefox want us to check `-x` and `-y` variations as well


  var _getStyleComputedProp = getStyleComputedProperty(element),
      overflow = _getStyleComputedProp.overflow,
      overflowX = _getStyleComputedProp.overflowX,
      overflowY = _getStyleComputedProp.overflowY;

  if (/(auto|scroll|overlay)/.test(overflow + overflowY + overflowX)) {
    return element;
  }

  return getScrollParent(getParentNode(element));
}
/**
 * Returns the reference node of the reference object, or the reference object itself.
 * @method
 * @memberof Popper.Utils
 * @param {Element|Object} reference - the reference element (the popper will be relative to this)
 * @returns {Element} parent
 */


function getReferenceNode(reference) {
  return reference && reference.referenceNode ? reference.referenceNode : reference;
}

var isIE11 = isBrowser && !!(window.MSInputMethodContext && document.documentMode);
var isIE10 = isBrowser && /MSIE 10/.test(navigator.userAgent);
/**
 * Determines if the browser is Internet Explorer
 * @method
 * @memberof Popper.Utils
 * @param {Number} version to check
 * @returns {Boolean} isIE
 */

function isIE(version) {
  if (version === 11) {
    return isIE11;
  }

  if (version === 10) {
    return isIE10;
  }

  return isIE11 || isIE10;
}
/**
 * Returns the offset parent of the given element
 * @method
 * @memberof Popper.Utils
 * @argument {Element} element
 * @returns {Element} offset parent
 */


function getOffsetParent(element) {
  if (!element) {
    return document.documentElement;
  }

  var noOffsetParent = isIE(10) ? document.body : null; // NOTE: 1 DOM access here

  var offsetParent = element.offsetParent || null; // Skip hidden elements which don't have an offsetParent

  while (offsetParent === noOffsetParent && element.nextElementSibling) {
    offsetParent = (element = element.nextElementSibling).offsetParent;
  }

  var nodeName = offsetParent && offsetParent.nodeName;

  if (!nodeName || nodeName === 'BODY' || nodeName === 'HTML') {
    return element ? element.ownerDocument.documentElement : document.documentElement;
  } // .offsetParent will return the closest TH, TD or TABLE in case
  // no offsetParent is present, I hate this job...


  if (['TH', 'TD', 'TABLE'].indexOf(offsetParent.nodeName) !== -1 && getStyleComputedProperty(offsetParent, 'position') === 'static') {
    return getOffsetParent(offsetParent);
  }

  return offsetParent;
}

function isOffsetContainer(element) {
  var nodeName = element.nodeName;

  if (nodeName === 'BODY') {
    return false;
  }

  return nodeName === 'HTML' || getOffsetParent(element.firstElementChild) === element;
}
/**
 * Finds the root node (document, shadowDOM root) of the given element
 * @method
 * @memberof Popper.Utils
 * @argument {Element} node
 * @returns {Element} root node
 */


function getRoot(node) {
  if (node.parentNode !== null) {
    return getRoot(node.parentNode);
  }

  return node;
}
/**
 * Finds the offset parent common to the two provided nodes
 * @method
 * @memberof Popper.Utils
 * @argument {Element} element1
 * @argument {Element} element2
 * @returns {Element} common offset parent
 */


function findCommonOffsetParent(element1, element2) {
  // This check is needed to avoid errors in case one of the elements isn't defined for any reason
  if (!element1 || !element1.nodeType || !element2 || !element2.nodeType) {
    return document.documentElement;
  } // Here we make sure to give as "start" the element that comes first in the DOM


  var order = element1.compareDocumentPosition(element2) & Node.DOCUMENT_POSITION_FOLLOWING;
  var start = order ? element1 : element2;
  var end = order ? element2 : element1; // Get common ancestor container

  var range = document.createRange();
  range.setStart(start, 0);
  range.setEnd(end, 0);
  var commonAncestorContainer = range.commonAncestorContainer; // Both nodes are inside #document

  if (element1 !== commonAncestorContainer && element2 !== commonAncestorContainer || start.contains(end)) {
    if (isOffsetContainer(commonAncestorContainer)) {
      return commonAncestorContainer;
    }

    return getOffsetParent(commonAncestorContainer);
  } // one of the nodes is inside shadowDOM, find which one


  var element1root = getRoot(element1);

  if (element1root.host) {
    return findCommonOffsetParent(element1root.host, element2);
  } else {
    return findCommonOffsetParent(element1, getRoot(element2).host);
  }
}
/**
 * Gets the scroll value of the given element in the given side (top and left)
 * @method
 * @memberof Popper.Utils
 * @argument {Element} element
 * @argument {String} side `top` or `left`
 * @returns {number} amount of scrolled pixels
 */


function getScroll(element) {
  var side = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'top';
  var upperSide = side === 'top' ? 'scrollTop' : 'scrollLeft';
  var nodeName = element.nodeName;

  if (nodeName === 'BODY' || nodeName === 'HTML') {
    var html = element.ownerDocument.documentElement;
    var scrollingElement = element.ownerDocument.scrollingElement || html;
    return scrollingElement[upperSide];
  }

  return element[upperSide];
}
/*
 * Sum or subtract the element scroll values (left and top) from a given rect object
 * @method
 * @memberof Popper.Utils
 * @param {Object} rect - Rect object you want to change
 * @param {HTMLElement} element - The element from the function reads the scroll values
 * @param {Boolean} subtract - set to true if you want to subtract the scroll values
 * @return {Object} rect - The modifier rect object
 */


function includeScroll(rect, element) {
  var subtract = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;
  var scrollTop = getScroll(element, 'top');
  var scrollLeft = getScroll(element, 'left');
  var modifier = subtract ? -1 : 1;
  rect.top += scrollTop * modifier;
  rect.bottom += scrollTop * modifier;
  rect.left += scrollLeft * modifier;
  rect.right += scrollLeft * modifier;
  return rect;
}
/*
 * Helper to detect borders of a given element
 * @method
 * @memberof Popper.Utils
 * @param {CSSStyleDeclaration} styles
 * Result of `getStyleComputedProperty` on the given element
 * @param {String} axis - `x` or `y`
 * @return {number} borders - The borders size of the given axis
 */


function getBordersSize(styles, axis) {
  var sideA = axis === 'x' ? 'Left' : 'Top';
  var sideB = sideA === 'Left' ? 'Right' : 'Bottom';
  return parseFloat(styles['border' + sideA + 'Width']) + parseFloat(styles['border' + sideB + 'Width']);
}

function getSize(axis, body, html, computedStyle) {
  return Math.max(body['offset' + axis], body['scroll' + axis], html['client' + axis], html['offset' + axis], html['scroll' + axis], isIE(10) ? parseInt(html['offset' + axis]) + parseInt(computedStyle['margin' + (axis === 'Height' ? 'Top' : 'Left')]) + parseInt(computedStyle['margin' + (axis === 'Height' ? 'Bottom' : 'Right')]) : 0);
}

function getWindowSizes(document) {
  var body = document.body;
  var html = document.documentElement;
  var computedStyle = isIE(10) && getComputedStyle(html);
  return {
    height: getSize('Height', body, html, computedStyle),
    width: getSize('Width', body, html, computedStyle)
  };
}

var classCallCheck = function (instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
};

var createClass = function () {
  function defineProperties(target, props) {
    for (var i = 0; i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor) descriptor.writable = true;
      Object.defineProperty(target, descriptor.key, descriptor);
    }
  }

  return function (Constructor, protoProps, staticProps) {
    if (protoProps) defineProperties(Constructor.prototype, protoProps);
    if (staticProps) defineProperties(Constructor, staticProps);
    return Constructor;
  };
}();

var defineProperty = function (obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
};

var _extends = Object.assign || function (target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i];

    for (var key in source) {
      if (Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key];
      }
    }
  }

  return target;
};
/**
 * Given element offsets, generate an output similar to getBoundingClientRect
 * @method
 * @memberof Popper.Utils
 * @argument {Object} offsets
 * @returns {Object} ClientRect like output
 */


function getClientRect(offsets) {
  return _extends({}, offsets, {
    right: offsets.left + offsets.width,
    bottom: offsets.top + offsets.height
  });
}
/**
 * Get bounding client rect of given element
 * @method
 * @memberof Popper.Utils
 * @param {HTMLElement} element
 * @return {Object} client rect
 */


function getBoundingClientRect(element) {
  var rect = {}; // IE10 10 FIX: Please, don't ask, the element isn't
  // considered in DOM in some circumstances...
  // This isn't reproducible in IE10 compatibility mode of IE11

  try {
    if (isIE(10)) {
      rect = element.getBoundingClientRect();
      var scrollTop = getScroll(element, 'top');
      var scrollLeft = getScroll(element, 'left');
      rect.top += scrollTop;
      rect.left += scrollLeft;
      rect.bottom += scrollTop;
      rect.right += scrollLeft;
    } else {
      rect = element.getBoundingClientRect();
    }
  } catch (e) {}

  var result = {
    left: rect.left,
    top: rect.top,
    width: rect.right - rect.left,
    height: rect.bottom - rect.top
  }; // subtract scrollbar size from sizes

  var sizes = element.nodeName === 'HTML' ? getWindowSizes(element.ownerDocument) : {};
  var width = sizes.width || element.clientWidth || result.width;
  var height = sizes.height || element.clientHeight || result.height;
  var horizScrollbar = element.offsetWidth - width;
  var vertScrollbar = element.offsetHeight - height; // if an hypothetical scrollbar is detected, we must be sure it's not a `border`
  // we make this check conditional for performance reasons

  if (horizScrollbar || vertScrollbar) {
    var styles = getStyleComputedProperty(element);
    horizScrollbar -= getBordersSize(styles, 'x');
    vertScrollbar -= getBordersSize(styles, 'y');
    result.width -= horizScrollbar;
    result.height -= vertScrollbar;
  }

  return getClientRect(result);
}

function getOffsetRectRelativeToArbitraryNode(children, parent) {
  var fixedPosition = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;
  var isIE10 = isIE(10);
  var isHTML = parent.nodeName === 'HTML';
  var childrenRect = getBoundingClientRect(children);
  var parentRect = getBoundingClientRect(parent);
  var scrollParent = getScrollParent(children);
  var styles = getStyleComputedProperty(parent);
  var borderTopWidth = parseFloat(styles.borderTopWidth);
  var borderLeftWidth = parseFloat(styles.borderLeftWidth); // In cases where the parent is fixed, we must ignore negative scroll in offset calc

  if (fixedPosition && isHTML) {
    parentRect.top = Math.max(parentRect.top, 0);
    parentRect.left = Math.max(parentRect.left, 0);
  }

  var offsets = getClientRect({
    top: childrenRect.top - parentRect.top - borderTopWidth,
    left: childrenRect.left - parentRect.left - borderLeftWidth,
    width: childrenRect.width,
    height: childrenRect.height
  });
  offsets.marginTop = 0;
  offsets.marginLeft = 0; // Subtract margins of documentElement in case it's being used as parent
  // we do this only on HTML because it's the only element that behaves
  // differently when margins are applied to it. The margins are included in
  // the box of the documentElement, in the other cases not.

  if (!isIE10 && isHTML) {
    var marginTop = parseFloat(styles.marginTop);
    var marginLeft = parseFloat(styles.marginLeft);
    offsets.top -= borderTopWidth - marginTop;
    offsets.bottom -= borderTopWidth - marginTop;
    offsets.left -= borderLeftWidth - marginLeft;
    offsets.right -= borderLeftWidth - marginLeft; // Attach marginTop and marginLeft because in some circumstances we may need them

    offsets.marginTop = marginTop;
    offsets.marginLeft = marginLeft;
  }

  if (isIE10 && !fixedPosition ? parent.contains(scrollParent) : parent === scrollParent && scrollParent.nodeName !== 'BODY') {
    offsets = includeScroll(offsets, parent);
  }

  return offsets;
}

function getViewportOffsetRectRelativeToArtbitraryNode(element) {
  var excludeScroll = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
  var html = element.ownerDocument.documentElement;
  var relativeOffset = getOffsetRectRelativeToArbitraryNode(element, html);
  var width = Math.max(html.clientWidth, window.innerWidth || 0);
  var height = Math.max(html.clientHeight, window.innerHeight || 0);
  var scrollTop = !excludeScroll ? getScroll(html) : 0;
  var scrollLeft = !excludeScroll ? getScroll(html, 'left') : 0;
  var offset = {
    top: scrollTop - relativeOffset.top + relativeOffset.marginTop,
    left: scrollLeft - relativeOffset.left + relativeOffset.marginLeft,
    width: width,
    height: height
  };
  return getClientRect(offset);
}
/**
 * Check if the given element is fixed or is inside a fixed parent
 * @method
 * @memberof Popper.Utils
 * @argument {Element} element
 * @argument {Element} customContainer
 * @returns {Boolean} answer to "isFixed?"
 */


function isFixed(element) {
  var nodeName = element.nodeName;

  if (nodeName === 'BODY' || nodeName === 'HTML') {
    return false;
  }

  if (getStyleComputedProperty(element, 'position') === 'fixed') {
    return true;
  }

  var parentNode = getParentNode(element);

  if (!parentNode) {
    return false;
  }

  return isFixed(parentNode);
}
/**
 * Finds the first parent of an element that has a transformed property defined
 * @method
 * @memberof Popper.Utils
 * @argument {Element} element
 * @returns {Element} first transformed parent or documentElement
 */


function getFixedPositionOffsetParent(element) {
  // This check is needed to avoid errors in case one of the elements isn't defined for any reason
  if (!element || !element.parentElement || isIE()) {
    return document.documentElement;
  }

  var el = element.parentElement;

  while (el && getStyleComputedProperty(el, 'transform') === 'none') {
    el = el.parentElement;
  }

  return el || document.documentElement;
}
/**
 * Computed the boundaries limits and return them
 * @method
 * @memberof Popper.Utils
 * @param {HTMLElement} popper
 * @param {HTMLElement} reference
 * @param {number} padding
 * @param {HTMLElement} boundariesElement - Element used to define the boundaries
 * @param {Boolean} fixedPosition - Is in fixed position mode
 * @returns {Object} Coordinates of the boundaries
 */


function getBoundaries(popper, reference, padding, boundariesElement) {
  var fixedPosition = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false; // NOTE: 1 DOM access here

  var boundaries = {
    top: 0,
    left: 0
  };
  var offsetParent = fixedPosition ? getFixedPositionOffsetParent(popper) : findCommonOffsetParent(popper, getReferenceNode(reference)); // Handle viewport case

  if (boundariesElement === 'viewport') {
    boundaries = getViewportOffsetRectRelativeToArtbitraryNode(offsetParent, fixedPosition);
  } else {
    // Handle other cases based on DOM element used as boundaries
    var boundariesNode = void 0;

    if (boundariesElement === 'scrollParent') {
      boundariesNode = getScrollParent(getParentNode(reference));

      if (boundariesNode.nodeName === 'BODY') {
        boundariesNode = popper.ownerDocument.documentElement;
      }
    } else if (boundariesElement === 'window') {
      boundariesNode = popper.ownerDocument.documentElement;
    } else {
      boundariesNode = boundariesElement;
    }

    var offsets = getOffsetRectRelativeToArbitraryNode(boundariesNode, offsetParent, fixedPosition); // In case of HTML, we need a different computation

    if (boundariesNode.nodeName === 'HTML' && !isFixed(offsetParent)) {
      var _getWindowSizes = getWindowSizes(popper.ownerDocument),
          height = _getWindowSizes.height,
          width = _getWindowSizes.width;

      boundaries.top += offsets.top - offsets.marginTop;
      boundaries.bottom = height + offsets.top;
      boundaries.left += offsets.left - offsets.marginLeft;
      boundaries.right = width + offsets.left;
    } else {
      // for all the other DOM elements, this one is good
      boundaries = offsets;
    }
  } // Add paddings


  padding = padding || 0;
  var isPaddingNumber = typeof padding === 'number';
  boundaries.left += isPaddingNumber ? padding : padding.left || 0;
  boundaries.top += isPaddingNumber ? padding : padding.top || 0;
  boundaries.right -= isPaddingNumber ? padding : padding.right || 0;
  boundaries.bottom -= isPaddingNumber ? padding : padding.bottom || 0;
  return boundaries;
}

function getArea(_ref) {
  var width = _ref.width,
      height = _ref.height;
  return width * height;
}
/**
 * Utility used to transform the `auto` placement to the placement with more
 * available space.
 * @method
 * @memberof Popper.Utils
 * @argument {Object} data - The data object generated by update method
 * @argument {Object} options - Modifiers configuration and options
 * @returns {Object} The data object, properly modified
 */


function computeAutoPlacement(placement, refRect, popper, reference, boundariesElement) {
  var padding = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 0;

  if (placement.indexOf('auto') === -1) {
    return placement;
  }

  var boundaries = getBoundaries(popper, reference, padding, boundariesElement);
  var rects = {
    top: {
      width: boundaries.width,
      height: refRect.top - boundaries.top
    },
    right: {
      width: boundaries.right - refRect.right,
      height: boundaries.height
    },
    bottom: {
      width: boundaries.width,
      height: boundaries.bottom - refRect.bottom
    },
    left: {
      width: refRect.left - boundaries.left,
      height: boundaries.height
    }
  };
  var sortedAreas = Object.keys(rects).map(function (key) {
    return _extends({
      key: key
    }, rects[key], {
      area: getArea(rects[key])
    });
  }).sort(function (a, b) {
    return b.area - a.area;
  });
  var filteredAreas = sortedAreas.filter(function (_ref2) {
    var width = _ref2.width,
        height = _ref2.height;
    return width >= popper.clientWidth && height >= popper.clientHeight;
  });
  var computedPlacement = filteredAreas.length > 0 ? filteredAreas[0].key : sortedAreas[0].key;
  var variation = placement.split('-')[1];
  return computedPlacement + (variation ? '-' + variation : '');
}
/**
 * Get offsets to the reference element
 * @method
 * @memberof Popper.Utils
 * @param {Object} state
 * @param {Element} popper - the popper element
 * @param {Element} reference - the reference element (the popper will be relative to this)
 * @param {Element} fixedPosition - is in fixed position mode
 * @returns {Object} An object containing the offsets which will be applied to the popper
 */


function getReferenceOffsets(state, popper, reference) {
  var fixedPosition = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;
  var commonOffsetParent = fixedPosition ? getFixedPositionOffsetParent(popper) : findCommonOffsetParent(popper, getReferenceNode(reference));
  return getOffsetRectRelativeToArbitraryNode(reference, commonOffsetParent, fixedPosition);
}
/**
 * Get the outer sizes of the given element (offset size + margins)
 * @method
 * @memberof Popper.Utils
 * @argument {Element} element
 * @returns {Object} object containing width and height properties
 */


function getOuterSizes(element) {
  var window = element.ownerDocument.defaultView;
  var styles = window.getComputedStyle(element);
  var x = parseFloat(styles.marginTop || 0) + parseFloat(styles.marginBottom || 0);
  var y = parseFloat(styles.marginLeft || 0) + parseFloat(styles.marginRight || 0);
  var result = {
    width: element.offsetWidth + y,
    height: element.offsetHeight + x
  };
  return result;
}
/**
 * Get the opposite placement of the given one
 * @method
 * @memberof Popper.Utils
 * @argument {String} placement
 * @returns {String} flipped placement
 */


function getOppositePlacement(placement) {
  var hash = {
    left: 'right',
    right: 'left',
    bottom: 'top',
    top: 'bottom'
  };
  return placement.replace(/left|right|bottom|top/g, function (matched) {
    return hash[matched];
  });
}
/**
 * Get offsets to the popper
 * @method
 * @memberof Popper.Utils
 * @param {Object} position - CSS position the Popper will get applied
 * @param {HTMLElement} popper - the popper element
 * @param {Object} referenceOffsets - the reference offsets (the popper will be relative to this)
 * @param {String} placement - one of the valid placement options
 * @returns {Object} popperOffsets - An object containing the offsets which will be applied to the popper
 */


function getPopperOffsets(popper, referenceOffsets, placement) {
  placement = placement.split('-')[0]; // Get popper node sizes

  var popperRect = getOuterSizes(popper); // Add position, width and height to our offsets object

  var popperOffsets = {
    width: popperRect.width,
    height: popperRect.height
  }; // depending by the popper placement we have to compute its offsets slightly differently

  var isHoriz = ['right', 'left'].indexOf(placement) !== -1;
  var mainSide = isHoriz ? 'top' : 'left';
  var secondarySide = isHoriz ? 'left' : 'top';
  var measurement = isHoriz ? 'height' : 'width';
  var secondaryMeasurement = !isHoriz ? 'height' : 'width';
  popperOffsets[mainSide] = referenceOffsets[mainSide] + referenceOffsets[measurement] / 2 - popperRect[measurement] / 2;

  if (placement === secondarySide) {
    popperOffsets[secondarySide] = referenceOffsets[secondarySide] - popperRect[secondaryMeasurement];
  } else {
    popperOffsets[secondarySide] = referenceOffsets[getOppositePlacement(secondarySide)];
  }

  return popperOffsets;
}
/**
 * Mimics the `find` method of Array
 * @method
 * @memberof Popper.Utils
 * @argument {Array} arr
 * @argument prop
 * @argument value
 * @returns index or -1
 */


function find(arr, check) {
  // use native find if supported
  if (Array.prototype.find) {
    return arr.find(check);
  } // use `filter` to obtain the same behavior of `find`


  return arr.filter(check)[0];
}
/**
 * Return the index of the matching object
 * @method
 * @memberof Popper.Utils
 * @argument {Array} arr
 * @argument prop
 * @argument value
 * @returns index or -1
 */


function findIndex(arr, prop, value) {
  // use native findIndex if supported
  if (Array.prototype.findIndex) {
    return arr.findIndex(function (cur) {
      return cur[prop] === value;
    });
  } // use `find` + `indexOf` if `findIndex` isn't supported


  var match = find(arr, function (obj) {
    return obj[prop] === value;
  });
  return arr.indexOf(match);
}
/**
 * Loop trough the list of modifiers and run them in order,
 * each of them will then edit the data object.
 * @method
 * @memberof Popper.Utils
 * @param {dataObject} data
 * @param {Array} modifiers
 * @param {String} ends - Optional modifier name used as stopper
 * @returns {dataObject}
 */


function runModifiers(modifiers, data, ends) {
  var modifiersToRun = ends === undefined ? modifiers : modifiers.slice(0, findIndex(modifiers, 'name', ends));
  modifiersToRun.forEach(function (modifier) {
    if (modifier['function']) {
      // eslint-disable-line dot-notation
      console.warn('`modifier.function` is deprecated, use `modifier.fn`!');
    }

    var fn = modifier['function'] || modifier.fn; // eslint-disable-line dot-notation

    if (modifier.enabled && isFunction(fn)) {
      // Add properties to offsets to make them a complete clientRect object
      // we do this before each modifier to make sure the previous one doesn't
      // mess with these values
      data.offsets.popper = getClientRect(data.offsets.popper);
      data.offsets.reference = getClientRect(data.offsets.reference);
      data = fn(data, modifier);
    }
  });
  return data;
}
/**
 * Updates the position of the popper, computing the new offsets and applying
 * the new style.<br />
 * Prefer `scheduleUpdate` over `update` because of performance reasons.
 * @method
 * @memberof Popper
 */


function update() {
  // if popper is destroyed, don't perform any further update
  if (this.state.isDestroyed) {
    return;
  }

  var data = {
    instance: this,
    styles: {},
    arrowStyles: {},
    attributes: {},
    flipped: false,
    offsets: {}
  }; // compute reference element offsets

  data.offsets.reference = getReferenceOffsets(this.state, this.popper, this.reference, this.options.positionFixed); // compute auto placement, store placement inside the data object,
  // modifiers will be able to edit `placement` if needed
  // and refer to originalPlacement to know the original value

  data.placement = computeAutoPlacement(this.options.placement, data.offsets.reference, this.popper, this.reference, this.options.modifiers.flip.boundariesElement, this.options.modifiers.flip.padding); // store the computed placement inside `originalPlacement`

  data.originalPlacement = data.placement;
  data.positionFixed = this.options.positionFixed; // compute the popper offsets

  data.offsets.popper = getPopperOffsets(this.popper, data.offsets.reference, data.placement);
  data.offsets.popper.position = this.options.positionFixed ? 'fixed' : 'absolute'; // run the modifiers

  data = runModifiers(this.modifiers, data); // the first `update` will call `onCreate` callback
  // the other ones will call `onUpdate` callback

  if (!this.state.isCreated) {
    this.state.isCreated = true;
    this.options.onCreate(data);
  } else {
    this.options.onUpdate(data);
  }
}
/**
 * Helper used to know if the given modifier is enabled.
 * @method
 * @memberof Popper.Utils
 * @returns {Boolean}
 */


function isModifierEnabled(modifiers, modifierName) {
  return modifiers.some(function (_ref) {
    var name = _ref.name,
        enabled = _ref.enabled;
    return enabled && name === modifierName;
  });
}
/**
 * Get the prefixed supported property name
 * @method
 * @memberof Popper.Utils
 * @argument {String} property (camelCase)
 * @returns {String} prefixed property (camelCase or PascalCase, depending on the vendor prefix)
 */


function getSupportedPropertyName(property) {
  var prefixes = [false, 'ms', 'Webkit', 'Moz', 'O'];
  var upperProp = property.charAt(0).toUpperCase() + property.slice(1);

  for (var i = 0; i < prefixes.length; i++) {
    var prefix = prefixes[i];
    var toCheck = prefix ? '' + prefix + upperProp : property;

    if (typeof document.body.style[toCheck] !== 'undefined') {
      return toCheck;
    }
  }

  return null;
}
/**
 * Destroys the popper.
 * @method
 * @memberof Popper
 */


function destroy() {
  this.state.isDestroyed = true; // touch DOM only if `applyStyle` modifier is enabled

  if (isModifierEnabled(this.modifiers, 'applyStyle')) {
    this.popper.removeAttribute('x-placement');
    this.popper.style.position = '';
    this.popper.style.top = '';
    this.popper.style.left = '';
    this.popper.style.right = '';
    this.popper.style.bottom = '';
    this.popper.style.willChange = '';
    this.popper.style[getSupportedPropertyName('transform')] = '';
  }

  this.disableEventListeners(); // remove the popper if user explicitly asked for the deletion on destroy
  // do not use `remove` because IE11 doesn't support it

  if (this.options.removeOnDestroy) {
    this.popper.parentNode.removeChild(this.popper);
  }

  return this;
}
/**
 * Get the window associated with the element
 * @argument {Element} element
 * @returns {Window}
 */


function getWindow(element) {
  var ownerDocument = element.ownerDocument;
  return ownerDocument ? ownerDocument.defaultView : window;
}

function attachToScrollParents(scrollParent, event, callback, scrollParents) {
  var isBody = scrollParent.nodeName === 'BODY';
  var target = isBody ? scrollParent.ownerDocument.defaultView : scrollParent;
  target.addEventListener(event, callback, {
    passive: true
  });

  if (!isBody) {
    attachToScrollParents(getScrollParent(target.parentNode), event, callback, scrollParents);
  }

  scrollParents.push(target);
}
/**
 * Setup needed event listeners used to update the popper position
 * @method
 * @memberof Popper.Utils
 * @private
 */


function setupEventListeners(reference, options, state, updateBound) {
  // Resize event listener on window
  state.updateBound = updateBound;
  getWindow(reference).addEventListener('resize', state.updateBound, {
    passive: true
  }); // Scroll event listener on scroll parents

  var scrollElement = getScrollParent(reference);
  attachToScrollParents(scrollElement, 'scroll', state.updateBound, state.scrollParents);
  state.scrollElement = scrollElement;
  state.eventsEnabled = true;
  return state;
}
/**
 * It will add resize/scroll events and start recalculating
 * position of the popper element when they are triggered.
 * @method
 * @memberof Popper
 */


function enableEventListeners() {
  if (!this.state.eventsEnabled) {
    this.state = setupEventListeners(this.reference, this.options, this.state, this.scheduleUpdate);
  }
}
/**
 * Remove event listeners used to update the popper position
 * @method
 * @memberof Popper.Utils
 * @private
 */


function removeEventListeners(reference, state) {
  // Remove resize event listener on window
  getWindow(reference).removeEventListener('resize', state.updateBound); // Remove scroll event listener on scroll parents

  state.scrollParents.forEach(function (target) {
    target.removeEventListener('scroll', state.updateBound);
  }); // Reset state

  state.updateBound = null;
  state.scrollParents = [];
  state.scrollElement = null;
  state.eventsEnabled = false;
  return state;
}
/**
 * It will remove resize/scroll events and won't recalculate popper position
 * when they are triggered. It also won't trigger `onUpdate` callback anymore,
 * unless you call `update` method manually.
 * @method
 * @memberof Popper
 */


function disableEventListeners() {
  if (this.state.eventsEnabled) {
    cancelAnimationFrame(this.scheduleUpdate);
    this.state = removeEventListeners(this.reference, this.state);
  }
}
/**
 * Tells if a given input is a number
 * @method
 * @memberof Popper.Utils
 * @param {*} input to check
 * @return {Boolean}
 */


function isNumeric(n) {
  return n !== '' && !isNaN(parseFloat(n)) && isFinite(n);
}
/**
 * Set the style to the given popper
 * @method
 * @memberof Popper.Utils
 * @argument {Element} element - Element to apply the style to
 * @argument {Object} styles
 * Object with a list of properties and values which will be applied to the element
 */


function setStyles(element, styles) {
  Object.keys(styles).forEach(function (prop) {
    var unit = ''; // add unit if the value is numeric and is one of the following

    if (['width', 'height', 'top', 'right', 'bottom', 'left'].indexOf(prop) !== -1 && isNumeric(styles[prop])) {
      unit = 'px';
    }

    element.style[prop] = styles[prop] + unit;
  });
}
/**
 * Set the attributes to the given popper
 * @method
 * @memberof Popper.Utils
 * @argument {Element} element - Element to apply the attributes to
 * @argument {Object} styles
 * Object with a list of properties and values which will be applied to the element
 */


function setAttributes(element, attributes) {
  Object.keys(attributes).forEach(function (prop) {
    var value = attributes[prop];

    if (value !== false) {
      element.setAttribute(prop, attributes[prop]);
    } else {
      element.removeAttribute(prop);
    }
  });
}
/**
 * @function
 * @memberof Modifiers
 * @argument {Object} data - The data object generated by `update` method
 * @argument {Object} data.styles - List of style properties - values to apply to popper element
 * @argument {Object} data.attributes - List of attribute properties - values to apply to popper element
 * @argument {Object} options - Modifiers configuration and options
 * @returns {Object} The same data object
 */


function applyStyle(data) {
  // any property present in `data.styles` will be applied to the popper,
  // in this way we can make the 3rd party modifiers add custom styles to it
  // Be aware, modifiers could override the properties defined in the previous
  // lines of this modifier!
  setStyles(data.instance.popper, data.styles); // any property present in `data.attributes` will be applied to the popper,
  // they will be set as HTML attributes of the element

  setAttributes(data.instance.popper, data.attributes); // if arrowElement is defined and arrowStyles has some properties

  if (data.arrowElement && Object.keys(data.arrowStyles).length) {
    setStyles(data.arrowElement, data.arrowStyles);
  }

  return data;
}
/**
 * Set the x-placement attribute before everything else because it could be used
 * to add margins to the popper margins needs to be calculated to get the
 * correct popper offsets.
 * @method
 * @memberof Popper.modifiers
 * @param {HTMLElement} reference - The reference element used to position the popper
 * @param {HTMLElement} popper - The HTML element used as popper
 * @param {Object} options - Popper.js options
 */


function applyStyleOnLoad(reference, popper, options, modifierOptions, state) {
  // compute reference element offsets
  var referenceOffsets = getReferenceOffsets(state, popper, reference, options.positionFixed); // compute auto placement, store placement inside the data object,
  // modifiers will be able to edit `placement` if needed
  // and refer to originalPlacement to know the original value

  var placement = computeAutoPlacement(options.placement, referenceOffsets, popper, reference, options.modifiers.flip.boundariesElement, options.modifiers.flip.padding);
  popper.setAttribute('x-placement', placement); // Apply `position` to popper before anything else because
  // without the position applied we can't guarantee correct computations

  setStyles(popper, {
    position: options.positionFixed ? 'fixed' : 'absolute'
  });
  return options;
}
/**
 * @function
 * @memberof Popper.Utils
 * @argument {Object} data - The data object generated by `update` method
 * @argument {Boolean} shouldRound - If the offsets should be rounded at all
 * @returns {Object} The popper's position offsets rounded
 *
 * The tale of pixel-perfect positioning. It's still not 100% perfect, but as
 * good as it can be within reason.
 * Discussion here: https://github.com/FezVrasta/popper.js/pull/715
 *
 * Low DPI screens cause a popper to be blurry if not using full pixels (Safari
 * as well on High DPI screens).
 *
 * Firefox prefers no rounding for positioning and does not have blurriness on
 * high DPI screens.
 *
 * Only horizontal placement and left/right values need to be considered.
 */


function getRoundedOffsets(data, shouldRound) {
  var _data$offsets = data.offsets,
      popper = _data$offsets.popper,
      reference = _data$offsets.reference;
  var round = Math.round,
      floor = Math.floor;

  var noRound = function noRound(v) {
    return v;
  };

  var referenceWidth = round(reference.width);
  var popperWidth = round(popper.width);
  var isVertical = ['left', 'right'].indexOf(data.placement) !== -1;
  var isVariation = data.placement.indexOf('-') !== -1;
  var sameWidthParity = referenceWidth % 2 === popperWidth % 2;
  var bothOddWidth = referenceWidth % 2 === 1 && popperWidth % 2 === 1;
  var horizontalToInteger = !shouldRound ? noRound : isVertical || isVariation || sameWidthParity ? round : floor;
  var verticalToInteger = !shouldRound ? noRound : round;
  return {
    left: horizontalToInteger(bothOddWidth && !isVariation && shouldRound ? popper.left - 1 : popper.left),
    top: verticalToInteger(popper.top),
    bottom: verticalToInteger(popper.bottom),
    right: horizontalToInteger(popper.right)
  };
}

var isFirefox = isBrowser && /Firefox/i.test(navigator.userAgent);
/**
 * @function
 * @memberof Modifiers
 * @argument {Object} data - The data object generated by `update` method
 * @argument {Object} options - Modifiers configuration and options
 * @returns {Object} The data object, properly modified
 */

function computeStyle(data, options) {
  var x = options.x,
      y = options.y;
  var popper = data.offsets.popper; // Remove this legacy support in Popper.js v2

  var legacyGpuAccelerationOption = find(data.instance.modifiers, function (modifier) {
    return modifier.name === 'applyStyle';
  }).gpuAcceleration;

  if (legacyGpuAccelerationOption !== undefined) {
    console.warn('WARNING: `gpuAcceleration` option moved to `computeStyle` modifier and will not be supported in future versions of Popper.js!');
  }

  var gpuAcceleration = legacyGpuAccelerationOption !== undefined ? legacyGpuAccelerationOption : options.gpuAcceleration;
  var offsetParent = getOffsetParent(data.instance.popper);
  var offsetParentRect = getBoundingClientRect(offsetParent); // Styles

  var styles = {
    position: popper.position
  };
  var offsets = getRoundedOffsets(data, window.devicePixelRatio < 2 || !isFirefox);
  var sideA = x === 'bottom' ? 'top' : 'bottom';
  var sideB = y === 'right' ? 'left' : 'right'; // if gpuAcceleration is set to `true` and transform is supported,
  //  we use `translate3d` to apply the position to the popper we
  // automatically use the supported prefixed version if needed

  var prefixedProperty = getSupportedPropertyName('transform'); // now, let's make a step back and look at this code closely (wtf?)
  // If the content of the popper grows once it's been positioned, it
  // may happen that the popper gets misplaced because of the new content
  // overflowing its reference element
  // To avoid this problem, we provide two options (x and y), which allow
  // the consumer to define the offset origin.
  // If we position a popper on top of a reference element, we can set
  // `x` to `top` to make the popper grow towards its top instead of
  // its bottom.

  var left = void 0,
      top = void 0;

  if (sideA === 'bottom') {
    // when offsetParent is <html> the positioning is relative to the bottom of the screen (excluding the scrollbar)
    // and not the bottom of the html element
    if (offsetParent.nodeName === 'HTML') {
      top = -offsetParent.clientHeight + offsets.bottom;
    } else {
      top = -offsetParentRect.height + offsets.bottom;
    }
  } else {
    top = offsets.top;
  }

  if (sideB === 'right') {
    if (offsetParent.nodeName === 'HTML') {
      left = -offsetParent.clientWidth + offsets.right;
    } else {
      left = -offsetParentRect.width + offsets.right;
    }
  } else {
    left = offsets.left;
  }

  if (gpuAcceleration && prefixedProperty) {
    styles[prefixedProperty] = 'translate3d(' + left + 'px, ' + top + 'px, 0)';
    styles[sideA] = 0;
    styles[sideB] = 0;
    styles.willChange = 'transform';
  } else {
    // othwerise, we use the standard `top`, `left`, `bottom` and `right` properties
    var invertTop = sideA === 'bottom' ? -1 : 1;
    var invertLeft = sideB === 'right' ? -1 : 1;
    styles[sideA] = top * invertTop;
    styles[sideB] = left * invertLeft;
    styles.willChange = sideA + ', ' + sideB;
  } // Attributes


  var attributes = {
    'x-placement': data.placement
  }; // Update `data` attributes, styles and arrowStyles

  data.attributes = _extends({}, attributes, data.attributes);
  data.styles = _extends({}, styles, data.styles);
  data.arrowStyles = _extends({}, data.offsets.arrow, data.arrowStyles);
  return data;
}
/**
 * Helper used to know if the given modifier depends from another one.<br />
 * It checks if the needed modifier is listed and enabled.
 * @method
 * @memberof Popper.Utils
 * @param {Array} modifiers - list of modifiers
 * @param {String} requestingName - name of requesting modifier
 * @param {String} requestedName - name of requested modifier
 * @returns {Boolean}
 */


function isModifierRequired(modifiers, requestingName, requestedName) {
  var requesting = find(modifiers, function (_ref) {
    var name = _ref.name;
    return name === requestingName;
  });
  var isRequired = !!requesting && modifiers.some(function (modifier) {
    return modifier.name === requestedName && modifier.enabled && modifier.order < requesting.order;
  });

  if (!isRequired) {
    var _requesting = '`' + requestingName + '`';

    var requested = '`' + requestedName + '`';
    console.warn(requested + ' modifier is required by ' + _requesting + ' modifier in order to work, be sure to include it before ' + _requesting + '!');
  }

  return isRequired;
}
/**
 * @function
 * @memberof Modifiers
 * @argument {Object} data - The data object generated by update method
 * @argument {Object} options - Modifiers configuration and options
 * @returns {Object} The data object, properly modified
 */


function arrow(data, options) {
  var _data$offsets$arrow; // arrow depends on keepTogether in order to work


  if (!isModifierRequired(data.instance.modifiers, 'arrow', 'keepTogether')) {
    return data;
  }

  var arrowElement = options.element; // if arrowElement is a string, suppose it's a CSS selector

  if (typeof arrowElement === 'string') {
    arrowElement = data.instance.popper.querySelector(arrowElement); // if arrowElement is not found, don't run the modifier

    if (!arrowElement) {
      return data;
    }
  } else {
    // if the arrowElement isn't a query selector we must check that the
    // provided DOM node is child of its popper node
    if (!data.instance.popper.contains(arrowElement)) {
      console.warn('WARNING: `arrow.element` must be child of its popper element!');
      return data;
    }
  }

  var placement = data.placement.split('-')[0];
  var _data$offsets = data.offsets,
      popper = _data$offsets.popper,
      reference = _data$offsets.reference;
  var isVertical = ['left', 'right'].indexOf(placement) !== -1;
  var len = isVertical ? 'height' : 'width';
  var sideCapitalized = isVertical ? 'Top' : 'Left';
  var side = sideCapitalized.toLowerCase();
  var altSide = isVertical ? 'left' : 'top';
  var opSide = isVertical ? 'bottom' : 'right';
  var arrowElementSize = getOuterSizes(arrowElement)[len]; //
  // extends keepTogether behavior making sure the popper and its
  // reference have enough pixels in conjunction
  //
  // top/left side

  if (reference[opSide] - arrowElementSize < popper[side]) {
    data.offsets.popper[side] -= popper[side] - (reference[opSide] - arrowElementSize);
  } // bottom/right side


  if (reference[side] + arrowElementSize > popper[opSide]) {
    data.offsets.popper[side] += reference[side] + arrowElementSize - popper[opSide];
  }

  data.offsets.popper = getClientRect(data.offsets.popper); // compute center of the popper

  var center = reference[side] + reference[len] / 2 - arrowElementSize / 2; // Compute the sideValue using the updated popper offsets
  // take popper margin in account because we don't have this info available

  var css = getStyleComputedProperty(data.instance.popper);
  var popperMarginSide = parseFloat(css['margin' + sideCapitalized]);
  var popperBorderSide = parseFloat(css['border' + sideCapitalized + 'Width']);
  var sideValue = center - data.offsets.popper[side] - popperMarginSide - popperBorderSide; // prevent arrowElement from being placed not contiguously to its popper

  sideValue = Math.max(Math.min(popper[len] - arrowElementSize, sideValue), 0);
  data.arrowElement = arrowElement;
  data.offsets.arrow = (_data$offsets$arrow = {}, defineProperty(_data$offsets$arrow, side, Math.round(sideValue)), defineProperty(_data$offsets$arrow, altSide, ''), _data$offsets$arrow);
  return data;
}
/**
 * Get the opposite placement variation of the given one
 * @method
 * @memberof Popper.Utils
 * @argument {String} placement variation
 * @returns {String} flipped placement variation
 */


function getOppositeVariation(variation) {
  if (variation === 'end') {
    return 'start';
  } else if (variation === 'start') {
    return 'end';
  }

  return variation;
}
/**
 * List of accepted placements to use as values of the `placement` option.<br />
 * Valid placements are:
 * - `auto`
 * - `top`
 * - `right`
 * - `bottom`
 * - `left`
 *
 * Each placement can have a variation from this list:
 * - `-start`
 * - `-end`
 *
 * Variations are interpreted easily if you think of them as the left to right
 * written languages. Horizontally (`top` and `bottom`), `start` is left and `end`
 * is right.<br />
 * Vertically (`left` and `right`), `start` is top and `end` is bottom.
 *
 * Some valid examples are:
 * - `top-end` (on top of reference, right aligned)
 * - `right-start` (on right of reference, top aligned)
 * - `bottom` (on bottom, centered)
 * - `auto-end` (on the side with more space available, alignment depends by placement)
 *
 * @static
 * @type {Array}
 * @enum {String}
 * @readonly
 * @method placements
 * @memberof Popper
 */


var placements = ['auto-start', 'auto', 'auto-end', 'top-start', 'top', 'top-end', 'right-start', 'right', 'right-end', 'bottom-end', 'bottom', 'bottom-start', 'left-end', 'left', 'left-start']; // Get rid of `auto` `auto-start` and `auto-end`

var validPlacements = placements.slice(3);
/**
 * Given an initial placement, returns all the subsequent placements
 * clockwise (or counter-clockwise).
 *
 * @method
 * @memberof Popper.Utils
 * @argument {String} placement - A valid placement (it accepts variations)
 * @argument {Boolean} counter - Set to true to walk the placements counterclockwise
 * @returns {Array} placements including their variations
 */

function clockwise(placement) {
  var counter = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
  var index = validPlacements.indexOf(placement);
  var arr = validPlacements.slice(index + 1).concat(validPlacements.slice(0, index));
  return counter ? arr.reverse() : arr;
}

var BEHAVIORS = {
  FLIP: 'flip',
  CLOCKWISE: 'clockwise',
  COUNTERCLOCKWISE: 'counterclockwise'
};
/**
 * @function
 * @memberof Modifiers
 * @argument {Object} data - The data object generated by update method
 * @argument {Object} options - Modifiers configuration and options
 * @returns {Object} The data object, properly modified
 */

function flip(data, options) {
  // if `inner` modifier is enabled, we can't use the `flip` modifier
  if (isModifierEnabled(data.instance.modifiers, 'inner')) {
    return data;
  }

  if (data.flipped && data.placement === data.originalPlacement) {
    // seems like flip is trying to loop, probably there's not enough space on any of the flippable sides
    return data;
  }

  var boundaries = getBoundaries(data.instance.popper, data.instance.reference, options.padding, options.boundariesElement, data.positionFixed);
  var placement = data.placement.split('-')[0];
  var placementOpposite = getOppositePlacement(placement);
  var variation = data.placement.split('-')[1] || '';
  var flipOrder = [];

  switch (options.behavior) {
    case BEHAVIORS.FLIP:
      flipOrder = [placement, placementOpposite];
      break;

    case BEHAVIORS.CLOCKWISE:
      flipOrder = clockwise(placement);
      break;

    case BEHAVIORS.COUNTERCLOCKWISE:
      flipOrder = clockwise(placement, true);
      break;

    default:
      flipOrder = options.behavior;
  }

  flipOrder.forEach(function (step, index) {
    if (placement !== step || flipOrder.length === index + 1) {
      return data;
    }

    placement = data.placement.split('-')[0];
    placementOpposite = getOppositePlacement(placement);
    var popperOffsets = data.offsets.popper;
    var refOffsets = data.offsets.reference; // using floor because the reference offsets may contain decimals we are not going to consider here

    var floor = Math.floor;
    var overlapsRef = placement === 'left' && floor(popperOffsets.right) > floor(refOffsets.left) || placement === 'right' && floor(popperOffsets.left) < floor(refOffsets.right) || placement === 'top' && floor(popperOffsets.bottom) > floor(refOffsets.top) || placement === 'bottom' && floor(popperOffsets.top) < floor(refOffsets.bottom);
    var overflowsLeft = floor(popperOffsets.left) < floor(boundaries.left);
    var overflowsRight = floor(popperOffsets.right) > floor(boundaries.right);
    var overflowsTop = floor(popperOffsets.top) < floor(boundaries.top);
    var overflowsBottom = floor(popperOffsets.bottom) > floor(boundaries.bottom);
    var overflowsBoundaries = placement === 'left' && overflowsLeft || placement === 'right' && overflowsRight || placement === 'top' && overflowsTop || placement === 'bottom' && overflowsBottom; // flip the variation if required

    var isVertical = ['top', 'bottom'].indexOf(placement) !== -1; // flips variation if reference element overflows boundaries

    var flippedVariationByRef = !!options.flipVariations && (isVertical && variation === 'start' && overflowsLeft || isVertical && variation === 'end' && overflowsRight || !isVertical && variation === 'start' && overflowsTop || !isVertical && variation === 'end' && overflowsBottom); // flips variation if popper content overflows boundaries

    var flippedVariationByContent = !!options.flipVariationsByContent && (isVertical && variation === 'start' && overflowsRight || isVertical && variation === 'end' && overflowsLeft || !isVertical && variation === 'start' && overflowsBottom || !isVertical && variation === 'end' && overflowsTop);
    var flippedVariation = flippedVariationByRef || flippedVariationByContent;

    if (overlapsRef || overflowsBoundaries || flippedVariation) {
      // this boolean to detect any flip loop
      data.flipped = true;

      if (overlapsRef || overflowsBoundaries) {
        placement = flipOrder[index + 1];
      }

      if (flippedVariation) {
        variation = getOppositeVariation(variation);
      }

      data.placement = placement + (variation ? '-' + variation : ''); // this object contains `position`, we want to preserve it along with
      // any additional property we may add in the future

      data.offsets.popper = _extends({}, data.offsets.popper, getPopperOffsets(data.instance.popper, data.offsets.reference, data.placement));
      data = runModifiers(data.instance.modifiers, data, 'flip');
    }
  });
  return data;
}
/**
 * @function
 * @memberof Modifiers
 * @argument {Object} data - The data object generated by update method
 * @argument {Object} options - Modifiers configuration and options
 * @returns {Object} The data object, properly modified
 */


function keepTogether(data) {
  var _data$offsets = data.offsets,
      popper = _data$offsets.popper,
      reference = _data$offsets.reference;
  var placement = data.placement.split('-')[0];
  var floor = Math.floor;
  var isVertical = ['top', 'bottom'].indexOf(placement) !== -1;
  var side = isVertical ? 'right' : 'bottom';
  var opSide = isVertical ? 'left' : 'top';
  var measurement = isVertical ? 'width' : 'height';

  if (popper[side] < floor(reference[opSide])) {
    data.offsets.popper[opSide] = floor(reference[opSide]) - popper[measurement];
  }

  if (popper[opSide] > floor(reference[side])) {
    data.offsets.popper[opSide] = floor(reference[side]);
  }

  return data;
}
/**
 * Converts a string containing value + unit into a px value number
 * @function
 * @memberof {modifiers~offset}
 * @private
 * @argument {String} str - Value + unit string
 * @argument {String} measurement - `height` or `width`
 * @argument {Object} popperOffsets
 * @argument {Object} referenceOffsets
 * @returns {Number|String}
 * Value in pixels, or original string if no values were extracted
 */


function toValue(str, measurement, popperOffsets, referenceOffsets) {
  // separate value from unit
  var split = str.match(/((?:\-|\+)?\d*\.?\d*)(.*)/);
  var value = +split[1];
  var unit = split[2]; // If it's not a number it's an operator, I guess

  if (!value) {
    return str;
  }

  if (unit.indexOf('%') === 0) {
    var element = void 0;

    switch (unit) {
      case '%p':
        element = popperOffsets;
        break;

      case '%':
      case '%r':
      default:
        element = referenceOffsets;
    }

    var rect = getClientRect(element);
    return rect[measurement] / 100 * value;
  } else if (unit === 'vh' || unit === 'vw') {
    // if is a vh or vw, we calculate the size based on the viewport
    var size = void 0;

    if (unit === 'vh') {
      size = Math.max(document.documentElement.clientHeight, window.innerHeight || 0);
    } else {
      size = Math.max(document.documentElement.clientWidth, window.innerWidth || 0);
    }

    return size / 100 * value;
  } else {
    // if is an explicit pixel unit, we get rid of the unit and keep the value
    // if is an implicit unit, it's px, and we return just the value
    return value;
  }
}
/**
 * Parse an `offset` string to extrapolate `x` and `y` numeric offsets.
 * @function
 * @memberof {modifiers~offset}
 * @private
 * @argument {String} offset
 * @argument {Object} popperOffsets
 * @argument {Object} referenceOffsets
 * @argument {String} basePlacement
 * @returns {Array} a two cells array with x and y offsets in numbers
 */


function parseOffset(offset, popperOffsets, referenceOffsets, basePlacement) {
  var offsets = [0, 0]; // Use height if placement is left or right and index is 0 otherwise use width
  // in this way the first offset will use an axis and the second one
  // will use the other one

  var useHeight = ['right', 'left'].indexOf(basePlacement) !== -1; // Split the offset string to obtain a list of values and operands
  // The regex addresses values with the plus or minus sign in front (+10, -20, etc)

  var fragments = offset.split(/(\+|\-)/).map(function (frag) {
    return frag.trim();
  }); // Detect if the offset string contains a pair of values or a single one
  // they could be separated by comma or space

  var divider = fragments.indexOf(find(fragments, function (frag) {
    return frag.search(/,|\s/) !== -1;
  }));

  if (fragments[divider] && fragments[divider].indexOf(',') === -1) {
    console.warn('Offsets separated by white space(s) are deprecated, use a comma (,) instead.');
  } // If divider is found, we divide the list of values and operands to divide
  // them by ofset X and Y.


  var splitRegex = /\s*,\s*|\s+/;
  var ops = divider !== -1 ? [fragments.slice(0, divider).concat([fragments[divider].split(splitRegex)[0]]), [fragments[divider].split(splitRegex)[1]].concat(fragments.slice(divider + 1))] : [fragments]; // Convert the values with units to absolute pixels to allow our computations

  ops = ops.map(function (op, index) {
    // Most of the units rely on the orientation of the popper
    var measurement = (index === 1 ? !useHeight : useHeight) ? 'height' : 'width';
    var mergeWithPrevious = false;
    return op // This aggregates any `+` or `-` sign that aren't considered operators
    // e.g.: 10 + +5 => [10, +, +5]
    .reduce(function (a, b) {
      if (a[a.length - 1] === '' && ['+', '-'].indexOf(b) !== -1) {
        a[a.length - 1] = b;
        mergeWithPrevious = true;
        return a;
      } else if (mergeWithPrevious) {
        a[a.length - 1] += b;
        mergeWithPrevious = false;
        return a;
      } else {
        return a.concat(b);
      }
    }, []) // Here we convert the string values into number values (in px)
    .map(function (str) {
      return toValue(str, measurement, popperOffsets, referenceOffsets);
    });
  }); // Loop trough the offsets arrays and execute the operations

  ops.forEach(function (op, index) {
    op.forEach(function (frag, index2) {
      if (isNumeric(frag)) {
        offsets[index] += frag * (op[index2 - 1] === '-' ? -1 : 1);
      }
    });
  });
  return offsets;
}
/**
 * @function
 * @memberof Modifiers
 * @argument {Object} data - The data object generated by update method
 * @argument {Object} options - Modifiers configuration and options
 * @argument {Number|String} options.offset=0
 * The offset value as described in the modifier description
 * @returns {Object} The data object, properly modified
 */


function offset(data, _ref) {
  var offset = _ref.offset;
  var placement = data.placement,
      _data$offsets = data.offsets,
      popper = _data$offsets.popper,
      reference = _data$offsets.reference;
  var basePlacement = placement.split('-')[0];
  var offsets = void 0;

  if (isNumeric(+offset)) {
    offsets = [+offset, 0];
  } else {
    offsets = parseOffset(offset, popper, reference, basePlacement);
  }

  if (basePlacement === 'left') {
    popper.top += offsets[0];
    popper.left -= offsets[1];
  } else if (basePlacement === 'right') {
    popper.top += offsets[0];
    popper.left += offsets[1];
  } else if (basePlacement === 'top') {
    popper.left += offsets[0];
    popper.top -= offsets[1];
  } else if (basePlacement === 'bottom') {
    popper.left += offsets[0];
    popper.top += offsets[1];
  }

  data.popper = popper;
  return data;
}
/**
 * @function
 * @memberof Modifiers
 * @argument {Object} data - The data object generated by `update` method
 * @argument {Object} options - Modifiers configuration and options
 * @returns {Object} The data object, properly modified
 */


function preventOverflow(data, options) {
  var boundariesElement = options.boundariesElement || getOffsetParent(data.instance.popper); // If offsetParent is the reference element, we really want to
  // go one step up and use the next offsetParent as reference to
  // avoid to make this modifier completely useless and look like broken

  if (data.instance.reference === boundariesElement) {
    boundariesElement = getOffsetParent(boundariesElement);
  } // NOTE: DOM access here
  // resets the popper's position so that the document size can be calculated excluding
  // the size of the popper element itself


  var transformProp = getSupportedPropertyName('transform');
  var popperStyles = data.instance.popper.style; // assignment to help minification

  var top = popperStyles.top,
      left = popperStyles.left,
      transform = popperStyles[transformProp];
  popperStyles.top = '';
  popperStyles.left = '';
  popperStyles[transformProp] = '';
  var boundaries = getBoundaries(data.instance.popper, data.instance.reference, options.padding, boundariesElement, data.positionFixed); // NOTE: DOM access here
  // restores the original style properties after the offsets have been computed

  popperStyles.top = top;
  popperStyles.left = left;
  popperStyles[transformProp] = transform;
  options.boundaries = boundaries;
  var order = options.priority;
  var popper = data.offsets.popper;
  var check = {
    primary: function primary(placement) {
      var value = popper[placement];

      if (popper[placement] < boundaries[placement] && !options.escapeWithReference) {
        value = Math.max(popper[placement], boundaries[placement]);
      }

      return defineProperty({}, placement, value);
    },
    secondary: function secondary(placement) {
      var mainSide = placement === 'right' ? 'left' : 'top';
      var value = popper[mainSide];

      if (popper[placement] > boundaries[placement] && !options.escapeWithReference) {
        value = Math.min(popper[mainSide], boundaries[placement] - (placement === 'right' ? popper.width : popper.height));
      }

      return defineProperty({}, mainSide, value);
    }
  };
  order.forEach(function (placement) {
    var side = ['left', 'top'].indexOf(placement) !== -1 ? 'primary' : 'secondary';
    popper = _extends({}, popper, check[side](placement));
  });
  data.offsets.popper = popper;
  return data;
}
/**
 * @function
 * @memberof Modifiers
 * @argument {Object} data - The data object generated by `update` method
 * @argument {Object} options - Modifiers configuration and options
 * @returns {Object} The data object, properly modified
 */


function shift(data) {
  var placement = data.placement;
  var basePlacement = placement.split('-')[0];
  var shiftvariation = placement.split('-')[1]; // if shift shiftvariation is specified, run the modifier

  if (shiftvariation) {
    var _data$offsets = data.offsets,
        reference = _data$offsets.reference,
        popper = _data$offsets.popper;
    var isVertical = ['bottom', 'top'].indexOf(basePlacement) !== -1;
    var side = isVertical ? 'left' : 'top';
    var measurement = isVertical ? 'width' : 'height';
    var shiftOffsets = {
      start: defineProperty({}, side, reference[side]),
      end: defineProperty({}, side, reference[side] + reference[measurement] - popper[measurement])
    };
    data.offsets.popper = _extends({}, popper, shiftOffsets[shiftvariation]);
  }

  return data;
}
/**
 * @function
 * @memberof Modifiers
 * @argument {Object} data - The data object generated by update method
 * @argument {Object} options - Modifiers configuration and options
 * @returns {Object} The data object, properly modified
 */


function hide(data) {
  if (!isModifierRequired(data.instance.modifiers, 'hide', 'preventOverflow')) {
    return data;
  }

  var refRect = data.offsets.reference;
  var bound = find(data.instance.modifiers, function (modifier) {
    return modifier.name === 'preventOverflow';
  }).boundaries;

  if (refRect.bottom < bound.top || refRect.left > bound.right || refRect.top > bound.bottom || refRect.right < bound.left) {
    // Avoid unnecessary DOM access if visibility hasn't changed
    if (data.hide === true) {
      return data;
    }

    data.hide = true;
    data.attributes['x-out-of-boundaries'] = '';
  } else {
    // Avoid unnecessary DOM access if visibility hasn't changed
    if (data.hide === false) {
      return data;
    }

    data.hide = false;
    data.attributes['x-out-of-boundaries'] = false;
  }

  return data;
}
/**
 * @function
 * @memberof Modifiers
 * @argument {Object} data - The data object generated by `update` method
 * @argument {Object} options - Modifiers configuration and options
 * @returns {Object} The data object, properly modified
 */


function inner(data) {
  var placement = data.placement;
  var basePlacement = placement.split('-')[0];
  var _data$offsets = data.offsets,
      popper = _data$offsets.popper,
      reference = _data$offsets.reference;
  var isHoriz = ['left', 'right'].indexOf(basePlacement) !== -1;
  var subtractLength = ['top', 'left'].indexOf(basePlacement) === -1;
  popper[isHoriz ? 'left' : 'top'] = reference[basePlacement] - (subtractLength ? popper[isHoriz ? 'width' : 'height'] : 0);
  data.placement = getOppositePlacement(placement);
  data.offsets.popper = getClientRect(popper);
  return data;
}
/**
 * Modifier function, each modifier can have a function of this type assigned
 * to its `fn` property.<br />
 * These functions will be called on each update, this means that you must
 * make sure they are performant enough to avoid performance bottlenecks.
 *
 * @function ModifierFn
 * @argument {dataObject} data - The data object generated by `update` method
 * @argument {Object} options - Modifiers configuration and options
 * @returns {dataObject} The data object, properly modified
 */

/**
 * Modifiers are plugins used to alter the behavior of your poppers.<br />
 * Popper.js uses a set of 9 modifiers to provide all the basic functionalities
 * needed by the library.
 *
 * Usually you don't want to override the `order`, `fn` and `onLoad` props.
 * All the other properties are configurations that could be tweaked.
 * @namespace modifiers
 */


var modifiers = {
  /**
   * Modifier used to shift the popper on the start or end of its reference
   * element.<br />
   * It will read the variation of the `placement` property.<br />
   * It can be one either `-end` or `-start`.
   * @memberof modifiers
   * @inner
   */
  shift: {
    /** @prop {number} order=100 - Index used to define the order of execution */
    order: 100,

    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */
    enabled: true,

    /** @prop {ModifierFn} */
    fn: shift
  },

  /**
   * The `offset` modifier can shift your popper on both its axis.
   *
   * It accepts the following units:
   * - `px` or unit-less, interpreted as pixels
   * - `%` or `%r`, percentage relative to the length of the reference element
   * - `%p`, percentage relative to the length of the popper element
   * - `vw`, CSS viewport width unit
   * - `vh`, CSS viewport height unit
   *
   * For length is intended the main axis relative to the placement of the popper.<br />
   * This means that if the placement is `top` or `bottom`, the length will be the
   * `width`. In case of `left` or `right`, it will be the `height`.
   *
   * You can provide a single value (as `Number` or `String`), or a pair of values
   * as `String` divided by a comma or one (or more) white spaces.<br />
   * The latter is a deprecated method because it leads to confusion and will be
   * removed in v2.<br />
   * Additionally, it accepts additions and subtractions between different units.
   * Note that multiplications and divisions aren't supported.
   *
   * Valid examples are:
   * ```
   * 10
   * '10%'
   * '10, 10'
   * '10%, 10'
   * '10 + 10%'
   * '10 - 5vh + 3%'
   * '-10px + 5vh, 5px - 6%'
   * ```
   * > **NB**: If you desire to apply offsets to your poppers in a way that may make them overlap
   * > with their reference element, unfortunately, you will have to disable the `flip` modifier.
   * > You can read more on this at this [issue](https://github.com/FezVrasta/popper.js/issues/373).
   *
   * @memberof modifiers
   * @inner
   */
  offset: {
    /** @prop {number} order=200 - Index used to define the order of execution */
    order: 200,

    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */
    enabled: true,

    /** @prop {ModifierFn} */
    fn: offset,

    /** @prop {Number|String} offset=0
     * The offset value as described in the modifier description
     */
    offset: 0
  },

  /**
   * Modifier used to prevent the popper from being positioned outside the boundary.
   *
   * A scenario exists where the reference itself is not within the boundaries.<br />
   * We can say it has "escaped the boundaries" — or just "escaped".<br />
   * In this case we need to decide whether the popper should either:
   *
   * - detach from the reference and remain "trapped" in the boundaries, or
   * - if it should ignore the boundary and "escape with its reference"
   *
   * When `escapeWithReference` is set to`true` and reference is completely
   * outside its boundaries, the popper will overflow (or completely leave)
   * the boundaries in order to remain attached to the edge of the reference.
   *
   * @memberof modifiers
   * @inner
   */
  preventOverflow: {
    /** @prop {number} order=300 - Index used to define the order of execution */
    order: 300,

    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */
    enabled: true,

    /** @prop {ModifierFn} */
    fn: preventOverflow,

    /**
     * @prop {Array} [priority=['left','right','top','bottom']]
     * Popper will try to prevent overflow following these priorities by default,
     * then, it could overflow on the left and on top of the `boundariesElement`
     */
    priority: ['left', 'right', 'top', 'bottom'],

    /**
     * @prop {number} padding=5
     * Amount of pixel used to define a minimum distance between the boundaries
     * and the popper. This makes sure the popper always has a little padding
     * between the edges of its container
     */
    padding: 5,

    /**
     * @prop {String|HTMLElement} boundariesElement='scrollParent'
     * Boundaries used by the modifier. Can be `scrollParent`, `window`,
     * `viewport` or any DOM element.
     */
    boundariesElement: 'scrollParent'
  },

  /**
   * Modifier used to make sure the reference and its popper stay near each other
   * without leaving any gap between the two. Especially useful when the arrow is
   * enabled and you want to ensure that it points to its reference element.
   * It cares only about the first axis. You can still have poppers with margin
   * between the popper and its reference element.
   * @memberof modifiers
   * @inner
   */
  keepTogether: {
    /** @prop {number} order=400 - Index used to define the order of execution */
    order: 400,

    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */
    enabled: true,

    /** @prop {ModifierFn} */
    fn: keepTogether
  },

  /**
   * This modifier is used to move the `arrowElement` of the popper to make
   * sure it is positioned between the reference element and its popper element.
   * It will read the outer size of the `arrowElement` node to detect how many
   * pixels of conjunction are needed.
   *
   * It has no effect if no `arrowElement` is provided.
   * @memberof modifiers
   * @inner
   */
  arrow: {
    /** @prop {number} order=500 - Index used to define the order of execution */
    order: 500,

    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */
    enabled: true,

    /** @prop {ModifierFn} */
    fn: arrow,

    /** @prop {String|HTMLElement} element='[x-arrow]' - Selector or node used as arrow */
    element: '[x-arrow]'
  },

  /**
   * Modifier used to flip the popper's placement when it starts to overlap its
   * reference element.
   *
   * Requires the `preventOverflow` modifier before it in order to work.
   *
   * **NOTE:** this modifier will interrupt the current update cycle and will
   * restart it if it detects the need to flip the placement.
   * @memberof modifiers
   * @inner
   */
  flip: {
    /** @prop {number} order=600 - Index used to define the order of execution */
    order: 600,

    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */
    enabled: true,

    /** @prop {ModifierFn} */
    fn: flip,

    /**
     * @prop {String|Array} behavior='flip'
     * The behavior used to change the popper's placement. It can be one of
     * `flip`, `clockwise`, `counterclockwise` or an array with a list of valid
     * placements (with optional variations)
     */
    behavior: 'flip',

    /**
     * @prop {number} padding=5
     * The popper will flip if it hits the edges of the `boundariesElement`
     */
    padding: 5,

    /**
     * @prop {String|HTMLElement} boundariesElement='viewport'
     * The element which will define the boundaries of the popper position.
     * The popper will never be placed outside of the defined boundaries
     * (except if `keepTogether` is enabled)
     */
    boundariesElement: 'viewport',

    /**
     * @prop {Boolean} flipVariations=false
     * The popper will switch placement variation between `-start` and `-end` when
     * the reference element overlaps its boundaries.
     *
     * The original placement should have a set variation.
     */
    flipVariations: false,

    /**
     * @prop {Boolean} flipVariationsByContent=false
     * The popper will switch placement variation between `-start` and `-end` when
     * the popper element overlaps its reference boundaries.
     *
     * The original placement should have a set variation.
     */
    flipVariationsByContent: false
  },

  /**
   * Modifier used to make the popper flow toward the inner of the reference element.
   * By default, when this modifier is disabled, the popper will be placed outside
   * the reference element.
   * @memberof modifiers
   * @inner
   */
  inner: {
    /** @prop {number} order=700 - Index used to define the order of execution */
    order: 700,

    /** @prop {Boolean} enabled=false - Whether the modifier is enabled or not */
    enabled: false,

    /** @prop {ModifierFn} */
    fn: inner
  },

  /**
   * Modifier used to hide the popper when its reference element is outside of the
   * popper boundaries. It will set a `x-out-of-boundaries` attribute which can
   * be used to hide with a CSS selector the popper when its reference is
   * out of boundaries.
   *
   * Requires the `preventOverflow` modifier before it in order to work.
   * @memberof modifiers
   * @inner
   */
  hide: {
    /** @prop {number} order=800 - Index used to define the order of execution */
    order: 800,

    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */
    enabled: true,

    /** @prop {ModifierFn} */
    fn: hide
  },

  /**
   * Computes the style that will be applied to the popper element to gets
   * properly positioned.
   *
   * Note that this modifier will not touch the DOM, it just prepares the styles
   * so that `applyStyle` modifier can apply it. This separation is useful
   * in case you need to replace `applyStyle` with a custom implementation.
   *
   * This modifier has `850` as `order` value to maintain backward compatibility
   * with previous versions of Popper.js. Expect the modifiers ordering method
   * to change in future major versions of the library.
   *
   * @memberof modifiers
   * @inner
   */
  computeStyle: {
    /** @prop {number} order=850 - Index used to define the order of execution */
    order: 850,

    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */
    enabled: true,

    /** @prop {ModifierFn} */
    fn: computeStyle,

    /**
     * @prop {Boolean} gpuAcceleration=true
     * If true, it uses the CSS 3D transformation to position the popper.
     * Otherwise, it will use the `top` and `left` properties
     */
    gpuAcceleration: true,

    /**
     * @prop {string} [x='bottom']
     * Where to anchor the X axis (`bottom` or `top`). AKA X offset origin.
     * Change this if your popper should grow in a direction different from `bottom`
     */
    x: 'bottom',

    /**
     * @prop {string} [x='left']
     * Where to anchor the Y axis (`left` or `right`). AKA Y offset origin.
     * Change this if your popper should grow in a direction different from `right`
     */
    y: 'right'
  },

  /**
   * Applies the computed styles to the popper element.
   *
   * All the DOM manipulations are limited to this modifier. This is useful in case
   * you want to integrate Popper.js inside a framework or view library and you
   * want to delegate all the DOM manipulations to it.
   *
   * Note that if you disable this modifier, you must make sure the popper element
   * has its position set to `absolute` before Popper.js can do its work!
   *
   * Just disable this modifier and define your own to achieve the desired effect.
   *
   * @memberof modifiers
   * @inner
   */
  applyStyle: {
    /** @prop {number} order=900 - Index used to define the order of execution */
    order: 900,

    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */
    enabled: true,

    /** @prop {ModifierFn} */
    fn: applyStyle,

    /** @prop {Function} */
    onLoad: applyStyleOnLoad,

    /**
     * @deprecated since version 1.10.0, the property moved to `computeStyle` modifier
     * @prop {Boolean} gpuAcceleration=true
     * If true, it uses the CSS 3D transformation to position the popper.
     * Otherwise, it will use the `top` and `left` properties
     */
    gpuAcceleration: undefined
  }
};
/**
 * The `dataObject` is an object containing all the information used by Popper.js.
 * This object is passed to modifiers and to the `onCreate` and `onUpdate` callbacks.
 * @name dataObject
 * @property {Object} data.instance The Popper.js instance
 * @property {String} data.placement Placement applied to popper
 * @property {String} data.originalPlacement Placement originally defined on init
 * @property {Boolean} data.flipped True if popper has been flipped by flip modifier
 * @property {Boolean} data.hide True if the reference element is out of boundaries, useful to know when to hide the popper
 * @property {HTMLElement} data.arrowElement Node used as arrow by arrow modifier
 * @property {Object} data.styles Any CSS property defined here will be applied to the popper. It expects the JavaScript nomenclature (eg. `marginBottom`)
 * @property {Object} data.arrowStyles Any CSS property defined here will be applied to the popper arrow. It expects the JavaScript nomenclature (eg. `marginBottom`)
 * @property {Object} data.boundaries Offsets of the popper boundaries
 * @property {Object} data.offsets The measurements of popper, reference and arrow elements
 * @property {Object} data.offsets.popper `top`, `left`, `width`, `height` values
 * @property {Object} data.offsets.reference `top`, `left`, `width`, `height` values
 * @property {Object} data.offsets.arrow] `top` and `left` offsets, only one of them will be different from 0
 */

/**
 * Default options provided to Popper.js constructor.<br />
 * These can be overridden using the `options` argument of Popper.js.<br />
 * To override an option, simply pass an object with the same
 * structure of the `options` object, as the 3rd argument. For example:
 * ```
 * new Popper(ref, pop, {
 *   modifiers: {
 *     preventOverflow: { enabled: false }
 *   }
 * })
 * ```
 * @type {Object}
 * @static
 * @memberof Popper
 */

var Defaults = {
  /**
   * Popper's placement.
   * @prop {Popper.placements} placement='bottom'
   */
  placement: 'bottom',

  /**
   * Set this to true if you want popper to position it self in 'fixed' mode
   * @prop {Boolean} positionFixed=false
   */
  positionFixed: false,

  /**
   * Whether events (resize, scroll) are initially enabled.
   * @prop {Boolean} eventsEnabled=true
   */
  eventsEnabled: true,

  /**
   * Set to true if you want to automatically remove the popper when
   * you call the `destroy` method.
   * @prop {Boolean} removeOnDestroy=false
   */
  removeOnDestroy: false,

  /**
   * Callback called when the popper is created.<br />
   * By default, it is set to no-op.<br />
   * Access Popper.js instance with `data.instance`.
   * @prop {onCreate}
   */
  onCreate: function onCreate() {},

  /**
   * Callback called when the popper is updated. This callback is not called
   * on the initialization/creation of the popper, but only on subsequent
   * updates.<br />
   * By default, it is set to no-op.<br />
   * Access Popper.js instance with `data.instance`.
   * @prop {onUpdate}
   */
  onUpdate: function onUpdate() {},

  /**
   * List of modifiers used to modify the offsets before they are applied to the popper.
   * They provide most of the functionalities of Popper.js.
   * @prop {modifiers}
   */
  modifiers: modifiers
};
/**
 * @callback onCreate
 * @param {dataObject} data
 */

/**
 * @callback onUpdate
 * @param {dataObject} data
 */
// Utils
// Methods

var Popper = function () {
  /**
   * Creates a new Popper.js instance.
   * @class Popper
   * @param {Element|referenceObject} reference - The reference element used to position the popper
   * @param {Element} popper - The HTML / XML element used as the popper
   * @param {Object} options - Your custom options to override the ones defined in [Defaults](#defaults)
   * @return {Object} instance - The generated Popper.js instance
   */
  function Popper(reference, popper) {
    var _this = this;

    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
    classCallCheck(this, Popper);

    this.scheduleUpdate = function () {
      return requestAnimationFrame(_this.update);
    }; // make update() debounced, so that it only runs at most once-per-tick


    this.update = debounce(this.update.bind(this)); // with {} we create a new object with the options inside it

    this.options = _extends({}, Popper.Defaults, options); // init state

    this.state = {
      isDestroyed: false,
      isCreated: false,
      scrollParents: []
    }; // get reference and popper elements (allow jQuery wrappers)

    this.reference = reference && reference.jquery ? reference[0] : reference;
    this.popper = popper && popper.jquery ? popper[0] : popper; // Deep merge modifiers options

    this.options.modifiers = {};
    Object.keys(_extends({}, Popper.Defaults.modifiers, options.modifiers)).forEach(function (name) {
      _this.options.modifiers[name] = _extends({}, Popper.Defaults.modifiers[name] || {}, options.modifiers ? options.modifiers[name] : {});
    }); // Refactoring modifiers' list (Object => Array)

    this.modifiers = Object.keys(this.options.modifiers).map(function (name) {
      return _extends({
        name: name
      }, _this.options.modifiers[name]);
    }) // sort the modifiers by order
    .sort(function (a, b) {
      return a.order - b.order;
    }); // modifiers have the ability to execute arbitrary code when Popper.js get inited
    // such code is executed in the same order of its modifier
    // they could add new properties to their options configuration
    // BE AWARE: don't add options to `options.modifiers.name` but to `modifierOptions`!

    this.modifiers.forEach(function (modifierOptions) {
      if (modifierOptions.enabled && isFunction(modifierOptions.onLoad)) {
        modifierOptions.onLoad(_this.reference, _this.popper, _this.options, modifierOptions, _this.state);
      }
    }); // fire the first update to position the popper in the right place

    this.update();
    var eventsEnabled = this.options.eventsEnabled;

    if (eventsEnabled) {
      // setup event listeners, they will take care of update the position in specific situations
      this.enableEventListeners();
    }

    this.state.eventsEnabled = eventsEnabled;
  } // We can't use class properties because they don't get listed in the
  // class prototype and break stuff like Sinon stubs


  createClass(Popper, [{
    key: 'update',
    value: function update$$1() {
      return update.call(this);
    }
  }, {
    key: 'destroy',
    value: function destroy$$1() {
      return destroy.call(this);
    }
  }, {
    key: 'enableEventListeners',
    value: function enableEventListeners$$1() {
      return enableEventListeners.call(this);
    }
  }, {
    key: 'disableEventListeners',
    value: function disableEventListeners$$1() {
      return disableEventListeners.call(this);
    }
    /**
     * Schedules an update. It will run on the next UI update available.
     * @method scheduleUpdate
     * @memberof Popper
     */

    /**
     * Collection of utilities useful when writing custom modifiers.
     * Starting from version 1.7, this method is available only if you
     * include `popper-utils.js` before `popper.js`.
     *
     * **DEPRECATION**: This way to access PopperUtils is deprecated
     * and will be removed in v2! Use the PopperUtils module directly instead.
     * Due to the high instability of the methods contained in Utils, we can't
     * guarantee them to follow semver. Use them at your own risk!
     * @static
     * @private
     * @type {Object}
     * @deprecated since version 1.8
     * @member Utils
     * @memberof Popper
     */

  }]);
  return Popper;
}();
/**
 * The `referenceObject` is an object that provides an interface compatible with Popper.js
 * and lets you use it as replacement of a real DOM node.<br />
 * You can use this method to position a popper relatively to a set of coordinates
 * in case you don't have a DOM node to use as reference.
 *
 * ```
 * new Popper(referenceObject, popperNode);
 * ```
 *
 * NB: This feature isn't supported in Internet Explorer 10.
 * @name referenceObject
 * @property {Function} data.getBoundingClientRect
 * A function that returns a set of coordinates compatible with the native `getBoundingClientRect` method.
 * @property {number} data.clientWidth
 * An ES6 getter that will return the width of the virtual reference element.
 * @property {number} data.clientHeight
 * An ES6 getter that will return the height of the virtual reference element.
 */


Popper.Utils = (typeof window !== 'undefined' ? window : global).PopperUtils;
Popper.placements = placements;
Popper.Defaults = Defaults;

class CardRender {
  constructor(component) {
    this.component = component;
    this.handleDropDownToggleClick = this.handleDropDownToggleClick.bind(this);
  }

  handleDropDownToggleClick(evt) {
    const dropDownMenu = this.component.element.querySelector(".dropdown-menu");
    dropDownMenu.classList.toggle("show");
    const toggleButton = evt.target;

    if (this.popper) {
      this.popper.destroy();
    }

    this.popper = new Popper(toggleButton, dropDownMenu, {
      placement: "bottom-start"
    });

    this.bodyClickHandler = bodyClickEvt => {
      const target = bodyClickEvt.target;

      if (target === toggleButton) {
        return;
      }

      dropDownMenu.classList.remove("show");
    };

    setTimeout(() => {
      document.body.addEventListener("click", this.bodyClickHandler, {
        once: true
      });
    }, 10);
  }

  componentDidUnload() {
    if (this.bodyClickHandler) {
      document.body.removeEventListener("click", this.bodyClickHandler);
    }

    if (this.popper) {
      this.popper.destroy();
    }
  }

  componentDidLoad() {
    this.toggleHeaderFooterVisibility();
  }

  componentDidUpdate() {
    this.toggleHeaderFooterVisibility();
  }

  toggleHeaderFooterVisibility() {
    const card = this.component;
    const cardHeader = card.element.querySelector(":scope > .card > .card-header");
    const cardFooter = card.element.querySelector(":scope > .card > .card-footer");
    const lowPriorityActions = cardFooter !== null ? Array.from(cardFooter.querySelectorAll("[slot='low-priority-action']")) : [];
    const highPriorityActions = cardHeader !== null ? Array.from(cardHeader.querySelectorAll("[slot='high-priority-action']")) : [];
    const normalPriorityActions = cardFooter !== null ? Array.from(cardFooter.querySelectorAll("[slot='normal-priority-action']")) : [];
    const buttonActions = [...highPriorityActions, ...normalPriorityActions];
    buttonActions.forEach(btn => btn.size = "small");
    lowPriorityActions.forEach(action => {
      if (action.cssClass && action.cssClass.indexOf("dropdown-item") >= 0) {
        return;
      }

      action.cssClass = (action.cssClass || "") + " dropdown-item";
    });
    const hasLowPriorityActions = lowPriorityActions.length > 0;
    const hasFooterActions = hasLowPriorityActions || normalPriorityActions.length > 0;
    const hasHeaderActions = highPriorityActions.length > 0;
    const renderHeader = hasHeaderActions || cardHeader !== null && cardHeader.querySelector("[slot='header']") !== null;
    const renderFooter = hasFooterActions || cardFooter !== null && cardFooter.querySelector("[slot='footer']") !== null;

    if (cardHeader !== null) {
      cardHeader.hidden = !(renderHeader && card.showHeader);
    }

    if (cardFooter !== null) {
      cardFooter.hidden = !(renderFooter && card.showFooter);
    }
  }

  render(slots) {
    const card = this.component;
    const lowPriorityActions = Array.from(card.element.querySelectorAll("[slot='low-priority-action']"));
    const highPriorityActions = Array.from(card.element.querySelectorAll("[slot='high-priority-action']"));
    const normalPriorityActions = Array.from(card.element.querySelectorAll("[slot='normal-priority-action']"));
    const buttonActions = [...highPriorityActions, ...normalPriorityActions];
    buttonActions.forEach(btn => btn.size = "small");
    lowPriorityActions.forEach(action => {
      if (action.cssClass && action.cssClass.indexOf("dropdown-item") >= 0) {
        return;
      }

      action.cssClass = (action.cssClass || "") + " dropdown-item";
    });
    const hasLowPriorityActions = lowPriorityActions.length > 0;
    const hasFooterActions = hasLowPriorityActions || normalPriorityActions.length > 0;
    const renderFooter = hasFooterActions || card.element.querySelector("[slot='footer']") !== null;
    return [(0,_index_10623738_js__WEBPACK_IMPORTED_MODULE_1__.h)("gx-bootstrap", null), (0,_index_10623738_js__WEBPACK_IMPORTED_MODULE_1__.h)("div", {
      class: {
        "border-0": !card.showBorder,
        "rounded-0": !card.showBorder,
        card: true
      }
    }, (0,_index_10623738_js__WEBPACK_IMPORTED_MODULE_1__.h)("div", {
      class: {
        "border-0": !card.showBorder,
        "card-header": true
      }
    }, slots.header, (0,_index_10623738_js__WEBPACK_IMPORTED_MODULE_1__.h)("div", {
      class: "float-right"
    }, slots.highPriorityAction)), slots.body, slots.default, renderFooter && (0,_index_10623738_js__WEBPACK_IMPORTED_MODULE_1__.h)("div", {
      class: {
        "border-0": !card.showBorder,
        "card-footer": true
      }
    }, slots.footer, hasFooterActions && (0,_index_10623738_js__WEBPACK_IMPORTED_MODULE_1__.h)("div", {
      class: "float-right"
    }, slots.normalPriorityAction, hasLowPriorityActions && (0,_index_10623738_js__WEBPACK_IMPORTED_MODULE_1__.h)("button", {
      class: "btn btn-sm gx-dropdown-toggle",
      type: "button",
      "aria-haspopup": "true",
      "aria-expanded": "false",
      "aria-label": "More actions",
      onClick: this.handleDropDownToggleClick
    }), hasLowPriorityActions && (0,_index_10623738_js__WEBPACK_IMPORTED_MODULE_1__.h)("div", {
      class: "dropdown-menu"
    }, slots.lowPriorityAction))))];
  }

}

const cardCss = "@charset \"UTF-8\";.gx-line-clamp{display:-webkit-box;-webkit-box-orient:vertical;-webkit-line-clamp:var(--max-lines);overflow:hidden}.line-measuring{visibility:hidden;position:absolute}gx-card{display:-ms-flexbox;display:flex;-ms-flex:1;flex:1}gx-card gx-button[slot=high-priority-action],gx-card gx-button[slot=normal-priority-action]{margin-right:5px}gx-card .gx-dropdown-toggle::after{content:\"⠇\";padding-left:4px}gx-card .dropdown-menu [slot=low-priority-action]{display:block;width:100%;clear:both;border:0}gx-card>.card{display:-ms-flexbox;display:flex;-ms-flex:1;flex:1;background-color:transparent}gx-card>.card>[slot=body]{-ms-flex:1;flex:1;display:-ms-flexbox;display:flex}gx-card{display:block}gx-card[hidden]{display:none !important}gx-card[hidden][invisible-mode=keep-space]{display:block !important;visibility:hidden}";
const Card = class {
  constructor(hostRef) {
    (0,_index_10623738_js__WEBPACK_IMPORTED_MODULE_1__.r)(this, hostRef);
    /**
     * This attribute lets you specify how this element will behave when hidden.
     *
     * | Value        | Details                                                                     |
     * | ------------ | --------------------------------------------------------------------------- |
     * | `keep-space` | The element remains in the document flow, and it does occupy space.         |
     * | `collapse`   | The element is removed form the document flow, and it doesn't occupy space. |
     */

    this.invisibleMode = "collapse";
    /**
     * True to show the card border. False to hide it.
     */

    this.showBorder = true;
    /**
     * True to show the card footer. False to hide it.
     */

    this.showFooter = true;
    /**
     * True to show the card header. False to hide it.
     */

    this.showHeader = true;
    this.renderer = new CardRender(this);
  }

  componentDidLoad() {
    this.renderer.componentDidLoad();
  }

  componentDidUpdate() {
    this.renderer.componentDidUpdate();
  }

  componentDidUnload() {
    this.renderer.componentDidUnload();
  }

  render() {
    return (0,_index_10623738_js__WEBPACK_IMPORTED_MODULE_1__.h)(_index_10623738_js__WEBPACK_IMPORTED_MODULE_1__.H, null, this.renderer.render({
      body: (0,_index_10623738_js__WEBPACK_IMPORTED_MODULE_1__.h)("slot", {
        name: "body"
      }),
      default: (0,_index_10623738_js__WEBPACK_IMPORTED_MODULE_1__.h)("slot", null),
      footer: (0,_index_10623738_js__WEBPACK_IMPORTED_MODULE_1__.h)("slot", {
        name: "footer"
      }),
      header: (0,_index_10623738_js__WEBPACK_IMPORTED_MODULE_1__.h)("slot", {
        name: "header"
      }),
      highPriorityAction: (0,_index_10623738_js__WEBPACK_IMPORTED_MODULE_1__.h)("slot", {
        name: "high-priority-action"
      }),
      lowPriorityAction: (0,_index_10623738_js__WEBPACK_IMPORTED_MODULE_1__.h)("slot", {
        name: "low-priority-action"
      }),
      normalPriorityAction: (0,_index_10623738_js__WEBPACK_IMPORTED_MODULE_1__.h)("slot", {
        name: "normal-priority-action"
      })
    }));
  }

  get element() {
    return (0,_index_10623738_js__WEBPACK_IMPORTED_MODULE_1__.g)(this);
  }

};
Card.style = cardCss;
const iconContent = new Map();
const requests = new Map();

function getSvgContent(url) {
  // see if we already have a request for this url
  let request = requests.get(url);

  if (request === undefined) {
    // we don't already have a request
    request = fetch(url).then(response => {
      if (response.ok) {
        return response.text().then(svgContent => {
          iconContent.set(url, svgContent);
          return svgContent;
        });
      }

      iconContent.set(url, "");
    }); // cache for the same requests

    requests.set(url, request);
  }

  return request;
}

const iconCss = ":host{display:-ms-inline-flexbox;display:inline-flex;--gx-icon-size:24px;width:var(--gx-icon-size);height:var(--gx-icon-size)}:host svg{width:var(--gx-icon-size);height:var(--gx-icon-size)}:host svg *{fill:var(--gx-icon-color);-webkit-transition:color 0.25s, fill 0.25s, stroke 0.25s;transition:color 0.25s, fill 0.25s, stroke 0.25s}:host .svg-icon-native{line-height:0}";
const CAMEL_CASE_TO_HYPHENED_REGEX = /(.)([A-Z])/g;
const Icon = class {
  constructor(hostRef) {
    (0,_index_10623738_js__WEBPACK_IMPORTED_MODULE_1__.r)(this, hostRef);
    /**
     * A label for the icon, for screen readers to use.
     */

    this.label = "";
    /**
     * If enabled, the icon will be loaded lazily when it's visible in the viewport.
     */

    this.lazy = false;
    /**
     * The type of icon. Possible values: the name each of the icons in /assets.
     */

    this.type = "none";
    this.isVisible = false;
  }

  connectedCallback() {
    // purposely do not return the promise here because loading
    // the svg file should not hold up loading the app
    // only load the svg if it's visible
    this.waitUntilVisible(this.element, "50px", () => {
      this.isVisible = true;
      this.getIcon();
    });
  }

  disconnectedCallback() {
    if (this.io !== undefined) {
      this.io.disconnect();
      this.io = undefined;
    }
  }

  waitUntilVisible(el, rootMargin, callback) {
    if (this.lazy && typeof window !== "undefined" && window.IntersectionObserver) {
      const io = this.io = new window.IntersectionObserver(data => {
        if (data[0].isIntersecting) {
          io.disconnect();
          this.io = undefined;
          callback();
        }
      }, {
        rootMargin
      });
      io.observe(el);
    } else {
      // browser doesn't support IntersectionObserver
      // so just fallback to always show it
      callback();
    }
  }

  getIcon() {
    var _this2 = this;

    return (0,C_KBs_Koder_SupaBase_CSharpModel_mobile_Angular_Menu_node_modules_babel_runtime_helpers_esm_asyncToGenerator_js__WEBPACK_IMPORTED_MODULE_0__["default"])(function* () {
      if (_this2.isVisible) {
        if (_this2.type === "none") {
          _this2.svgContent = "";
          return;
        }

        const fileName = _this2.getFileName();

        const url = (0,_index_10623738_js__WEBPACK_IMPORTED_MODULE_1__.f)(`./assets/${fileName}`);

        if (url) {
          if (iconContent.has(url)) {
            _this2.svgContent = iconContent.get(url);
          } else {
            _this2.svgContent = yield getSvgContent(url);
          }
        }
      }
    })();
  }

  getFileName() {
    const name = this.type.replace(CAMEL_CASE_TO_HYPHENED_REGEX, "$1-$2").toLowerCase();
    return `${name}.svg`;
  }

  render() {
    return (0,_index_10623738_js__WEBPACK_IMPORTED_MODULE_1__.h)(_index_10623738_js__WEBPACK_IMPORTED_MODULE_1__.H, {
      "aria-label": this.label || this.type
    }, (0,_index_10623738_js__WEBPACK_IMPORTED_MODULE_1__.h)("div", {
      class: {
        "svg-icon-native": true
      },
      style: this.color && {
        "--gx-icon-color": this.color
      },
      innerHTML: this.svgContent
    }));
  }

  static get assetsDirs() {
    return ["assets"];
  }

  get element() {
    return (0,_index_10623738_js__WEBPACK_IMPORTED_MODULE_1__.g)(this);
  }

  static get watchers() {
    return {
      "type": ["getIcon"]
    };
  }

};
Icon.style = iconCss;
var lazysizes = (0,_commonjsHelpers_7b8ed50b_js__WEBPACK_IMPORTED_MODULE_7__.c)(function (module) {
  (function (window, factory) {
    var lazySizes = factory(window, window.document, Date);
    window.lazySizes = lazySizes;

    if (module.exports) {
      module.exports = lazySizes;
    }
  })(typeof window != 'undefined' ? window : {}, function l(window, document, Date) {
    // Pass in the windoe Date function also for SSR because the Date class can be lost

    /*jshint eqnull:true */
    var lazysizes, lazySizesCfg;

    (function () {
      var prop;
      var lazySizesDefaults = {
        lazyClass: 'lazyload',
        loadedClass: 'lazyloaded',
        loadingClass: 'lazyloading',
        preloadClass: 'lazypreload',
        errorClass: 'lazyerror',
        //strictClass: 'lazystrict',
        autosizesClass: 'lazyautosizes',
        srcAttr: 'data-src',
        srcsetAttr: 'data-srcset',
        sizesAttr: 'data-sizes',
        //preloadAfterLoad: false,
        minSize: 40,
        customMedia: {},
        init: true,
        expFactor: 1.5,
        hFac: 0.8,
        loadMode: 2,
        loadHidden: true,
        ricTimeout: 0,
        throttleDelay: 125
      };
      lazySizesCfg = window.lazySizesConfig || window.lazysizesConfig || {};

      for (prop in lazySizesDefaults) {
        if (!(prop in lazySizesCfg)) {
          lazySizesCfg[prop] = lazySizesDefaults[prop];
        }
      }
    })();

    if (!document || !document.getElementsByClassName) {
      return {
        init: function () {},
        cfg: lazySizesCfg,
        noSupport: true
      };
    }

    var docElem = document.documentElement;
    var supportPicture = window.HTMLPictureElement;
    var _addEventListener = 'addEventListener';
    var _getAttribute = 'getAttribute';
    /**
     * Update to bind to window because 'this' becomes null during SSR
     * builds.
     */

    var addEventListener = window[_addEventListener].bind(window);

    var setTimeout = window.setTimeout;
    var requestAnimationFrame = window.requestAnimationFrame || setTimeout;
    var requestIdleCallback = window.requestIdleCallback;
    var regPicture = /^picture$/i;
    var loadEvents = ['load', 'error', 'lazyincluded', '_lazyloaded'];
    var regClassCache = {};
    var forEach = Array.prototype.forEach;

    var hasClass = function (ele, cls) {
      if (!regClassCache[cls]) {
        regClassCache[cls] = new RegExp('(\\s|^)' + cls + '(\\s|$)');
      }

      return regClassCache[cls].test(ele[_getAttribute]('class') || '') && regClassCache[cls];
    };

    var addClass = function (ele, cls) {
      if (!hasClass(ele, cls)) {
        ele.setAttribute('class', (ele[_getAttribute]('class') || '').trim() + ' ' + cls);
      }
    };

    var removeClass = function (ele, cls) {
      var reg;

      if (reg = hasClass(ele, cls)) {
        ele.setAttribute('class', (ele[_getAttribute]('class') || '').replace(reg, ' '));
      }
    };

    var addRemoveLoadEvents = function (dom, fn, add) {
      var action = add ? _addEventListener : 'removeEventListener';

      if (add) {
        addRemoveLoadEvents(dom, fn);
      }

      loadEvents.forEach(function (evt) {
        dom[action](evt, fn);
      });
    };

    var triggerEvent = function (elem, name, detail, noBubbles, noCancelable) {
      var event = document.createEvent('Event');

      if (!detail) {
        detail = {};
      }

      detail.instance = lazysizes;
      event.initEvent(name, !noBubbles, !noCancelable);
      event.detail = detail;
      elem.dispatchEvent(event);
      return event;
    };

    var updatePolyfill = function (el, full) {
      var polyfill;

      if (!supportPicture && (polyfill = window.picturefill || lazySizesCfg.pf)) {
        if (full && full.src && !el[_getAttribute]('srcset')) {
          el.setAttribute('srcset', full.src);
        }

        polyfill({
          reevaluate: true,
          elements: [el]
        });
      } else if (full && full.src) {
        el.src = full.src;
      }
    };

    var getCSS = function (elem, style) {
      return (getComputedStyle(elem, null) || {})[style];
    };

    var getWidth = function (elem, parent, width) {
      width = width || elem.offsetWidth;

      while (width < lazySizesCfg.minSize && parent && !elem._lazysizesWidth) {
        width = parent.offsetWidth;
        parent = parent.parentNode;
      }

      return width;
    };

    var rAF = function () {
      var running, waiting;
      var firstFns = [];
      var secondFns = [];
      var fns = firstFns;

      var run = function () {
        var runFns = fns;
        fns = firstFns.length ? secondFns : firstFns;
        running = true;
        waiting = false;

        while (runFns.length) {
          runFns.shift()();
        }

        running = false;
      };

      var rafBatch = function (fn, queue) {
        if (running && !queue) {
          fn.apply(this, arguments);
        } else {
          fns.push(fn);

          if (!waiting) {
            waiting = true;
            (document.hidden ? setTimeout : requestAnimationFrame)(run);
          }
        }
      };

      rafBatch._lsFlush = run;
      return rafBatch;
    }();

    var rAFIt = function (fn, simple) {
      return simple ? function () {
        rAF(fn);
      } : function () {
        var that = this;
        var args = arguments;
        rAF(function () {
          fn.apply(that, args);
        });
      };
    };

    var throttle = function (fn) {
      var running;
      var lastTime = 0;
      var gDelay = lazySizesCfg.throttleDelay;
      var rICTimeout = lazySizesCfg.ricTimeout;

      var run = function () {
        running = false;
        lastTime = Date.now();
        fn();
      };

      var idleCallback = requestIdleCallback && rICTimeout > 49 ? function () {
        requestIdleCallback(run, {
          timeout: rICTimeout
        });

        if (rICTimeout !== lazySizesCfg.ricTimeout) {
          rICTimeout = lazySizesCfg.ricTimeout;
        }
      } : rAFIt(function () {
        setTimeout(run);
      }, true);
      return function (isPriority) {
        var delay;

        if (isPriority = isPriority === true) {
          rICTimeout = 33;
        }

        if (running) {
          return;
        }

        running = true;
        delay = gDelay - (Date.now() - lastTime);

        if (delay < 0) {
          delay = 0;
        }

        if (isPriority || delay < 9) {
          idleCallback();
        } else {
          setTimeout(idleCallback, delay);
        }
      };
    }; //based on http://modernjavascript.blogspot.de/2013/08/building-better-debounce.html


    var debounce = function (func) {
      var timeout, timestamp;
      var wait = 99;

      var run = function () {
        timeout = null;
        func();
      };

      var later = function () {
        var last = Date.now() - timestamp;

        if (last < wait) {
          setTimeout(later, wait - last);
        } else {
          (requestIdleCallback || run)(run);
        }
      };

      return function () {
        timestamp = Date.now();

        if (!timeout) {
          timeout = setTimeout(later, wait);
        }
      };
    };

    var loader = function () {
      var preloadElems, isCompleted, resetPreloadingTimer, loadMode, started;
      var eLvW, elvH, eLtop, eLleft, eLright, eLbottom, isBodyHidden;
      var regImg = /^img$/i;
      var regIframe = /^iframe$/i;
      var supportScroll = 'onscroll' in window && !/(gle|ing)bot/.test(navigator.userAgent);
      var shrinkExpand = 0;
      var currentExpand = 0;
      var isLoading = 0;
      var lowRuns = -1;

      var resetPreloading = function (e) {
        isLoading--;

        if (!e || isLoading < 0 || !e.target) {
          isLoading = 0;
        }
      };

      var isVisible = function (elem) {
        if (isBodyHidden == null) {
          isBodyHidden = getCSS(document.body, 'visibility') == 'hidden';
        }

        return isBodyHidden || !(getCSS(elem.parentNode, 'visibility') == 'hidden' && getCSS(elem, 'visibility') == 'hidden');
      };

      var isNestedVisible = function (elem, elemExpand) {
        var outerRect;
        var parent = elem;
        var visible = isVisible(elem);
        eLtop -= elemExpand;
        eLbottom += elemExpand;
        eLleft -= elemExpand;
        eLright += elemExpand;

        while (visible && (parent = parent.offsetParent) && parent != document.body && parent != docElem) {
          visible = (getCSS(parent, 'opacity') || 1) > 0;

          if (visible && getCSS(parent, 'overflow') != 'visible') {
            outerRect = parent.getBoundingClientRect();
            visible = eLright > outerRect.left && eLleft < outerRect.right && eLbottom > outerRect.top - 1 && eLtop < outerRect.bottom + 1;
          }
        }

        return visible;
      };

      var checkElements = function () {
        var eLlen, i, rect, autoLoadElem, loadedSomething, elemExpand, elemNegativeExpand, elemExpandVal, beforeExpandVal, defaultExpand, preloadExpand, hFac;
        var lazyloadElems = lazysizes.elements;

        if ((loadMode = lazySizesCfg.loadMode) && isLoading < 8 && (eLlen = lazyloadElems.length)) {
          i = 0;
          lowRuns++;

          for (; i < eLlen; i++) {
            if (!lazyloadElems[i] || lazyloadElems[i]._lazyRace) {
              continue;
            }

            if (!supportScroll || lazysizes.prematureUnveil && lazysizes.prematureUnveil(lazyloadElems[i])) {
              unveilElement(lazyloadElems[i]);
              continue;
            }

            if (!(elemExpandVal = lazyloadElems[i][_getAttribute]('data-expand')) || !(elemExpand = elemExpandVal * 1)) {
              elemExpand = currentExpand;
            }

            if (!defaultExpand) {
              defaultExpand = !lazySizesCfg.expand || lazySizesCfg.expand < 1 ? docElem.clientHeight > 500 && docElem.clientWidth > 500 ? 500 : 370 : lazySizesCfg.expand;
              lazysizes._defEx = defaultExpand;
              preloadExpand = defaultExpand * lazySizesCfg.expFactor;
              hFac = lazySizesCfg.hFac;
              isBodyHidden = null;

              if (currentExpand < preloadExpand && isLoading < 1 && lowRuns > 2 && loadMode > 2 && !document.hidden) {
                currentExpand = preloadExpand;
                lowRuns = 0;
              } else if (loadMode > 1 && lowRuns > 1 && isLoading < 6) {
                currentExpand = defaultExpand;
              } else {
                currentExpand = shrinkExpand;
              }
            }

            if (beforeExpandVal !== elemExpand) {
              eLvW = innerWidth + elemExpand * hFac;
              elvH = innerHeight + elemExpand;
              elemNegativeExpand = elemExpand * -1;
              beforeExpandVal = elemExpand;
            }

            rect = lazyloadElems[i].getBoundingClientRect();

            if ((eLbottom = rect.bottom) >= elemNegativeExpand && (eLtop = rect.top) <= elvH && (eLright = rect.right) >= elemNegativeExpand * hFac && (eLleft = rect.left) <= eLvW && (eLbottom || eLright || eLleft || eLtop) && (lazySizesCfg.loadHidden || isVisible(lazyloadElems[i])) && (isCompleted && isLoading < 3 && !elemExpandVal && (loadMode < 3 || lowRuns < 4) || isNestedVisible(lazyloadElems[i], elemExpand))) {
              unveilElement(lazyloadElems[i]);
              loadedSomething = true;

              if (isLoading > 9) {
                break;
              }
            } else if (!loadedSomething && isCompleted && !autoLoadElem && isLoading < 4 && lowRuns < 4 && loadMode > 2 && (preloadElems[0] || lazySizesCfg.preloadAfterLoad) && (preloadElems[0] || !elemExpandVal && (eLbottom || eLright || eLleft || eLtop || lazyloadElems[i][_getAttribute](lazySizesCfg.sizesAttr) != 'auto'))) {
              autoLoadElem = preloadElems[0] || lazyloadElems[i];
            }
          }

          if (autoLoadElem && !loadedSomething) {
            unveilElement(autoLoadElem);
          }
        }
      };

      var throttledCheckElements = throttle(checkElements);

      var switchLoadingClass = function (e) {
        var elem = e.target;

        if (elem._lazyCache) {
          delete elem._lazyCache;
          return;
        }

        resetPreloading(e);
        addClass(elem, lazySizesCfg.loadedClass);
        removeClass(elem, lazySizesCfg.loadingClass);
        addRemoveLoadEvents(elem, rafSwitchLoadingClass);
        triggerEvent(elem, 'lazyloaded');
      };

      var rafedSwitchLoadingClass = rAFIt(switchLoadingClass);

      var rafSwitchLoadingClass = function (e) {
        rafedSwitchLoadingClass({
          target: e.target
        });
      };

      var changeIframeSrc = function (elem, src) {
        try {
          elem.contentWindow.location.replace(src);
        } catch (e) {
          elem.src = src;
        }
      };

      var handleSources = function (source) {
        var customMedia;

        var sourceSrcset = source[_getAttribute](lazySizesCfg.srcsetAttr);

        if (customMedia = lazySizesCfg.customMedia[source[_getAttribute]('data-media') || source[_getAttribute]('media')]) {
          source.setAttribute('media', customMedia);
        }

        if (sourceSrcset) {
          source.setAttribute('srcset', sourceSrcset);
        }
      };

      var lazyUnveil = rAFIt(function (elem, detail, isAuto, sizes, isImg) {
        var src, srcset, parent, isPicture, event, firesLoad;

        if (!(event = triggerEvent(elem, 'lazybeforeunveil', detail)).defaultPrevented) {
          if (sizes) {
            if (isAuto) {
              addClass(elem, lazySizesCfg.autosizesClass);
            } else {
              elem.setAttribute('sizes', sizes);
            }
          }

          srcset = elem[_getAttribute](lazySizesCfg.srcsetAttr);
          src = elem[_getAttribute](lazySizesCfg.srcAttr);

          if (isImg) {
            parent = elem.parentNode;
            isPicture = parent && regPicture.test(parent.nodeName || '');
          }

          firesLoad = detail.firesLoad || 'src' in elem && (srcset || src || isPicture);
          event = {
            target: elem
          };
          addClass(elem, lazySizesCfg.loadingClass);

          if (firesLoad) {
            clearTimeout(resetPreloadingTimer);
            resetPreloadingTimer = setTimeout(resetPreloading, 2500);
            addRemoveLoadEvents(elem, rafSwitchLoadingClass, true);
          }

          if (isPicture) {
            forEach.call(parent.getElementsByTagName('source'), handleSources);
          }

          if (srcset) {
            elem.setAttribute('srcset', srcset);
          } else if (src && !isPicture) {
            if (regIframe.test(elem.nodeName)) {
              changeIframeSrc(elem, src);
            } else {
              elem.src = src;
            }
          }

          if (isImg && (srcset || isPicture)) {
            updatePolyfill(elem, {
              src: src
            });
          }
        }

        if (elem._lazyRace) {
          delete elem._lazyRace;
        }

        removeClass(elem, lazySizesCfg.lazyClass);
        rAF(function () {
          // Part of this can be removed as soon as this fix is older: https://bugs.chromium.org/p/chromium/issues/detail?id=7731 (2015)
          var isLoaded = elem.complete && elem.naturalWidth > 1;

          if (!firesLoad || isLoaded) {
            if (isLoaded) {
              addClass(elem, 'ls-is-cached');
            }

            switchLoadingClass(event);
            elem._lazyCache = true;
            setTimeout(function () {
              if ('_lazyCache' in elem) {
                delete elem._lazyCache;
              }
            }, 9);
          }

          if (elem.loading == 'lazy') {
            isLoading--;
          }
        }, true);
      });

      var unveilElement = function (elem) {
        if (elem._lazyRace) {
          return;
        }

        var detail;
        var isImg = regImg.test(elem.nodeName); //allow using sizes="auto", but don't use. it's invalid. Use data-sizes="auto" or a valid value for sizes instead (i.e.: sizes="80vw")

        var sizes = isImg && (elem[_getAttribute](lazySizesCfg.sizesAttr) || elem[_getAttribute]('sizes'));

        var isAuto = sizes == 'auto';

        if ((isAuto || !isCompleted) && isImg && (elem[_getAttribute]('src') || elem.srcset) && !elem.complete && !hasClass(elem, lazySizesCfg.errorClass) && hasClass(elem, lazySizesCfg.lazyClass)) {
          return;
        }

        detail = triggerEvent(elem, 'lazyunveilread').detail;

        if (isAuto) {
          autoSizer.updateElem(elem, true, elem.offsetWidth);
        }

        elem._lazyRace = true;
        isLoading++;
        lazyUnveil(elem, detail, isAuto, sizes, isImg);
      };

      var afterScroll = debounce(function () {
        lazySizesCfg.loadMode = 3;
        throttledCheckElements();
      });

      var altLoadmodeScrollListner = function () {
        if (lazySizesCfg.loadMode == 3) {
          lazySizesCfg.loadMode = 2;
        }

        afterScroll();
      };

      var onload = function () {
        if (isCompleted) {
          return;
        }

        if (Date.now() - started < 999) {
          setTimeout(onload, 999);
          return;
        }

        isCompleted = true;
        lazySizesCfg.loadMode = 3;
        throttledCheckElements();
        addEventListener('scroll', altLoadmodeScrollListner, true);
      };

      return {
        _: function () {
          started = Date.now();
          lazysizes.elements = document.getElementsByClassName(lazySizesCfg.lazyClass);
          preloadElems = document.getElementsByClassName(lazySizesCfg.lazyClass + ' ' + lazySizesCfg.preloadClass);
          addEventListener('scroll', throttledCheckElements, true);
          addEventListener('resize', throttledCheckElements, true);
          addEventListener('pageshow', function (e) {
            if (e.persisted) {
              var loadingElements = document.querySelectorAll('.' + lazySizesCfg.loadingClass);

              if (loadingElements.length && loadingElements.forEach) {
                requestAnimationFrame(function () {
                  loadingElements.forEach(function (img) {
                    if (img.complete) {
                      unveilElement(img);
                    }
                  });
                });
              }
            }
          });

          if (window.MutationObserver) {
            new MutationObserver(throttledCheckElements).observe(docElem, {
              childList: true,
              subtree: true,
              attributes: true
            });
          } else {
            docElem[_addEventListener]('DOMNodeInserted', throttledCheckElements, true);

            docElem[_addEventListener]('DOMAttrModified', throttledCheckElements, true);

            setInterval(throttledCheckElements, 999);
          }

          addEventListener('hashchange', throttledCheckElements, true); //, 'fullscreenchange'

          ['focus', 'mouseover', 'click', 'load', 'transitionend', 'animationend'].forEach(function (name) {
            document[_addEventListener](name, throttledCheckElements, true);
          });

          if (/d$|^c/.test(document.readyState)) {
            onload();
          } else {
            addEventListener('load', onload);

            document[_addEventListener]('DOMContentLoaded', throttledCheckElements);

            setTimeout(onload, 20000);
          }

          if (lazysizes.elements.length) {
            checkElements();

            rAF._lsFlush();
          } else {
            throttledCheckElements();
          }
        },
        checkElems: throttledCheckElements,
        unveil: unveilElement,
        _aLSL: altLoadmodeScrollListner
      };
    }();

    var autoSizer = function () {
      var autosizesElems;
      var sizeElement = rAFIt(function (elem, parent, event, width) {
        var sources, i, len;
        elem._lazysizesWidth = width;
        width += 'px';
        elem.setAttribute('sizes', width);

        if (regPicture.test(parent.nodeName || '')) {
          sources = parent.getElementsByTagName('source');

          for (i = 0, len = sources.length; i < len; i++) {
            sources[i].setAttribute('sizes', width);
          }
        }

        if (!event.detail.dataAttr) {
          updatePolyfill(elem, event.detail);
        }
      });

      var getSizeElement = function (elem, dataAttr, width) {
        var event;
        var parent = elem.parentNode;

        if (parent) {
          width = getWidth(elem, parent, width);
          event = triggerEvent(elem, 'lazybeforesizes', {
            width: width,
            dataAttr: !!dataAttr
          });

          if (!event.defaultPrevented) {
            width = event.detail.width;

            if (width && width !== elem._lazysizesWidth) {
              sizeElement(elem, parent, event, width);
            }
          }
        }
      };

      var updateElementsSizes = function () {
        var i;
        var len = autosizesElems.length;

        if (len) {
          i = 0;

          for (; i < len; i++) {
            getSizeElement(autosizesElems[i]);
          }
        }
      };

      var debouncedUpdateElementsSizes = debounce(updateElementsSizes);
      return {
        _: function () {
          autosizesElems = document.getElementsByClassName(lazySizesCfg.autosizesClass);
          addEventListener('resize', debouncedUpdateElementsSizes);
        },
        checkElems: debouncedUpdateElementsSizes,
        updateElem: getSizeElement
      };
    }();

    var init = function () {
      if (!init.i && document.getElementsByClassName) {
        init.i = true;

        autoSizer._();

        loader._();
      }
    };

    setTimeout(function () {
      if (lazySizesCfg.init) {
        init();
      }
    });
    lazysizes = {
      cfg: lazySizesCfg,
      autoSizer: autoSizer,
      loader: loader,
      init: init,
      uP: updatePolyfill,
      aC: addClass,
      rC: removeClass,
      hC: hasClass,
      fire: triggerEvent,
      gW: getWidth,
      rAF: rAF
    };
    return lazysizes;
  });
});
const imageCss = ".gx-line-clamp{display:-webkit-box;-webkit-box-orient:vertical;-webkit-line-clamp:var(--max-lines);overflow:hidden}.line-measuring{visibility:hidden;position:absolute}gx-image{--elevation:0;--margin-top:initial;--margin-right:initial;--margin-bottom:initial;--margin-left:initial;--width:initial;--height:initial;display:-ms-inline-flexbox;display:inline-flex;-ms-flex-pack:stretch;justify-content:stretch;-ms-flex-align:stretch;align-items:stretch;-ms-flex:1;flex:1}gx-image[hidden]{display:none !important}gx-image[hidden][invisible-mode=keep-space]{display:-ms-inline-flexbox !important;display:inline-flex !important;visibility:hidden}gx-image.gx-img-no-auto-grow{width:var(--width);height:var(--height);margin-top:var(--margin-top, 0);margin-right:var(--margin-right, 0);margin-bottom:var(--margin-bottom, 0);margin-left:var(--margin-left, 0);position:relative}gx-image.gx-img-no-auto-grow>img{position:absolute;top:0;right:0;bottom:0;left:0;height:100%;width:100%;-o-object-position:left top;object-position:left top}gx-image:not(.gx-img-no-auto-grow)>img{width:var(--width);height:var(--height);margin-top:var(--margin-top, 0);margin-right:var(--margin-right, 0);margin-bottom:var(--margin-bottom, 0);margin-left:var(--margin-left, 0);max-height:calc( 100% - var(--margin-top, 0px) - var(--margin-bottom, 0px) );max-width:calc( 100% - var(--margin-right, 0px) - var(--margin-left, 0px) );-ms-flex:1;flex:1}gx-image.gx-img-lazyloading{overflow:hidden}gx-image>img{-webkit-box-shadow:0 calc(var(--elevation) * 0.125rem) calc(var(--elevation) * 0.25rem) rgba(0, 0, 0, calc(var(--elevation) * 0.075));box-shadow:0 calc(var(--elevation) * 0.125rem) calc(var(--elevation) * 0.25rem) rgba(0, 0, 0, calc(var(--elevation) * 0.075));-o-object-fit:var(--image-scale-type, contain);object-fit:var(--image-scale-type, contain)}gx-image .gx-image-tile{width:100% !important;height:100% !important;padding-left:100% !important;-webkit-box-sizing:border-box !important;box-sizing:border-box !important;display:inline-block !important;background-position:0 !important;background-repeat:repeat}gx-image .gx-lazyload:not([src]){visibility:hidden}gx-image .gx-lazyloading{display:none}gx-image .gx-lazyloading+span,gx-image .gx-lazyloading+span:after{border-radius:50%;width:2em;height:2em;display:var(--image-loading-indicator, inline-block)}gx-image .gx-lazyloading+span{font-size:10px;position:relative;text-indent:-9999em;border-top:0.3em solid rgba(0, 0, 0, 0.2);border-right:0.3em solid rgba(0, 0, 0, 0.2);border-bottom:0.3em solid rgba(0, 0, 0, 0.2);border-left:0.3em solid #aaa;-webkit-transform:translateZ(0);transform:translateZ(0);-webkit-animation:gx-image-loading 1.1s infinite linear;animation:gx-image-loading 1.1s infinite linear}gx-image .gx-lazyloaded+span{display:none}[align=center]>gx-image{justify-self:stretch;-ms-flex-pack:center;justify-content:center}[align=right]>gx-image{justify-self:stretch;-ms-flex-pack:end;justify-content:flex-end}[valign=middle]>gx-image{-ms-flex-item-align:stretch;align-self:stretch;-ms-flex-align:center;align-items:center}[valign=bottom]>gx-image{-ms-flex-item-align:stretch;align-self:stretch;-ms-flex-align:end;align-items:flex-end}[align=left][valign=top]>gx-image.gx-img-no-auto-grow img{-o-object-position:left top;object-position:left top}[align=left][valign=middle]>gx-image.gx-img-no-auto-grow img{-o-object-position:left center;object-position:left center}[align=left][valign=bottom]>gx-image.gx-img-no-auto-grow img{-o-object-position:left bottom;object-position:left bottom}[align=center][valign=top]>gx-image.gx-img-no-auto-grow img{-o-object-position:center top;object-position:center top}[align=center][valign=middle]>gx-image.gx-img-no-auto-grow img{-o-object-position:center center;object-position:center center}[align=center][valign=bottom]>gx-image.gx-img-no-auto-grow img{-o-object-position:center bottom;object-position:center bottom}[align=right][valign=top]>gx-image.gx-img-no-auto-grow img{-o-object-position:right top;object-position:right top}[align=right][valign=middle]>gx-image.gx-img-no-auto-grow img{-o-object-position:right center;object-position:right center}[align=right][valign=bottom]>gx-image.gx-img-no-auto-grow img{-o-object-position:right bottom;object-position:right bottom}@-webkit-keyframes gx-image-loading{0%{-webkit-transform:rotate(0deg);transform:rotate(0deg)}100%{-webkit-transform:rotate(360deg);transform:rotate(360deg)}}@keyframes gx-image-loading{0%{-webkit-transform:rotate(0deg);transform:rotate(0deg)}100%{-webkit-transform:rotate(360deg);transform:rotate(360deg)}}";
const LAZY_LOAD_CLASS = "gx-lazyload";
const LAZY_LOADING_CLASS = "gx-lazyloading";
const LAZY_LOADED_CLASS = "gx-lazyloaded";
const lazyLoadedImages = new Set();
const Image = class {
  constructor(hostRef) {
    (0,_index_10623738_js__WEBPACK_IMPORTED_MODULE_1__.r)(this, hostRef);
    /**
     * This attribute lets you specify the alternative text.
     */

    this.alt = "";
    /**
     * If true, the component will be sized to match the image's intrinsic size when not constrained
     * via CSS dimension properties (for example, height or width).
     * If false, the component will never force its height to match the image's intrinsic size. The width, however,
     * will match the intrinsic width. In GeneXus terms, it will auto grow horizontally, but not vertically.
     */

    this.autoGrow = true;
    /**
     * This attribute lets you specify if the element is disabled.
     * If disabled, it will not fire any user interaction related event
     * (for example, click event).
     */

    this.disabled = false;
    /**
     * This attribute lets you specify how this element will behave when hidden.
     *
     * | Value        | Details                                                                     |
     * | ------------ | --------------------------------------------------------------------------- |
     * | `keep-space` | The element remains in the document flow, and it does occupy space.         |
     * | `collapse`   | The element is removed form the document flow, and it doesn't occupy space. |
     */

    this.invisibleMode = "collapse";
    /**
     * True to lazy load the image, when it enters the viewport.
     */

    this.lazyLoad = true;
    /**
     * This attribute lets you specify the low resolution image SRC.
     */

    this.lowResolutionSrc = "";
    /**
     * This attribute lets you specify the SRC.
     */

    this.src = "";
    /**
     * True to highlight control when an action is fired.
     */

    this.highlightable = false;
    (0,_css_variables_watcher_cf910941_js__WEBPACK_IMPORTED_MODULE_4__.c)(this, [{
      cssVariableName: "--image-scale-type",
      propertyName: "scaleType"
    }, {
      cssVariableName: "--height",
      propertyName: "height"
    }, {
      cssVariableName: "--width",
      propertyName: "width"
    }]);
    this.handleClick = this.handleClick.bind(this);
    this.handleImageLoad = this.handleImageLoad.bind(this);
    this.handleLazyLoaded = this.handleLazyLoaded.bind(this);
    document.addEventListener("lazyloaded", this.handleLazyLoaded);
  }

  handleClick(event) {
    if (this.disabled) {
      event.stopPropagation();
      return;
    }
  }

  handleImageLoad(event) {
    if (!this.autoGrow) {
      const img = event.target; // Some image formats do not specify intrinsic dimensions. The naturalWidth property returns 0 in those cases.

      if (img.naturalWidth !== 0) {
        if (this.element.clientWidth > 0) {
          if (img.naturalWidth > this.element.clientWidth) {
            this.width = `${this.element.clientWidth}px`;
          } else {
            this.width = null;
          }
        } else {
          this.width = `${img.naturalWidth}px`;
        }
      }
    }
  }

  componentDidLoad() {
    (0,_highlightable_e5a00dd1_js__WEBPACK_IMPORTED_MODULE_3__.m)(this);
  }

  disconnectedCallback() {
    document.removeEventListener("lazyloaded", this.handleLazyLoaded);
  }

  render() {
    const shouldLazyLoad = this.shouldLazyLoad();
    const isHeightSpecified = !!this.height;
    const isWidthSpecified = !!this.width;
    const body = this.src ? [(0,_index_10623738_js__WEBPACK_IMPORTED_MODULE_1__.h)("img", {
      class: {
        [LAZY_LOAD_CLASS]: shouldLazyLoad,
        "gx-image-tile": this.scaleType === "tile"
      },
      style: this.getInnerImageStyle(isWidthSpecified, isHeightSpecified),
      onClick: this.handleClick,
      onLoad: this.handleImageLoad,
      "data-src": shouldLazyLoad ? this.src : undefined,
      src: !shouldLazyLoad ? this.src : undefined,
      alt: this.alt
    }), (0,_index_10623738_js__WEBPACK_IMPORTED_MODULE_1__.h)("span", null)] : [];
    return (0,_index_10623738_js__WEBPACK_IMPORTED_MODULE_1__.h)(_index_10623738_js__WEBPACK_IMPORTED_MODULE_1__.H, {
      class: {
        "gx-img-lazyloading": shouldLazyLoad,
        "gx-img-no-auto-grow": !this.autoGrow
      },
      style: {
        alignSelf: isHeightSpecified ? "unset" : null,
        justifySelf: isWidthSpecified ? "unset" : null,
        height: isHeightSpecified ? `calc(${this.height} + var(--margin-top, 0px) + var(--margin-bottom, 0px))` : null,
        width: isWidthSpecified ? `calc(${this.width} + var(--margin-left, 0px) + var(--margin-right, 0px))` : null
      }
    }, body);
  }

  getInnerImageStyle(isWidthSpecified, isHeightSpecified) {
    const scaleType = this.scaleType === "tile" ? {
      backgroundImage: `url(${this.src})`
    } : {
      objectFit: this.scaleType
    };
    const dimensions = this.autoGrow ? {} : {
      width: isWidthSpecified ? this.width : undefined,
      height: isHeightSpecified ? this.height : undefined,
      left: isWidthSpecified ? `calc(50% - ((${this.width} - var(--margin-left, 0px) - var(--margin-right, 0px)) / 2))` : undefined,
      top: isHeightSpecified ? `calc(50% - ((${this.height} - var(--margin-top, 0px) - var(--margin-bottom, 0px)) / 2))` : undefined
    };
    return Object.assign(Object.assign({}, scaleType), dimensions);
  }

  shouldLazyLoad() {
    if (!this.lazyLoad) {
      return false;
    }

    if (lazyLoadedImages.has(this.src)) {
      return false;
    }

    const img = this.element.querySelector("img");
    return img === null || img.classList.contains(LAZY_LOAD_CLASS);
  }

  handleLazyLoaded(event) {
    const img = this.element.querySelector("img");

    if (event.target === img) {
      this.element.classList.remove("gx-img-lazyloading");
      lazyLoadedImages.add(this.src);
    }
  }

  get element() {
    return (0,_index_10623738_js__WEBPACK_IMPORTED_MODULE_1__.g)(this);
  }

};
lazysizes.cfg.lazyClass = LAZY_LOAD_CLASS;
lazysizes.cfg.loadingClass = LAZY_LOADING_CLASS;
lazysizes.cfg.loadedClass = LAZY_LOADED_CLASS;
Image.style = imageCss;
const layoutCss = "gx-layout{--gx-layout-vertical-target-width:auto;--gx-layout-horizontal-target-height:auto;--gx-layout-mask-background-color:#575965;--gx-layout-mask-opacity:0.5;--gx-layout-target-transition-duration:0.3s;--gx-layout-target-transition-timing-function:ease-in-out;--gx-layout-base-z-index:100;--gx-layout-vertical-targets-breakpoint:1200px;display:grid;margin:0 auto;position:relative;overflow:hidden;grid-template-columns:var(--gx-layout-vertical-target-width) 1fr var(--gx-layout-vertical-target-width);grid-template-rows:var(--gx-layout-horizontal-target-height) 1fr var(--gx-layout-horizontal-target-height);grid-column-gap:0;grid-row-gap:0}gx-layout>.target{display:-ms-flexbox;display:flex;-ms-flex-pack:stretch;justify-content:stretch;-ms-flex-align:stretch;align-items:stretch;-ms-flex-direction:column;flex-direction:column}gx-layout>.target[hidden]{display:none !important}gx-layout>.top{grid-area:1/1/2/4;-ms-flex-direction:row;flex-direction:row}gx-layout>.bottom{grid-area:3/1/4/4;-ms-flex-direction:row;flex-direction:row}gx-layout>.left{grid-area:2/1/3/2}@media screen and (max-width: 1200px){gx-layout>.left{-webkit-transform:translateX(0);transform:translateX(0)}gx-layout>.left[hidden]{-webkit-transform:translateX(-100%);transform:translateX(-100%)}}gx-layout>.center{grid-area:2/2/3/3;position:relative}gx-layout>.center>.mask{display:none;position:absolute;top:0;right:0;bottom:0;left:0;background-color:var(--gx-layout-mask-background-color);opacity:var(--gx-layout-mask-opacity);z-index:calc(var(--gx-layout-base-z-index) + 1)}@media screen and (max-width: 1200px){gx-layout>.center>.mask--active{display:block}}gx-layout>.right{grid-area:2/3/3/4}@media screen and (max-width: 1200px){gx-layout>.right{-webkit-transform:translateX(-100%);transform:translateX(-100%)}gx-layout>.right[hidden]{-webkit-transform:translateX(0%);transform:translateX(0%)}}gx-layout>.vertical{display:-ms-flexbox;display:flex}@media screen and (max-width: 1200px){gx-layout>.vertical{position:absolute;z-index:calc(var(--gx-layout-base-z-index) + 2);bottom:0;top:0;-webkit-transition-property:-webkit-transform;transition-property:-webkit-transform;transition-property:transform;transition-property:transform, -webkit-transform;-webkit-transition-duration:var(--gx-layout-target-transition-duration);transition-duration:var(--gx-layout-target-transition-duration);-webkit-transition-timing-function:var(--gx-layout-target-transition-timing-function);transition-timing-function:var(--gx-layout-target-transition-timing-function)}gx-layout>.vertical[hidden]{display:-ms-flexbox !important;display:flex !important}}";
const Layout = class {
  constructor(hostRef) {
    (0,_index_10623738_js__WEBPACK_IMPORTED_MODULE_1__.r)(this, hostRef);
    this.leftHiddenChange = (0,_index_10623738_js__WEBPACK_IMPORTED_MODULE_1__.c)(this, "leftHiddenChange", 7);
    this.rightHiddenChange = (0,_index_10623738_js__WEBPACK_IMPORTED_MODULE_1__.c)(this, "rightHiddenChange", 7);
    this.verticalTargetsBreakpointMatchChange = (0,_index_10623738_js__WEBPACK_IMPORTED_MODULE_1__.c)(this, "verticalTargetsBreakpointMatchChange", 7);
    /**
     * True to hide the top target
     */

    this.topHidden = false;
    /**
     * True to hide the right target
     */

    this.rightHidden = false;
    /**
     * True to hide the bottom target
     */

    this.bottomHidden = false;
    /**
     * True to hide the left target
     */

    this.leftHidden = false;
    this.isMaskVisible = !this.rightHidden || !this.leftHidden;
    this.isVerticalTargetsBreakpoint = false;
    this.handleBodyClick = this.handleBodyClick.bind(this);
    this.handleMediaQueryChange = this.handleMediaQueryChange.bind(this);
  }

  handleRightHiddenChange() {
    this.updateMaskVisibility();
    this.rightHiddenChange.emit(this.rightHidden);
  }

  handleLeftHiddenChange() {
    this.updateMaskVisibility();
    this.leftHiddenChange.emit(this.leftHidden);
  }

  updateMaskVisibility() {
    this.isMaskVisible = !this.rightHidden || !this.leftHidden;
  }

  handleBodyClick(e) {
    if (this.isMaskVisible && this.isVerticalTargetsBreakpoint) {
      const target = e.target;

      if (!target.matches(`gx-layout .vertical ${target.tagName}`)) {
        setTimeout(() => {
          this.rightHidden = true;
          this.leftHidden = true;
        }, 50);
      }
    }
  }

  componentDidLoad() {
    document.body.addEventListener("click", this.handleBodyClick, true);
    this.startMediaQueryMonitoring();
  }

  disconnectedCallback() {
    document.body.removeEventListener("click", this.handleBodyClick);
    this.endMediaQueryMonitoring();
  }

  startMediaQueryMonitoring() {
    const targetsBreakpoint = getComputedStyle(this.element).getPropertyValue("--gx-layout-vertical-targets-breakpoint");
    this.mediaQueryList = window.matchMedia(`(max-width: ${targetsBreakpoint})`);
    this.updateVerticalTargetsBreakpointStatus(this.mediaQueryList.matches);
    this.mediaQueryList.addEventListener("change", this.handleMediaQueryChange);
  }

  handleMediaQueryChange(event) {
    this.updateVerticalTargetsBreakpointStatus(event.matches);
  }

  updateVerticalTargetsBreakpointStatus(matches) {
    this.isVerticalTargetsBreakpoint = matches;
    this.verticalTargetsBreakpointMatchChange.emit({
      matches
    });
  }

  endMediaQueryMonitoring() {
    this.mediaQueryList.removeEventListener("change", this.handleMediaQueryChange);
  }

  render() {
    return (0,_index_10623738_js__WEBPACK_IMPORTED_MODULE_1__.h)(_index_10623738_js__WEBPACK_IMPORTED_MODULE_1__.H, null, (0,_index_10623738_js__WEBPACK_IMPORTED_MODULE_1__.h)("main", {
      class: "target center"
    }, (0,_index_10623738_js__WEBPACK_IMPORTED_MODULE_1__.h)("div", {
      class: {
        mask: true,
        "mask--active": this.isMaskVisible
      }
    }), (0,_index_10623738_js__WEBPACK_IMPORTED_MODULE_1__.h)("slot", null)), (0,_index_10623738_js__WEBPACK_IMPORTED_MODULE_1__.h)("header", {
      class: "target top",
      hidden: this.topHidden
    }, (0,_index_10623738_js__WEBPACK_IMPORTED_MODULE_1__.h)("slot", {
      name: "top"
    })), (0,_index_10623738_js__WEBPACK_IMPORTED_MODULE_1__.h)("aside", {
      class: "target vertical left",
      hidden: this.leftHidden
    }, (0,_index_10623738_js__WEBPACK_IMPORTED_MODULE_1__.h)("slot", {
      name: "left"
    })), (0,_index_10623738_js__WEBPACK_IMPORTED_MODULE_1__.h)("aside", {
      class: "target vertical right",
      hidden: this.rightHidden
    }, (0,_index_10623738_js__WEBPACK_IMPORTED_MODULE_1__.h)("slot", {
      name: "right"
    })), (0,_index_10623738_js__WEBPACK_IMPORTED_MODULE_1__.h)("footer", {
      class: "target bottom",
      hidden: this.bottomHidden
    }, (0,_index_10623738_js__WEBPACK_IMPORTED_MODULE_1__.h)("slot", {
      name: "bottom"
    })));
  }

  get element() {
    return (0,_index_10623738_js__WEBPACK_IMPORTED_MODULE_1__.g)(this);
  }

  static get watchers() {
    return {
      "rightHidden": ["handleRightHiddenChange"],
      "leftHidden": ["handleLeftHiddenChange"]
    };
  }

};
Layout.style = layoutCss;
const TYPE_TO_CLASS_MAPPING = {
  error: "alert-danger",
  info: "alert-info",
  warning: "alert-warning"
};
const DEFAULT_SHOW_WAIT = 100;

class MessageRender {
  constructor(component) {
    this.component = component;
    this.dismissing = false;
    this.transitionEnd = this.transitionEnd.bind(this);
    this.dismiss = this.dismiss.bind(this);
  }

  wrapperClass() {
    const typeClass = TYPE_TO_CLASS_MAPPING[this.component.type] || "alert-info";
    return {
      alert: true,
      [`${typeClass}`]: true,
      "alert-dismissible": this.component.showCloseButton,
      fade: true
    };
  }

  dismiss() {
    if (!this.dismissing) {
      this.dismissing = true;
      this.component.element.querySelector(".alert").classList.remove("show");
    }
  }

  transitionEnd() {
    if (this.dismissing) {
      const message = this.component;

      if (message.element !== undefined) {
        message.element.parentNode.removeChild(message.element);
      }
    }
  }

  componentDidLoad() {
    const message = this.component;
    const anchors = message.element.querySelectorAll("a");
    Array.from(anchors).forEach(a => a.classList.add("alert-link"));
    setTimeout(() => {
      message.element.querySelector(".alert").classList.add("show");

      if (message.duration > 0) {
        setTimeout(() => {
          this.dismiss();
        }, message.duration);
      }
    }, DEFAULT_SHOW_WAIT);
  }

  render(slots) {
    const message = this.component;
    return [(0,_index_10623738_js__WEBPACK_IMPORTED_MODULE_1__.h)("gx-bootstrap", null), (0,_index_10623738_js__WEBPACK_IMPORTED_MODULE_1__.h)("div", {
      class: this.wrapperClass(),
      role: "alert",
      onTransitionEnd: this.transitionEnd
    }, slots.default, message.showCloseButton ? (0,_index_10623738_js__WEBPACK_IMPORTED_MODULE_1__.h)("button", {
      type: "button",
      class: "close",
      "aria-label": message.closeButtonText,
      onClick: this.dismiss
    }, (0,_index_10623738_js__WEBPACK_IMPORTED_MODULE_1__.h)("span", {
      "aria-hidden": "true"
    }, "\u00D7")) : null)];
  }

}

const messageCss = ".gx-line-clamp{display:-webkit-box;-webkit-box-orient:vertical;-webkit-line-clamp:var(--max-lines);overflow:hidden}.line-measuring{visibility:hidden;position:absolute}gx-message{display:block;--gx-message-info-color:#0c5460;--gx-message-info-background-color:#d1ecf1;--gx-message-warning-color:#856404;--gx-message-warning-background-color:#fff3cd;--gx-message-error-color:#721c24;--gx-message-error-background-color:#f8d7da}gx-message[hidden]{display:none !important}gx-message[hidden][invisible-mode=keep-space]{display:block !important;visibility:hidden}gx-message .alert-info{color:var(--gx-message-info-color);background-color:var(--gx-message-info-background-color);border-color:var(--gx-message-info-background-color)}gx-message .alert-warning{color:var(--gx-message-warning-color);background-color:var(--gx-message-warning-background-color);border-color:var(--gx-message-warning-background-color)}gx-message .alert-danger{color:var(--gx-message-error-color);background-color:var(--gx-message-error-background-color);border-color:var(--gx-message-error-background-color)}";
const Message = class {
  constructor(hostRef) {
    (0,_index_10623738_js__WEBPACK_IMPORTED_MODULE_1__.r)(this, hostRef);
    /**
     * This attribute lets you specify how this element will behave when hidden.
     *
     * | Value        | Details                                                                     |
     * | ------------ | --------------------------------------------------------------------------- |
     * | `keep-space` | The element remains in the document flow, and it does occupy space.         |
     * | `collapse`   | The element is removed form the document flow, and it doesn't occupy space. |
     */

    this.invisibleMode = "collapse";
    this.renderer = new MessageRender(this);
  }

  componentDidLoad() {
    this.renderer.componentDidLoad();
  }

  render() {
    return (0,_index_10623738_js__WEBPACK_IMPORTED_MODULE_1__.h)(_index_10623738_js__WEBPACK_IMPORTED_MODULE_1__.H, null, this.renderer.render({
      default: (0,_index_10623738_js__WEBPACK_IMPORTED_MODULE_1__.h)("slot", null)
    }));
  }

  get element() {
    return (0,_index_10623738_js__WEBPACK_IMPORTED_MODULE_1__.g)(this);
  }

};
Message.style = messageCss;
var bootstrapNativeV4 = (0,_commonjsHelpers_7b8ed50b_js__WEBPACK_IMPORTED_MODULE_7__.c)(function (module) {
  // Native Javascript for Bootstrap 4 v2.0.27 | © dnp_theme | MIT-License
  (function (root, factory) {
    if (module.exports) {
      // CommonJS-like:
      module.exports = factory();
    } else {
      // Browser globals (root is window)
      var bsn = factory();
      root.Alert = bsn.Alert;
      root.Button = bsn.Button;
      root.Carousel = bsn.Carousel;
      root.Collapse = bsn.Collapse;
      root.Dropdown = bsn.Dropdown;
      root.Modal = bsn.Modal;
      root.Popover = bsn.Popover;
      root.ScrollSpy = bsn.ScrollSpy;
      root.Tab = bsn.Tab;
      root.Toast = bsn.Toast;
      root.Tooltip = bsn.Tooltip;
    }
  })(_commonjsHelpers_7b8ed50b_js__WEBPACK_IMPORTED_MODULE_7__.a, function () {
    // globals
    var globalObject = typeof _commonjsHelpers_7b8ed50b_js__WEBPACK_IMPORTED_MODULE_7__.a !== 'undefined' ? _commonjsHelpers_7b8ed50b_js__WEBPACK_IMPORTED_MODULE_7__.a : this || window,
        DOC = document,
        HTML = DOC.documentElement,
        body = 'body',
        // allow the library to be used in <head>
    // Native Javascript for Bootstrap Global Object
    BSN = globalObject.BSN = {},
        supports = BSN.supports = [],
        // function toggle attributes
    dataToggle = 'data-toggle',
        dataDismiss = 'data-dismiss',
        dataSpy = 'data-spy',
        dataRide = 'data-ride',
        // components
    stringAlert = 'Alert',
        stringButton = 'Button',
        stringCarousel = 'Carousel',
        stringCollapse = 'Collapse',
        stringDropdown = 'Dropdown',
        stringModal = 'Modal',
        stringPopover = 'Popover',
        stringScrollSpy = 'ScrollSpy',
        stringTab = 'Tab',
        stringTooltip = 'Tooltip',
        stringToast = 'Toast',
        // options DATA API
    dataAutohide = 'data-autohide',
        databackdrop = 'data-backdrop',
        dataKeyboard = 'data-keyboard',
        dataTarget = 'data-target',
        dataInterval = 'data-interval',
        dataHeight = 'data-height',
        dataPause = 'data-pause',
        dataTitle = 'data-title',
        dataOriginalTitle = 'data-original-title',
        dataDismissible = 'data-dismissible',
        dataTrigger = 'data-trigger',
        dataAnimation = 'data-animation',
        dataContainer = 'data-container',
        dataPlacement = 'data-placement',
        dataDelay = 'data-delay',
        // option keys
    backdrop = 'backdrop',
        keyboard = 'keyboard',
        delay = 'delay',
        content = 'content',
        target = 'target',
        currentTarget = 'currentTarget',
        interval = 'interval',
        pause = 'pause',
        animation = 'animation',
        placement = 'placement',
        container = 'container',
        // box model
    offsetTop = 'offsetTop',
        offsetLeft = 'offsetLeft',
        scrollTop = 'scrollTop',
        scrollLeft = 'scrollLeft',
        clientWidth = 'clientWidth',
        clientHeight = 'clientHeight',
        offsetWidth = 'offsetWidth',
        offsetHeight = 'offsetHeight',
        innerWidth = 'innerWidth',
        innerHeight = 'innerHeight',
        scrollHeight = 'scrollHeight',
        height = 'height',
        // aria
    ariaExpanded = 'aria-expanded',
        ariaHidden = 'aria-hidden',
        ariaSelected = 'aria-selected',
        // event names
    clickEvent = 'click',
        focusEvent = 'focus',
        hoverEvent = 'hover',
        keydownEvent = 'keydown',
        keyupEvent = 'keyup',
        resizeEvent = 'resize',
        // passive
    scrollEvent = 'scroll',
        // passive
    mouseHover = 'onmouseleave' in DOC ? ['mouseenter', 'mouseleave'] : ['mouseover', 'mouseout'],
        // touch since 2.0.26
    touchEvents = {
      start: 'touchstart',
      end: 'touchend',
      move: 'touchmove'
    },
        // passive
    // originalEvents
    showEvent = 'show',
        shownEvent = 'shown',
        hideEvent = 'hide',
        hiddenEvent = 'hidden',
        closeEvent = 'close',
        closedEvent = 'closed',
        slidEvent = 'slid',
        slideEvent = 'slide',
        changeEvent = 'change',
        // other
    getAttribute = 'getAttribute',
        setAttribute = 'setAttribute',
        hasAttribute = 'hasAttribute',
        createElement = 'createElement',
        appendChild = 'appendChild',
        innerHTML = 'innerHTML',
        getElementsByTagName = 'getElementsByTagName',
        preventDefault = 'preventDefault',
        getBoundingClientRect = 'getBoundingClientRect',
        querySelectorAll = 'querySelectorAll',
        getElementsByCLASSNAME = 'getElementsByClassName',
        getComputedStyle = 'getComputedStyle',
        indexOf = 'indexOf',
        parentNode = 'parentNode',
        length = 'length',
        toLowerCase = 'toLowerCase',
        Transition = 'Transition',
        Duration = 'Duration',
        Webkit = 'Webkit',
        style = 'style',
        push = 'push',
        tabindex = 'tabindex',
        contains = 'contains',
        active = 'active',
        showClass = 'show',
        collapsing = 'collapsing',
        left = 'left',
        right = 'right',
        top = 'top',
        bottom = 'bottom',
        // tooltip / popover
    tipPositions = /\b(top|bottom|left|right)+/,
        // modal
    modalOverlay = 0,
        fixedTop = 'fixed-top',
        fixedBottom = 'fixed-bottom',
        // transitionEnd since 2.0.4
    supportTransitions = Webkit + Transition in HTML[style] || Transition[toLowerCase]() in HTML[style],
        transitionEndEvent = Webkit + Transition in HTML[style] ? Webkit[toLowerCase]() + Transition + 'End' : Transition[toLowerCase]() + 'end',
        transitionDuration = Webkit + Duration in HTML[style] ? Webkit[toLowerCase]() + Transition + Duration : Transition[toLowerCase]() + Duration,
        // set new focus element since 2.0.3
    setFocus = function (element) {
      element.focus ? element.focus() : element.setActive();
    },
        // class manipulation, since 2.0.0 requires polyfill.js
    addClass = function (element, classNAME) {
      element.classList.add(classNAME);
    },
        removeClass = function (element, classNAME) {
      element.classList.remove(classNAME);
    },
        hasClass = function (element, classNAME) {
      // since 2.0.0
      return element.classList[contains](classNAME);
    },
        // selection methods
    getElementsByClassName = function (element, classNAME) {
      // returns Array
      return [].slice.call(element[getElementsByCLASSNAME](classNAME));
    },
        queryElement = function (selector, parent) {
      var lookUp = parent ? parent : DOC;
      return typeof selector === 'object' ? selector : lookUp.querySelector(selector);
    },
        getClosest = function (element, selector) {
      //element is the element and selector is for the closest parent element to find
      // source http://gomakethings.com/climbing-up-and-down-the-dom-tree-with-vanilla-javascript/
      var firstChar = selector.charAt(0),
          selectorSubstring = selector.substr(1);

      if (firstChar === '.') {
        // If selector is a class
        for (; element && element !== DOC; element = element[parentNode]) {
          // Get closest match
          if (queryElement(selector, element[parentNode]) !== null && hasClass(element, selectorSubstring)) {
            return element;
          }
        }
      } else if (firstChar === '#') {
        // If selector is an ID
        for (; element && element !== DOC; element = element[parentNode]) {
          // Get closest match
          if (element.id === selectorSubstring) {
            return element;
          }
        }
      }

      return false;
    },
        // event attach jQuery style / trigger  since 1.2.0
    on = function (element, event, handler, options) {
      options = options || false;
      element.addEventListener(event, handler, options);
    },
        off = function (element, event, handler, options) {
      options = options || false;
      element.removeEventListener(event, handler, options);
    },
        one = function (element, event, handler, options) {
      // one since 2.0.4
      on(element, event, function handlerWrapper(e) {
        handler(e);
        off(element, event, handlerWrapper, options);
      }, options);
    },
        // determine support for passive events
    supportPassive = function () {
      // Test via a getter in the options object to see if the passive property is accessed
      var result = false;

      try {
        var opts = Object.defineProperty({}, 'passive', {
          get: function () {
            result = true;
          }
        });
        one(globalObject, 'testPassive', null, opts);
      } catch (e) {}

      return result;
    }(),
        // event options
    // https://github.com/WICG/EventListenerOptions/blob/gh-pages/explainer.md#feature-detection
    passiveHandler = supportPassive ? {
      passive: true
    } : false,
        // transitions
    getTransitionDurationFromElement = function (element) {
      var duration = supportTransitions ? globalObject[getComputedStyle](element)[transitionDuration] : 0;
      duration = parseFloat(duration);
      duration = typeof duration === 'number' && !isNaN(duration) ? duration * 1000 : 0;
      return duration; // we take a short offset to make sure we fire on the next frame after animation
    },
        emulateTransitionEnd = function (element, handler) {
      // emulateTransitionEnd since 2.0.4
      var called = 0,
          duration = getTransitionDurationFromElement(element);
      duration ? one(element, transitionEndEvent, function (e) {
        !called && handler(e), called = 1;
      }) : setTimeout(function () {
        !called && handler(), called = 1;
      }, 17);
    },
        bootstrapCustomEvent = function (eventName, componentName, related) {
      var OriginalCustomEvent = new CustomEvent(eventName + '.bs.' + componentName);
      OriginalCustomEvent.relatedTarget = related;
      this.dispatchEvent(OriginalCustomEvent);
    },
        // tooltip / popover stuff
    getScroll = function () {
      // also Affix and ScrollSpy uses it
      return {
        y: globalObject.pageYOffset || HTML[scrollTop],
        x: globalObject.pageXOffset || HTML[scrollLeft]
      };
    },
        styleTip = function (link, element, position, parent) {
      // both popovers and tooltips (target,tooltip,placement,elementToAppendTo)
      var elementDimensions = {
        w: element[offsetWidth],
        h: element[offsetHeight]
      },
          windowWidth = HTML[clientWidth] || DOC[body][clientWidth],
          windowHeight = HTML[clientHeight] || DOC[body][clientHeight],
          rect = link[getBoundingClientRect](),
          scroll = parent === DOC[body] ? getScroll() : {
        x: parent[offsetLeft] + parent[scrollLeft],
        y: parent[offsetTop] + parent[scrollTop]
      },
          linkDimensions = {
        w: rect[right] - rect[left],
        h: rect[bottom] - rect[top]
      },
          isPopover = hasClass(element, 'popover'),
          topPosition,
          leftPosition,
          arrow = queryElement('.arrow', element),
          arrowTop,
          arrowLeft,
          arrowWidth,
          arrowHeight,
          halfTopExceed = rect[top] + linkDimensions.h / 2 - elementDimensions.h / 2 < 0,
          halfLeftExceed = rect[left] + linkDimensions.w / 2 - elementDimensions.w / 2 < 0,
          halfRightExceed = rect[left] + elementDimensions.w / 2 + linkDimensions.w / 2 >= windowWidth,
          halfBottomExceed = rect[top] + elementDimensions.h / 2 + linkDimensions.h / 2 >= windowHeight,
          topExceed = rect[top] - elementDimensions.h < 0,
          leftExceed = rect[left] - elementDimensions.w < 0,
          bottomExceed = rect[top] + elementDimensions.h + linkDimensions.h >= windowHeight,
          rightExceed = rect[left] + elementDimensions.w + linkDimensions.w >= windowWidth; // recompute position

      position = (position === left || position === right) && leftExceed && rightExceed ? top : position; // first, when both left and right limits are exceeded, we fall back to top|bottom

      position = position === top && topExceed ? bottom : position;
      position = position === bottom && bottomExceed ? top : position;
      position = position === left && leftExceed ? right : position;
      position = position === right && rightExceed ? left : position; // update tooltip/popover class

      element.className[indexOf](position) === -1 && (element.className = element.className.replace(tipPositions, position)); // we check the computed width & height and update here

      arrowWidth = arrow[offsetWidth];
      arrowHeight = arrow[offsetHeight]; // apply styling to tooltip or popover

      if (position === left || position === right) {
        // secondary|side positions
        if (position === left) {
          // LEFT
          leftPosition = rect[left] + scroll.x - elementDimensions.w - (isPopover ? arrowWidth : 0);
        } else {
          // RIGHT
          leftPosition = rect[left] + scroll.x + linkDimensions.w;
        } // adjust top and arrow


        if (halfTopExceed) {
          topPosition = rect[top] + scroll.y;
          arrowTop = linkDimensions.h / 2 - arrowWidth;
        } else if (halfBottomExceed) {
          topPosition = rect[top] + scroll.y - elementDimensions.h + linkDimensions.h;
          arrowTop = elementDimensions.h - linkDimensions.h / 2 - arrowWidth;
        } else {
          topPosition = rect[top] + scroll.y - elementDimensions.h / 2 + linkDimensions.h / 2;
          arrowTop = elementDimensions.h / 2 - (isPopover ? arrowHeight * 0.9 : arrowHeight / 2);
        }
      } else if (position === top || position === bottom) {
        // primary|vertical positions
        if (position === top) {
          // TOP
          topPosition = rect[top] + scroll.y - elementDimensions.h - (isPopover ? arrowHeight : 0);
        } else {
          // BOTTOM
          topPosition = rect[top] + scroll.y + linkDimensions.h;
        } // adjust left | right and also the arrow


        if (halfLeftExceed) {
          leftPosition = 0;
          arrowLeft = rect[left] + linkDimensions.w / 2 - arrowWidth;
        } else if (halfRightExceed) {
          leftPosition = windowWidth - elementDimensions.w * 1.01;
          arrowLeft = elementDimensions.w - (windowWidth - rect[left]) + linkDimensions.w / 2 - arrowWidth / 2;
        } else {
          leftPosition = rect[left] + scroll.x - elementDimensions.w / 2 + linkDimensions.w / 2;
          arrowLeft = elementDimensions.w / 2 - (isPopover ? arrowWidth : arrowWidth / 2);
        }
      } // apply style to tooltip/popover and its arrow


      element[style][top] = topPosition + 'px';
      element[style][left] = leftPosition + 'px';
      arrowTop && (arrow[style][top] = arrowTop + 'px');
      arrowLeft && (arrow[style][left] = arrowLeft + 'px');
    };

    BSN.version = '2.0.27';
    /* Native Javascript for Bootstrap 4 | Alert
    -------------------------------------------*/
    // ALERT DEFINITION
    // ================

    var Alert = function (element) {
      // initialization element
      element = queryElement(element); // bind, target alert, duration and stuff

      var self = this,
          component = 'alert',
          alert = getClosest(element, '.' + component),
          triggerHandler = function () {
        hasClass(alert, 'fade') ? emulateTransitionEnd(alert, transitionEndHandler) : transitionEndHandler();
      },
          // handlers
      clickHandler = function (e) {
        alert = getClosest(e[target], '.' + component);
        element = queryElement('[' + dataDismiss + '="' + component + '"]', alert);
        element && alert && (element === e[target] || element[contains](e[target])) && self.close();
      },
          transitionEndHandler = function () {
        bootstrapCustomEvent.call(alert, closedEvent, component);
        off(element, clickEvent, clickHandler); // detach it's listener

        alert[parentNode].removeChild(alert);
      }; // public method


      this.close = function () {
        if (alert && element && hasClass(alert, showClass)) {
          bootstrapCustomEvent.call(alert, closeEvent, component);
          removeClass(alert, showClass);
          alert && triggerHandler();
        }
      }; // init


      if (!(stringAlert in element)) {
        // prevent adding event handlers twice
        on(element, clickEvent, clickHandler);
      }

      element[stringAlert] = self;
    }; // ALERT DATA API
    // ==============


    supports[push]([stringAlert, Alert, '[' + dataDismiss + '="alert"]']);
    /* Native Javascript for Bootstrap 4 | Button
    ---------------------------------------------*/
    // BUTTON DEFINITION
    // ===================

    var Button = function (element) {
      // initialization element
      element = queryElement(element); // constant

      var toggled = false,
          // toggled makes sure to prevent triggering twice the change.bs.button events
      // strings
      component = 'button',
          checked = 'checked',
          LABEL = 'LABEL',
          INPUT = 'INPUT',
          // private methods
      keyHandler = function (e) {
        var key = e.which || e.keyCode;
        key === 32 && e[target] === DOC.activeElement && toggle(e);
      },
          preventScroll = function (e) {
        var key = e.which || e.keyCode;
        key === 32 && e[preventDefault]();
      },
          toggle = function (e) {
        var label = e[target].tagName === LABEL ? e[target] : e[target][parentNode].tagName === LABEL ? e[target][parentNode] : null; // the .btn label

        if (!label) return; //react if a label or its immediate child is clicked

        var labels = getElementsByClassName(label[parentNode], 'btn'),
            // all the button group buttons
        input = label[getElementsByTagName](INPUT)[0];
        if (!input) return; // return if no input found
        // manage the dom manipulation

        if (input.type === 'checkbox') {
          //checkboxes
          if (!input[checked]) {
            addClass(label, active);
            input[getAttribute](checked);
            input[setAttribute](checked, checked);
            input[checked] = true;
          } else {
            removeClass(label, active);
            input[getAttribute](checked);
            input.removeAttribute(checked);
            input[checked] = false;
          }

          if (!toggled) {
            // prevent triggering the event twice
            toggled = true;
            bootstrapCustomEvent.call(input, changeEvent, component); //trigger the change for the input

            bootstrapCustomEvent.call(element, changeEvent, component); //trigger the change for the btn-group
          }
        }

        if (input.type === 'radio' && !toggled) {
          // radio buttons
          // don't trigger if already active (the OR condition is a hack to check if the buttons were selected with key press and NOT mouse click)
          if (!input[checked] || e.screenX === 0 && e.screenY == 0) {
            addClass(label, active);
            addClass(label, focusEvent);
            input[setAttribute](checked, checked);
            input[checked] = true;
            bootstrapCustomEvent.call(input, changeEvent, component); //trigger the change for the input

            bootstrapCustomEvent.call(element, changeEvent, component); //trigger the change for the btn-group

            toggled = true;

            for (var i = 0, ll = labels[length]; i < ll; i++) {
              var otherLabel = labels[i],
                  otherInput = otherLabel[getElementsByTagName](INPUT)[0];

              if (otherLabel !== label && hasClass(otherLabel, active)) {
                removeClass(otherLabel, active);
                otherInput.removeAttribute(checked);
                otherInput[checked] = false;
                bootstrapCustomEvent.call(otherInput, changeEvent, component); // trigger the change
              }
            }
          }
        }

        setTimeout(function () {
          toggled = false;
        }, 50);
      },
          focusHandler = function (e) {
        addClass(e[target][parentNode], focusEvent);
      },
          blurHandler = function (e) {
        removeClass(e[target][parentNode], focusEvent);
      }; // init


      if (!(stringButton in element)) {
        // prevent adding event handlers twice
        on(element, clickEvent, toggle);
        on(element, keyupEvent, keyHandler), on(element, keydownEvent, preventScroll);
        var allBtns = getElementsByClassName(element, 'btn');

        for (var i = 0; i < allBtns.length; i++) {
          var input = allBtns[i][getElementsByTagName](INPUT)[0];
          on(input, focusEvent, focusHandler), on(input, 'blur', blurHandler);
        }
      } // activate items on load


      var labelsToACtivate = getElementsByClassName(element, 'btn'),
          lbll = labelsToACtivate[length];

      for (var i = 0; i < lbll; i++) {
        !hasClass(labelsToACtivate[i], active) && queryElement('input:checked', labelsToACtivate[i]) && addClass(labelsToACtivate[i], active);
      }

      element[stringButton] = this;
    }; // BUTTON DATA API
    // =================


    supports[push]([stringButton, Button, '[' + dataToggle + '="buttons"]']);
    /* Native Javascript for Bootstrap 4 | Carousel
    ----------------------------------------------*/
    // CAROUSEL DEFINITION
    // ===================

    var Carousel = function (element, options) {
      // initialization element
      element = queryElement(element); // set options

      options = options || {}; // DATA API

      var intervalAttribute = element[getAttribute](dataInterval),
          intervalOption = options[interval],
          intervalData = intervalAttribute === 'false' ? 0 : parseInt(intervalAttribute),
          pauseData = element[getAttribute](dataPause) === hoverEvent || false,
          keyboardData = element[getAttribute](dataKeyboard) === 'true' || false,
          // strings
      component = 'carousel',
          paused = 'paused',
          direction = 'direction',
          carouselItem = 'carousel-item',
          dataSlideTo = 'data-slide-to';
      this[keyboard] = options[keyboard] === true || keyboardData;
      this[pause] = options[pause] === hoverEvent || pauseData ? hoverEvent : false; // false / hover

      this[interval] = typeof intervalOption === 'number' ? intervalOption : intervalOption === false || intervalData === 0 || intervalData === false ? 0 : isNaN(intervalData) ? 5000 // bootstrap carousel default interval
      : intervalData; // bind, event targets

      var self = this,
          index = element.index = 0,
          timer = element.timer = 0,
          isSliding = false,
          // isSliding prevents click event handlers when animation is running
      isTouch = false,
          startXPosition = null,
          currentXPosition = null,
          endXPosition = null,
          // touch and event coordinates
      slides = getElementsByClassName(element, carouselItem),
          total = slides[length],
          slideDirection = this[direction] = left,
          leftArrow = getElementsByClassName(element, component + '-control-prev')[0],
          rightArrow = getElementsByClassName(element, component + '-control-next')[0],
          indicator = queryElement('.' + component + '-indicators', element),
          indicators = indicator && indicator[getElementsByTagName]("LI") || []; // invalidate when not enough items

      if (total < 2) {
        return;
      } // handlers


      var pauseHandler = function () {
        if (self[interval] !== false && !hasClass(element, paused)) {
          addClass(element, paused);
          !isSliding && (clearInterval(timer), timer = null);
        }
      },
          resumeHandler = function () {
        if (self[interval] !== false && hasClass(element, paused)) {
          removeClass(element, paused);
          !isSliding && (clearInterval(timer), timer = null);
          !isSliding && self.cycle();
        }
      },
          indicatorHandler = function (e) {
        e[preventDefault]();
        if (isSliding) return;
        var eventTarget = e[target]; // event target | the current active item

        if (eventTarget && !hasClass(eventTarget, active) && eventTarget[getAttribute](dataSlideTo)) {
          index = parseInt(eventTarget[getAttribute](dataSlideTo), 10);
        } else {
          return false;
        }

        self.slideTo(index); //Do the slide
      },
          controlsHandler = function (e) {
        e[preventDefault]();
        if (isSliding) return;
        var eventTarget = e.currentTarget || e.srcElement;

        if (eventTarget === rightArrow) {
          index++;
        } else if (eventTarget === leftArrow) {
          index--;
        }

        self.slideTo(index); //Do the slide
      },
          keyHandler = function (e) {
        if (isSliding) return;

        switch (e.which) {
          case 39:
            index++;
            break;

          case 37:
            index--;
            break;

          default:
            return;
        }

        self.slideTo(index); //Do the slide
      },
          // touch events
      toggleTouchEvents = function (toggle) {
        toggle(element, touchEvents.move, touchMoveHandler, passiveHandler);
        toggle(element, touchEvents.end, touchEndHandler, passiveHandler);
      },
          touchDownHandler = function (e) {
        if (isTouch) {
          return;
        }

        startXPosition = parseInt(e.touches[0].pageX);

        if (element.contains(e[target])) {
          isTouch = true;
          toggleTouchEvents(on);
        }
      },
          touchMoveHandler = function (e) {
        if (!isTouch) {
          e.preventDefault();
          return;
        }

        currentXPosition = parseInt(e.touches[0].pageX); //cancel touch if more than one touches detected

        if (e.type === 'touchmove' && e.touches[length] > 1) {
          e.preventDefault();
          return false;
        }
      },
          touchEndHandler = function (e) {
        if (!isTouch || isSliding) {
          return;
        }

        endXPosition = currentXPosition || parseInt(e.touches[0].pageX);

        if (isTouch) {
          if ((!element.contains(e[target]) || !element.contains(e.relatedTarget)) && Math.abs(startXPosition - endXPosition) < 75) {
            return false;
          } else {
            if (currentXPosition < startXPosition) {
              index++;
            } else if (currentXPosition > startXPosition) {
              index--;
            }

            isTouch = false;
            self.slideTo(index);
          }

          toggleTouchEvents(off);
        }
      },
          // private methods
      isElementInScrollRange = function () {
        var rect = element[getBoundingClientRect](),
            viewportHeight = globalObject[innerHeight] || HTML[clientHeight];
        return rect[top] <= viewportHeight && rect[bottom] >= 0; // bottom && top
      },
          setActivePage = function (pageIndex) {
        //indicators
        for (var i = 0, icl = indicators[length]; i < icl; i++) {
          removeClass(indicators[i], active);
        }

        if (indicators[pageIndex]) addClass(indicators[pageIndex], active);
      }; // public methods


      this.cycle = function () {
        if (timer) {
          clearInterval(timer);
          timer = null;
        }

        timer = setInterval(function () {
          isElementInScrollRange() && (index++, self.slideTo(index));
        }, this[interval]);
      };

      this.slideTo = function (next) {
        if (isSliding) return; // when controled via methods, make sure to check again      

        var activeItem = this.getActiveIndex(),
            // the current active
        orientation; // first return if we're on the same item #227

        if (activeItem === next) {
          return; // or determine slideDirection
        } else if (activeItem < next || activeItem === 0 && next === total - 1) {
          slideDirection = self[direction] = left; // next
        } else if (activeItem > next || activeItem === total - 1 && next === 0) {
          slideDirection = self[direction] = right; // prev
        } // find the right next index 


        if (next < 0) {
          next = total - 1;
        } else if (next >= total) {
          next = 0;
        } // update index


        index = next;
        orientation = slideDirection === left ? 'next' : 'prev'; //determine type

        bootstrapCustomEvent.call(element, slideEvent, component, slides[next]); // here we go with the slide

        isSliding = true;
        clearInterval(timer);
        timer = null;
        setActivePage(next);

        if (supportTransitions && hasClass(element, 'slide')) {
          addClass(slides[next], carouselItem + '-' + orientation);
          addClass(slides[next], carouselItem + '-' + slideDirection);
          addClass(slides[activeItem], carouselItem + '-' + slideDirection);
          emulateTransitionEnd(slides[next], function (e) {
            var timeout = e && e[target] !== slides[next] ? e.elapsedTime * 1000 + 100 : 20;
            isSliding && setTimeout(function () {
              isSliding = false;
              addClass(slides[next], active);
              removeClass(slides[activeItem], active);
              removeClass(slides[next], carouselItem + '-' + orientation);
              removeClass(slides[next], carouselItem + '-' + slideDirection);
              removeClass(slides[activeItem], carouselItem + '-' + slideDirection);
              bootstrapCustomEvent.call(element, slidEvent, component, slides[next]);

              if (!DOC.hidden && self[interval] && !hasClass(element, paused)) {
                self.cycle();
              }
            }, timeout);
          });
        } else {
          addClass(slides[next], active);
          removeClass(slides[activeItem], active);
          setTimeout(function () {
            isSliding = false;

            if (self[interval] && !hasClass(element, paused)) {
              self.cycle();
            }

            bootstrapCustomEvent.call(element, slidEvent, component, slides[next]);
          }, 100);
        }
      };

      this.getActiveIndex = function () {
        return slides[indexOf](getElementsByClassName(element, carouselItem + ' active')[0]) || 0;
      }; // init


      if (!(stringCarousel in element)) {
        // prevent adding event handlers twice
        if (self[pause] && self[interval]) {
          on(element, mouseHover[0], pauseHandler);
          on(element, mouseHover[1], resumeHandler);
          on(element, touchEvents.start, pauseHandler, passiveHandler);
          on(element, touchEvents.end, resumeHandler, passiveHandler);
        }

        slides[length] > 1 && on(element, touchEvents.start, touchDownHandler, passiveHandler);
        rightArrow && on(rightArrow, clickEvent, controlsHandler);
        leftArrow && on(leftArrow, clickEvent, controlsHandler);
        indicator && on(indicator, clickEvent, indicatorHandler);
        self[keyboard] && on(globalObject, keydownEvent, keyHandler);
      }

      if (self.getActiveIndex() < 0) {
        slides[length] && addClass(slides[0], active);
        indicators[length] && setActivePage(0);
      }

      if (self[interval]) {
        self.cycle();
      }

      element[stringCarousel] = self;
    }; // CAROUSEL DATA API
    // =================


    supports[push]([stringCarousel, Carousel, '[' + dataRide + '="carousel"]']);
    /* Native Javascript for Bootstrap 4 | Collapse
    -----------------------------------------------*/
    // COLLAPSE DEFINITION
    // ===================

    var Collapse = function (element, options) {
      // initialization element
      element = queryElement(element); // set options

      options = options || {}; // event targets and constants

      var accordion = null,
          collapse = null,
          self = this,
          accordionData = element[getAttribute]('data-parent'),
          activeCollapse,
          activeElement,
          // component strings
      component = 'collapse',
          collapsed = 'collapsed',
          isAnimating = 'isAnimating',
          // private methods
      openAction = function (collapseElement, toggle) {
        bootstrapCustomEvent.call(collapseElement, showEvent, component);
        collapseElement[isAnimating] = true;
        addClass(collapseElement, collapsing);
        removeClass(collapseElement, component);
        collapseElement[style][height] = collapseElement[scrollHeight] + 'px';
        emulateTransitionEnd(collapseElement, function () {
          collapseElement[isAnimating] = false;
          collapseElement[setAttribute](ariaExpanded, 'true');
          toggle[setAttribute](ariaExpanded, 'true');
          removeClass(collapseElement, collapsing);
          addClass(collapseElement, component);
          addClass(collapseElement, showClass);
          collapseElement[style][height] = '';
          bootstrapCustomEvent.call(collapseElement, shownEvent, component);
        });
      },
          closeAction = function (collapseElement, toggle) {
        bootstrapCustomEvent.call(collapseElement, hideEvent, component);
        collapseElement[isAnimating] = true;
        collapseElement[style][height] = collapseElement[scrollHeight] + 'px'; // set height first

        removeClass(collapseElement, component);
        removeClass(collapseElement, showClass);
        addClass(collapseElement, collapsing);
        collapseElement[style][height] = '0px';
        emulateTransitionEnd(collapseElement, function () {
          collapseElement[isAnimating] = false;
          collapseElement[setAttribute](ariaExpanded, 'false');
          toggle[setAttribute](ariaExpanded, 'false');
          removeClass(collapseElement, collapsing);
          addClass(collapseElement, component);
          collapseElement[style][height] = '';
          bootstrapCustomEvent.call(collapseElement, hiddenEvent, component);
        });
      },
          getTarget = function () {
        var href = element.href && element[getAttribute]('href'),
            parent = element[getAttribute](dataTarget),
            id = href || parent && parent.charAt(0) === '#' && parent;
        return id && queryElement(id);
      }; // public methods


      this.toggle = function (e) {
        e[preventDefault]();

        if (!hasClass(collapse, showClass)) {
          self.show();
        } else {
          self.hide();
        }
      };

      this.hide = function () {
        if (collapse[isAnimating]) return;
        closeAction(collapse, element);
        addClass(element, collapsed);
      };

      this.show = function () {
        if (accordion) {
          activeCollapse = queryElement('.' + component + '.' + showClass, accordion);
          activeElement = activeCollapse && (queryElement('[' + dataTarget + '="#' + activeCollapse.id + '"]', accordion) || queryElement('[href="#' + activeCollapse.id + '"]', accordion));
        }

        if (!collapse[isAnimating] || activeCollapse && !activeCollapse[isAnimating]) {
          if (activeElement && activeCollapse !== collapse) {
            closeAction(activeCollapse, activeElement);
            addClass(activeElement, collapsed);
          }

          openAction(collapse, element);
          removeClass(element, collapsed);
        }
      }; // init


      if (!(stringCollapse in element)) {
        // prevent adding event handlers twice
        on(element, clickEvent, self.toggle);
      }

      collapse = getTarget();
      collapse[isAnimating] = false; // when true it will prevent click handlers  

      accordion = queryElement(options.parent) || accordionData && getClosest(element, accordionData);
      element[stringCollapse] = self;
    }; // COLLAPSE DATA API
    // =================


    supports[push]([stringCollapse, Collapse, '[' + dataToggle + '="collapse"]']);
    /* Native Javascript for Bootstrap 4 | Dropdown
    ----------------------------------------------*/
    // DROPDOWN DEFINITION
    // ===================

    var Dropdown = function (element, option) {
      // initialization element
      element = queryElement(element); // set option

      this.persist = option === true || element[getAttribute]('data-persist') === 'true' || false; // constants, event targets, strings

      var self = this,
          children = 'children',
          parent = element[parentNode],
          component = 'dropdown',
          open = 'open',
          relatedTarget = null,
          menu = queryElement('.dropdown-menu', parent),
          menuItems = function () {
        var set = menu[children],
            newSet = [];

        for (var i = 0; i < set[length]; i++) {
          set[i][children][length] && set[i][children][0].tagName === 'A' && newSet[push](set[i][children][0]);
          set[i].tagName === 'A' && newSet[push](set[i]);
        }

        return newSet;
      }(),
          // preventDefault on empty anchor links
      preventEmptyAnchor = function (anchor) {
        (anchor.href && anchor.href.slice(-1) === '#' || anchor[parentNode] && anchor[parentNode].href && anchor[parentNode].href.slice(-1) === '#') && this[preventDefault]();
      },
          // toggle dismissible events
      toggleDismiss = function () {
        var type = element[open] ? on : off;
        type(DOC, clickEvent, dismissHandler);
        type(DOC, keydownEvent, preventScroll);
        type(DOC, keyupEvent, keyHandler);
        type(DOC, focusEvent, dismissHandler, true);
      },
          // handlers
      dismissHandler = function (e) {
        var eventTarget = e[target],
            hasData = eventTarget && (eventTarget[getAttribute](dataToggle) || eventTarget[parentNode] && getAttribute in eventTarget[parentNode] && eventTarget[parentNode][getAttribute](dataToggle));

        if (e.type === focusEvent && (eventTarget === element || eventTarget === menu || menu[contains](eventTarget))) {
          return;
        }

        if ((eventTarget === menu || menu[contains](eventTarget)) && (self.persist || hasData)) {
          return;
        } else {
          relatedTarget = eventTarget === element || element[contains](eventTarget) ? element : null;
          hide();
        }

        preventEmptyAnchor.call(e, eventTarget);
      },
          clickHandler = function (e) {
        relatedTarget = element;
        show();
        preventEmptyAnchor.call(e, e[target]);
      },
          preventScroll = function (e) {
        var key = e.which || e.keyCode;

        if (key === 38 || key === 40) {
          e[preventDefault]();
        }
      },
          keyHandler = function (e) {
        var key = e.which || e.keyCode,
            activeItem = DOC.activeElement,
            idx = menuItems[indexOf](activeItem),
            isSameElement = activeItem === element,
            isInsideMenu = menu[contains](activeItem),
            isMenuItem = activeItem[parentNode] === menu || activeItem[parentNode][parentNode] === menu;

        if (isMenuItem) {
          // navigate up | down
          idx = isSameElement ? 0 : key === 38 ? idx > 1 ? idx - 1 : 0 : key === 40 ? idx < menuItems[length] - 1 ? idx + 1 : idx : idx;
          menuItems[idx] && setFocus(menuItems[idx]);
        }

        if ((menuItems[length] && isMenuItem // menu has items
        || !menuItems[length] && (isInsideMenu || isSameElement) // menu might be a form
        || !isInsideMenu // or the focused element is not in the menu at all
        ) && element[open] && key === 27 // menu must be open
        ) {
          self.toggle();
          relatedTarget = null;
        }
      },
          // private methods
      show = function () {
        bootstrapCustomEvent.call(parent, showEvent, component, relatedTarget);
        addClass(menu, showClass);
        addClass(parent, showClass);
        element[setAttribute](ariaExpanded, true);
        bootstrapCustomEvent.call(parent, shownEvent, component, relatedTarget);
        element[open] = true;
        off(element, clickEvent, clickHandler);
        setTimeout(function () {
          setFocus(menu[getElementsByTagName]('INPUT')[0] || element); // focus the first input item | element

          toggleDismiss();
        }, 1);
      },
          hide = function () {
        bootstrapCustomEvent.call(parent, hideEvent, component, relatedTarget);
        removeClass(menu, showClass);
        removeClass(parent, showClass);
        element[setAttribute](ariaExpanded, false);
        bootstrapCustomEvent.call(parent, hiddenEvent, component, relatedTarget);
        element[open] = false;
        toggleDismiss();
        setFocus(element);
        setTimeout(function () {
          on(element, clickEvent, clickHandler);
        }, 1);
      }; // set initial state to closed


      element[open] = false; // public methods

      this.toggle = function () {
        if (hasClass(parent, showClass) && element[open]) {
          hide();
        } else {
          show();
        }
      }; // init


      if (!(stringDropdown in element)) {
        // prevent adding event handlers twice
        !tabindex in menu && menu[setAttribute](tabindex, '0'); // Fix onblur on Chrome | Safari

        on(element, clickEvent, clickHandler);
      }

      element[stringDropdown] = self;
    }; // DROPDOWN DATA API
    // =================


    supports[push]([stringDropdown, Dropdown, '[' + dataToggle + '="dropdown"]']);
    /* Native Javascript for Bootstrap 4 | Modal
    -------------------------------------------*/
    // MODAL DEFINITION
    // ===============

    var Modal = function (element, options) {
      // element can be the modal/triggering button
      // the modal (both JavaScript / DATA API init) / triggering button element (DATA API)
      element = queryElement(element); // strings

      var component = 'modal',
          staticString = 'static',
          modalTrigger = 'modalTrigger',
          paddingRight = 'paddingRight',
          modalBackdropString = 'modal-backdrop',
          isAnimating = 'isAnimating',
          // determine modal, triggering element
      btnCheck = element[getAttribute](dataTarget) || element[getAttribute]('href'),
          checkModal = queryElement(btnCheck),
          modal = hasClass(element, component) ? element : checkModal;

      if (hasClass(element, component)) {
        element = null;
      } // modal is now independent of it's triggering element


      if (!modal) {
        return;
      } // invalidate
      // set options


      options = options || {};
      this[keyboard] = options[keyboard] === false || modal[getAttribute](dataKeyboard) === 'false' ? false : true;
      this[backdrop] = options[backdrop] === staticString || modal[getAttribute](databackdrop) === staticString ? staticString : true;
      this[backdrop] = options[backdrop] === false || modal[getAttribute](databackdrop) === 'false' ? false : this[backdrop];
      this[animation] = hasClass(modal, 'fade') ? true : false;
      this[content] = options[content]; // JavaScript only
      // set an initial state of the modal

      modal[isAnimating] = false; // bind, constants, event targets and other vars

      var self = this,
          relatedTarget = null,
          bodyIsOverflowing,
          scrollBarWidth,
          overlay,
          overlayDelay,
          modalTimer,
          // also find fixed-top / fixed-bottom items
      fixedItems = getElementsByClassName(HTML, fixedTop).concat(getElementsByClassName(HTML, fixedBottom)),
          // private methods
      getWindowWidth = function () {
        var htmlRect = HTML[getBoundingClientRect]();
        return globalObject[innerWidth] || htmlRect[right] - Math.abs(htmlRect[left]);
      },
          setScrollbar = function () {
        var bodyStyle = globalObject[getComputedStyle](DOC[body]),
            bodyPad = parseInt(bodyStyle[paddingRight], 10),
            itemPad;

        if (bodyIsOverflowing) {
          DOC[body][style][paddingRight] = bodyPad + scrollBarWidth + 'px';
          modal[style][paddingRight] = scrollBarWidth + 'px';

          if (fixedItems[length]) {
            for (var i = 0; i < fixedItems[length]; i++) {
              itemPad = globalObject[getComputedStyle](fixedItems[i])[paddingRight];
              fixedItems[i][style][paddingRight] = parseInt(itemPad) + scrollBarWidth + 'px';
            }
          }
        }
      },
          resetScrollbar = function () {
        DOC[body][style][paddingRight] = '';
        modal[style][paddingRight] = '';

        if (fixedItems[length]) {
          for (var i = 0; i < fixedItems[length]; i++) {
            fixedItems[i][style][paddingRight] = '';
          }
        }
      },
          measureScrollbar = function () {
        // thx walsh
        var scrollDiv = DOC[createElement]('div'),
            widthValue;
        scrollDiv.className = component + '-scrollbar-measure'; // this is here to stay

        DOC[body][appendChild](scrollDiv);
        widthValue = scrollDiv[offsetWidth] - scrollDiv[clientWidth];
        DOC[body].removeChild(scrollDiv);
        return widthValue;
      },
          checkScrollbar = function () {
        bodyIsOverflowing = DOC[body][clientWidth] < getWindowWidth();
        scrollBarWidth = measureScrollbar();
      },
          createOverlay = function () {
        var newOverlay = DOC[createElement]('div');
        overlay = queryElement('.' + modalBackdropString);

        if (overlay === null) {
          newOverlay[setAttribute]('class', modalBackdropString + (self[animation] ? ' fade' : ''));
          overlay = newOverlay;
          DOC[body][appendChild](overlay);
        }

        modalOverlay = 1;
      },
          removeOverlay = function () {
        overlay = queryElement('.' + modalBackdropString);

        if (overlay && overlay !== null && typeof overlay === 'object') {
          modalOverlay = 0;
          DOC[body].removeChild(overlay);
          overlay = null;
        }
      },
          // triggers
      triggerShow = function () {
        setFocus(modal);
        modal[isAnimating] = false;
        bootstrapCustomEvent.call(modal, shownEvent, component, relatedTarget);
        on(globalObject, resizeEvent, self.update, passiveHandler);
        on(modal, clickEvent, dismissHandler);
        on(DOC, keydownEvent, keyHandler);
      },
          triggerHide = function () {
        modal[style].display = '';
        element && setFocus(element);
        bootstrapCustomEvent.call(modal, hiddenEvent, component);

        (function () {
          if (!getElementsByClassName(DOC, component + ' ' + showClass)[0]) {
            resetScrollbar();
            removeClass(DOC[body], component + '-open');
            overlay && hasClass(overlay, 'fade') ? (removeClass(overlay, showClass), emulateTransitionEnd(overlay, removeOverlay)) : removeOverlay();
            off(globalObject, resizeEvent, self.update, passiveHandler);
            off(modal, clickEvent, dismissHandler);
            off(DOC, keydownEvent, keyHandler);
          }
        })();

        modal[isAnimating] = false;
      },
          // handlers
      clickHandler = function (e) {
        if (modal[isAnimating]) return;
        var clickTarget = e[target];
        clickTarget = clickTarget[hasAttribute](dataTarget) || clickTarget[hasAttribute]('href') ? clickTarget : clickTarget[parentNode];

        if (clickTarget === element && !hasClass(modal, showClass)) {
          modal[modalTrigger] = element;
          relatedTarget = element;
          self.show();
          e[preventDefault]();
        }
      },
          keyHandler = function (e) {
        if (modal[isAnimating]) return;

        if (self[keyboard] && e.which == 27 && hasClass(modal, showClass)) {
          self.hide();
        }
      },
          dismissHandler = function (e) {
        if (modal[isAnimating]) return;
        var clickTarget = e[target];

        if (hasClass(modal, showClass) && (clickTarget[parentNode][getAttribute](dataDismiss) === component || clickTarget[getAttribute](dataDismiss) === component || clickTarget === modal && self[backdrop] !== staticString)) {
          self.hide();
          relatedTarget = null;
          e[preventDefault]();
        }
      }; // public methods


      this.toggle = function () {
        if (hasClass(modal, showClass)) {
          this.hide();
        } else {
          this.show();
        }
      };

      this.show = function () {
        if (hasClass(modal, showClass) || modal[isAnimating]) {
          return;
        }

        clearTimeout(modalTimer);
        modalTimer = setTimeout(function () {
          modal[isAnimating] = true;
          bootstrapCustomEvent.call(modal, showEvent, component, relatedTarget); // we elegantly hide any opened modal

          var currentOpen = getElementsByClassName(DOC, component + ' ' + showClass)[0];

          if (currentOpen && currentOpen !== modal) {
            modalTrigger in currentOpen && currentOpen[modalTrigger][stringModal].hide();
            stringModal in currentOpen && currentOpen[stringModal].hide();
          }

          if (self[backdrop]) {
            !modalOverlay && !overlay && createOverlay();
          }

          if (overlay && !hasClass(overlay, showClass)) {
            overlayDelay = getTransitionDurationFromElement(overlay);
            addClass(overlay, showClass);
          }

          setTimeout(function () {
            modal[style].display = 'block';
            checkScrollbar();
            setScrollbar();
            addClass(DOC[body], component + '-open');
            addClass(modal, showClass);
            modal[setAttribute](ariaHidden, false);
            hasClass(modal, 'fade') ? emulateTransitionEnd(modal, triggerShow) : triggerShow();
          }, supportTransitions && overlay && overlayDelay ? overlayDelay : 1);
        }, 1);
      };

      this.hide = function () {
        if (modal[isAnimating] || !hasClass(modal, showClass)) {
          return;
        }

        clearTimeout(modalTimer);
        modalTimer = setTimeout(function () {
          modal[isAnimating] = true;
          bootstrapCustomEvent.call(modal, hideEvent, component);
          overlay = queryElement('.' + modalBackdropString);
          overlayDelay = overlay && getTransitionDurationFromElement(overlay);
          removeClass(modal, showClass);
          modal[setAttribute](ariaHidden, true);
          setTimeout(function () {
            hasClass(modal, 'fade') ? emulateTransitionEnd(modal, triggerHide) : triggerHide();
          }, supportTransitions && overlay && overlayDelay ? overlayDelay : 2);
        }, 2);
      };

      this.setContent = function (content) {
        queryElement('.' + component + '-content', modal)[innerHTML] = content;
      };

      this.update = function () {
        if (hasClass(modal, showClass)) {
          checkScrollbar();
          setScrollbar();
        }
      }; // init
      // prevent adding event handlers over and over
      // modal is independent of a triggering element


      if (!!element && !(stringModal in element)) {
        on(element, clickEvent, clickHandler);
      }

      if (!!self[content]) {
        self.setContent(self[content]);
      }

      if (element) {
        element[stringModal] = self;
        modal[modalTrigger] = element;
      } else {
        modal[stringModal] = self;
      }
    }; // DATA API


    supports[push]([stringModal, Modal, '[' + dataToggle + '="modal"]']);
    /* Native Javascript for Bootstrap 4 | Popover
    ----------------------------------------------*/
    // POPOVER DEFINITION
    // ==================

    var Popover = function (element, options) {
      // initialization element
      element = queryElement(element); // set options

      options = options || {}; // DATA API

      var triggerData = element[getAttribute](dataTrigger),
          // click / hover / focus
      animationData = element[getAttribute](dataAnimation),
          // true / false
      placementData = element[getAttribute](dataPlacement),
          dismissibleData = element[getAttribute](dataDismissible),
          delayData = element[getAttribute](dataDelay),
          containerData = element[getAttribute](dataContainer),
          // internal strings
      component = 'popover',
          template = 'template',
          trigger = 'trigger',
          classString = 'class',
          div = 'div',
          fade = 'fade',
          dataContent = 'data-content',
          dismissible = 'dismissible',
          closeBtn = '<button type="button" class="close">×</button>',
          // check container
      containerElement = queryElement(options[container]),
          containerDataElement = queryElement(containerData),
          // maybe the element is inside a modal
      modal = getClosest(element, '.modal'),
          // maybe the element is inside a fixed navbar
      navbarFixedTop = getClosest(element, '.' + fixedTop),
          navbarFixedBottom = getClosest(element, '.' + fixedBottom); // set instance options

      this[template] = options[template] ? options[template] : null; // JavaScript only

      this[trigger] = options[trigger] ? options[trigger] : triggerData || hoverEvent;
      this[animation] = options[animation] && options[animation] !== fade ? options[animation] : animationData || fade;
      this[placement] = options[placement] ? options[placement] : placementData || top;
      this[delay] = parseInt(options[delay] || delayData) || 200;
      this[dismissible] = options[dismissible] || dismissibleData === 'true' ? true : false;
      this[container] = containerElement ? containerElement : containerDataElement ? containerDataElement : navbarFixedTop ? navbarFixedTop : navbarFixedBottom ? navbarFixedBottom : modal ? modal : DOC[body]; // bind, content

      var self = this,
          titleString = options.title || element[getAttribute](dataTitle) || null,
          contentString = options.content || element[getAttribute](dataContent) || null;
      if (!contentString && !this[template]) return; // invalidate
      // constants, vars

      var popover = null,
          timer = 0,
          placementSetting = this[placement],
          // handlers
      dismissibleHandler = function (e) {
        if (popover !== null && e[target] === queryElement('.close', popover)) {
          self.hide();
        }
      },
          // private methods
      removePopover = function () {
        self[container].removeChild(popover);
        timer = null;
        popover = null;
      },
          createPopover = function () {
        titleString = options.title || element[getAttribute](dataTitle);
        contentString = options.content || element[getAttribute](dataContent); // fixing https://github.com/thednp/bootstrap.native/issues/233

        contentString = !!contentString ? contentString.trim() : null;
        popover = DOC[createElement](div); // popover arrow

        var popoverArrow = DOC[createElement](div);
        popoverArrow[setAttribute](classString, 'arrow');
        popover[appendChild](popoverArrow);

        if (contentString !== null && self[template] === null) {
          //create the popover from data attributes
          popover[setAttribute]('role', 'tooltip');

          if (titleString !== null) {
            var popoverTitle = DOC[createElement]('h3');
            popoverTitle[setAttribute](classString, component + '-header');
            popoverTitle[innerHTML] = self[dismissible] ? titleString + closeBtn : titleString;
            popover[appendChild](popoverTitle);
          } //set popover content


          var popoverContent = DOC[createElement](div);
          popoverContent[setAttribute](classString, component + '-body');
          popoverContent[innerHTML] = self[dismissible] && titleString === null ? contentString + closeBtn : contentString;
          popover[appendChild](popoverContent);
        } else {
          // or create the popover from template
          var popoverTemplate = DOC[createElement](div);
          self[template] = self[template].trim();
          popoverTemplate[innerHTML] = self[template];
          popover[innerHTML] = popoverTemplate.firstChild[innerHTML];
        } //append to the container


        self[container][appendChild](popover);
        popover[style].display = 'block';
        popover[setAttribute](classString, component + ' bs-' + component + '-' + placementSetting + ' ' + self[animation]);
      },
          showPopover = function () {
        !hasClass(popover, showClass) && addClass(popover, showClass);
      },
          updatePopover = function () {
        styleTip(element, popover, placementSetting, self[container]);
      },
          // event toggle
      dismissHandlerToggle = function (type) {
        if (clickEvent == self[trigger] || 'focus' == self[trigger]) {
          !self[dismissible] && type(element, 'blur', self.hide);
        }

        self[dismissible] && type(DOC, clickEvent, dismissibleHandler);
        type(globalObject, resizeEvent, self.hide, passiveHandler);
      },
          // triggers
      showTrigger = function () {
        dismissHandlerToggle(on);
        bootstrapCustomEvent.call(element, shownEvent, component);
      },
          hideTrigger = function () {
        dismissHandlerToggle(off);
        removePopover();
        bootstrapCustomEvent.call(element, hiddenEvent, component);
      }; // public methods / handlers


      this.toggle = function () {
        if (popover === null) {
          self.show();
        } else {
          self.hide();
        }
      };

      this.show = function () {
        clearTimeout(timer);
        timer = setTimeout(function () {
          if (popover === null) {
            placementSetting = self[placement]; // we reset placement in all cases

            createPopover();
            updatePopover();
            showPopover();
            bootstrapCustomEvent.call(element, showEvent, component);
            !!self[animation] ? emulateTransitionEnd(popover, showTrigger) : showTrigger();
          }
        }, 20);
      };

      this.hide = function () {
        clearTimeout(timer);
        timer = setTimeout(function () {
          if (popover && popover !== null && hasClass(popover, showClass)) {
            bootstrapCustomEvent.call(element, hideEvent, component);
            removeClass(popover, showClass);
            !!self[animation] ? emulateTransitionEnd(popover, hideTrigger) : hideTrigger();
          }
        }, self[delay]);
      }; // init


      if (!(stringPopover in element)) {
        // prevent adding event handlers twice
        if (self[trigger] === hoverEvent) {
          on(element, mouseHover[0], self.show);

          if (!self[dismissible]) {
            on(element, mouseHover[1], self.hide);
          }
        } else if (clickEvent == self[trigger] || 'focus' == self[trigger]) {
          on(element, self[trigger], self.toggle);
        }
      }

      element[stringPopover] = self;
    }; // POPOVER DATA API
    // ================


    supports[push]([stringPopover, Popover, '[' + dataToggle + '="popover"]']);
    /* Native Javascript for Bootstrap 4 | ScrollSpy
    -----------------------------------------------*/
    // SCROLLSPY DEFINITION
    // ====================

    var ScrollSpy = function (element, options) {
      // initialization element, the element we spy on
      element = queryElement(element); // DATA API

      var targetData = queryElement(element[getAttribute](dataTarget)),
          offsetData = element[getAttribute]('data-offset'); // set options

      options = options || {}; // invalidate

      if (!options[target] && !targetData) {
        return;
      } // event targets, constants


      var self = this,
          spyTarget = options[target] && queryElement(options[target]) || targetData,
          links = spyTarget && spyTarget[getElementsByTagName]('A'),
          offset = parseInt(options['offset'] || offsetData) || 10,
          items = [],
          targetItems = [],
          scrollOffset,
          scrollTarget = element[offsetHeight] < element[scrollHeight] ? element : globalObject,
          // determine which is the real scrollTarget
      isWindow = scrollTarget === globalObject; // populate items and targets

      for (var i = 0, il = links[length]; i < il; i++) {
        var href = links[i][getAttribute]('href'),
            targetItem = href && href.charAt(0) === '#' && href.slice(-1) !== '#' && queryElement(href);

        if (!!targetItem) {
          items[push](links[i]);
          targetItems[push](targetItem);
        }
      } // private methods


      var updateItem = function (index) {
        var item = items[index],
            targetItem = targetItems[index],
            // the menu item targets this element
        dropdown = item[parentNode][parentNode],
            dropdownLink = hasClass(dropdown, 'dropdown') && dropdown[getElementsByTagName]('A')[0],
            targetRect = isWindow && targetItem[getBoundingClientRect](),
            isActive = hasClass(item, active) || false,
            topEdge = (isWindow ? targetRect[top] + scrollOffset : targetItem[offsetTop]) - offset,
            bottomEdge = isWindow ? targetRect[bottom] + scrollOffset - offset : targetItems[index + 1] ? targetItems[index + 1][offsetTop] - offset : element[scrollHeight],
            inside = scrollOffset >= topEdge && bottomEdge > scrollOffset;

        if (!isActive && inside) {
          if (!hasClass(item, active)) {
            addClass(item, active);

            if (dropdownLink && !hasClass(dropdownLink, active)) {
              addClass(dropdownLink, active);
            }

            bootstrapCustomEvent.call(element, 'activate', 'scrollspy', items[index]);
          }
        } else if (!inside) {
          if (hasClass(item, active)) {
            removeClass(item, active);

            if (dropdownLink && hasClass(dropdownLink, active) && !getElementsByClassName(item[parentNode], active).length) {
              removeClass(dropdownLink, active);
            }
          }
        } else if (!inside && !isActive || isActive && inside) {
          return;
        }
      },
          updateItems = function () {
        scrollOffset = isWindow ? getScroll().y : element[scrollTop];

        for (var index = 0, itl = items[length]; index < itl; index++) {
          updateItem(index);
        }
      }; // public method


      this.refresh = function () {
        updateItems();
      }; // init


      if (!(stringScrollSpy in element)) {
        // prevent adding event handlers twice
        on(scrollTarget, scrollEvent, self.refresh, passiveHandler);
        on(globalObject, resizeEvent, self.refresh, passiveHandler);
      }

      self.refresh();
      element[stringScrollSpy] = self;
    }; // SCROLLSPY DATA API
    // ==================


    supports[push]([stringScrollSpy, ScrollSpy, '[' + dataSpy + '="scroll"]']);
    /* Native Javascript for Bootstrap 4 | Tab
    -----------------------------------------*/
    // TAB DEFINITION
    // ==============

    var Tab = function (element, options) {
      // initialization element
      element = queryElement(element); // DATA API

      var heightData = element[getAttribute](dataHeight),
          // strings
      component = 'tab',
          height = 'height',
          float = 'float',
          isAnimating = 'isAnimating'; // set options

      options = options || {};
      this[height] = supportTransitions ? options[height] || heightData === 'true' : false; // bind, event targets

      var self = this,
          next,
          tabs = getClosest(element, '.nav'),
          tabsContentContainer = false,
          dropdown = tabs && queryElement('.dropdown-toggle', tabs),
          activeTab,
          activeContent,
          nextContent,
          containerHeight,
          equalContents,
          nextHeight,
          // trigger
      triggerEnd = function () {
        tabsContentContainer[style][height] = '';
        removeClass(tabsContentContainer, collapsing);
        tabs[isAnimating] = false;
      },
          triggerShow = function () {
        if (tabsContentContainer) {
          // height animation
          if (equalContents) {
            triggerEnd();
          } else {
            setTimeout(function () {
              // enables height animation
              tabsContentContainer[style][height] = nextHeight + 'px'; // height animation

              emulateTransitionEnd(tabsContentContainer, triggerEnd);
            }, 50);
          }
        } else {
          tabs[isAnimating] = false;
        }

        bootstrapCustomEvent.call(next, shownEvent, component, activeTab);
      },
          triggerHide = function () {
        if (tabsContentContainer) {
          activeContent[style][float] = left;
          nextContent[style][float] = left;
          containerHeight = activeContent[scrollHeight];
        }

        addClass(nextContent, active);
        bootstrapCustomEvent.call(next, showEvent, component, activeTab);
        removeClass(activeContent, active);
        bootstrapCustomEvent.call(activeTab, hiddenEvent, component, next);

        if (tabsContentContainer) {
          nextHeight = nextContent[scrollHeight];
          equalContents = nextHeight === containerHeight;
          addClass(tabsContentContainer, collapsing);
          tabsContentContainer[style][height] = containerHeight + 'px'; // height animation

          activeContent[style][float] = '';
          nextContent[style][float] = '';
        }

        if (hasClass(nextContent, 'fade')) {
          setTimeout(function () {
            addClass(nextContent, showClass);
            emulateTransitionEnd(nextContent, triggerShow);
          }, 20);
        } else {
          triggerShow();
        }
      };

      if (!tabs) return; // invalidate
      // set default animation state

      tabs[isAnimating] = false; // private methods

      var getActiveTab = function () {
        var activeTabs = getElementsByClassName(tabs, active),
            activeTab;

        if (activeTabs[length] === 1 && !hasClass(activeTabs[0][parentNode], 'dropdown')) {
          activeTab = activeTabs[0];
        } else if (activeTabs[length] > 1) {
          activeTab = activeTabs[activeTabs[length] - 1];
        }

        return activeTab;
      },
          getActiveContent = function () {
        return queryElement(getActiveTab()[getAttribute]('href'));
      },
          // handler 
      clickHandler = function (e) {
        e[preventDefault]();
        next = e[currentTarget];
        !tabs[isAnimating] && !hasClass(next, active) && self.show();
      }; // public method


      this.show = function () {
        // the tab we clicked is now the next tab
        next = next || element;
        nextContent = queryElement(next[getAttribute]('href')); //this is the actual object, the next tab content to activate

        activeTab = getActiveTab();
        activeContent = getActiveContent();
        tabs[isAnimating] = true;
        removeClass(activeTab, active);
        activeTab[setAttribute](ariaSelected, 'false');
        addClass(next, active);
        next[setAttribute](ariaSelected, 'true');

        if (dropdown) {
          if (!hasClass(element[parentNode], 'dropdown-menu')) {
            if (hasClass(dropdown, active)) removeClass(dropdown, active);
          } else {
            if (!hasClass(dropdown, active)) addClass(dropdown, active);
          }
        }

        bootstrapCustomEvent.call(activeTab, hideEvent, component, next);

        if (hasClass(activeContent, 'fade')) {
          removeClass(activeContent, showClass);
          emulateTransitionEnd(activeContent, triggerHide);
        } else {
          triggerHide();
        }
      }; // init


      if (!(stringTab in element)) {
        // prevent adding event handlers twice
        on(element, clickEvent, clickHandler);
      }

      if (self[height]) {
        tabsContentContainer = getActiveContent()[parentNode];
      }

      element[stringTab] = self;
    }; // TAB DATA API
    // ============


    supports[push]([stringTab, Tab, '[' + dataToggle + '="tab"]']);
    /* Native Javascript for Bootstrap 4 | Toast
    ---------------------------------------------*/
    // TOAST DEFINITION
    // ==================

    var Toast = function (element, options) {
      // initialization element
      element = queryElement(element); // set options

      options = options || {}; // DATA API

      var animationData = element[getAttribute](dataAnimation),
          autohideData = element[getAttribute](dataAutohide),
          delayData = element[getAttribute](dataDelay),
          // strings
      component = 'toast',
          autohide = 'autohide',
          animation = 'animation',
          showing = 'showing',
          hide = 'hide',
          fade = 'fade'; // set instance options

      this[animation] = options[animation] === false || animationData === 'false' ? 0 : 1; // true by default

      this[autohide] = options[autohide] === false || autohideData === 'false' ? 0 : 1; // true by default

      this[delay] = parseInt(options[delay] || delayData) || 500; // 500ms default
      // bind,toast and timer

      var self = this,
          timer = 0,
          // get the toast element
      toast = getClosest(element, '.toast'); // private methods
      // animation complete

      var showComplete = function () {
        removeClass(toast, showing);
        addClass(toast, showClass);
        bootstrapCustomEvent.call(toast, shownEvent, component);

        if (self[autohide]) {
          self.hide();
        }
      },
          hideComplete = function () {
        addClass(toast, hide);
        bootstrapCustomEvent.call(toast, hiddenEvent, component);
      },
          close = function () {
        removeClass(toast, showClass);
        self[animation] ? emulateTransitionEnd(toast, hideComplete) : hideComplete();
      },
          disposeComplete = function () {
        clearTimeout(timer);
        timer = null;
        addClass(toast, hide);
        off(element, clickEvent, self.hide);
        element[stringToast] = null;
        element = null;
        toast = null;
      }; // public methods


      this.show = function () {
        if (toast) {
          bootstrapCustomEvent.call(toast, showEvent, component);
          self[animation] && addClass(toast, fade);
          removeClass(toast, hide);
          addClass(toast, showing);
          self[animation] ? emulateTransitionEnd(toast, showComplete) : showComplete();
        }
      };

      this.hide = function (noTimer) {
        if (toast && hasClass(toast, showClass)) {
          bootstrapCustomEvent.call(toast, hideEvent, component);

          if (noTimer) {
            close();
          } else {
            timer = setTimeout(close, self[delay]);
          }
        }
      };

      this.dispose = function () {
        if (toast && hasClass(toast, showClass)) {
          removeClass(toast, showClass);
          self[animation] ? emulateTransitionEnd(toast, disposeComplete) : disposeComplete();
        }
      }; // init


      if (!(stringToast in element)) {
        // prevent adding event handlers twice
        on(element, clickEvent, self.hide);
      }

      element[stringToast] = self;
    }; // TOAST DATA API
    // =================


    supports[push]([stringToast, Toast, '[' + dataDismiss + '="toast"]']);
    /* Native Javascript for Bootstrap 4 | Tooltip
    ---------------------------------------------*/
    // TOOLTIP DEFINITION
    // ==================

    var Tooltip = function (element, options) {
      // initialization element
      element = queryElement(element); // set options

      options = options || {}; // DATA API

      var animationData = element[getAttribute](dataAnimation),
          placementData = element[getAttribute](dataPlacement),
          delayData = element[getAttribute](dataDelay),
          containerData = element[getAttribute](dataContainer),
          // strings
      component = 'tooltip',
          classString = 'class',
          title = 'title',
          fade = 'fade',
          div = 'div',
          // check container
      containerElement = queryElement(options[container]),
          containerDataElement = queryElement(containerData),
          // maybe the element is inside a modal
      modal = getClosest(element, '.modal'),
          // maybe the element is inside a fixed navbar
      navbarFixedTop = getClosest(element, '.' + fixedTop),
          navbarFixedBottom = getClosest(element, '.' + fixedBottom); // set instance options

      this[animation] = options[animation] && options[animation] !== fade ? options[animation] : animationData || fade;
      this[placement] = options[placement] ? options[placement] : placementData || top;
      this[delay] = parseInt(options[delay] || delayData) || 200;
      this[container] = containerElement ? containerElement : containerDataElement ? containerDataElement : navbarFixedTop ? navbarFixedTop : navbarFixedBottom ? navbarFixedBottom : modal ? modal : DOC[body]; // bind, event targets, title and constants

      var self = this,
          timer = 0,
          placementSetting = this[placement],
          tooltip = null,
          titleString = element[getAttribute](title) || element[getAttribute](dataTitle) || element[getAttribute](dataOriginalTitle);
      if (!titleString || titleString == "") return; // invalidate
      // private methods

      var removeToolTip = function () {
        self[container].removeChild(tooltip);
        tooltip = null;
        timer = null;
      },
          createToolTip = function () {
        titleString = element[getAttribute](title) || element[getAttribute](dataTitle) || element[getAttribute](dataOriginalTitle); // read the title again

        if (titleString && titleString !== "") {
          // invalidate, maybe markup changed
          tooltip = DOC[createElement](div);
          tooltip[setAttribute]('role', component);
          tooltip[style][left] = '0';
          tooltip[style][top] = '0'; // tooltip arrow

          var tooltipArrow = DOC[createElement](div);
          tooltipArrow[setAttribute](classString, 'arrow');
          tooltip[appendChild](tooltipArrow);
          var tooltipInner = DOC[createElement](div);
          tooltipInner[setAttribute](classString, component + '-inner');
          tooltip[appendChild](tooltipInner);
          tooltipInner[innerHTML] = titleString;
          self[container][appendChild](tooltip);
          tooltip[setAttribute](classString, component + ' bs-' + component + '-' + placementSetting + ' ' + self[animation]);
        }
      },
          updateTooltip = function () {
        styleTip(element, tooltip, placementSetting, self[container]);
      },
          showTooltip = function () {
        !hasClass(tooltip, showClass) && addClass(tooltip, showClass);
      },
          // triggers
      showTrigger = function () {
        on(globalObject, resizeEvent, self.hide, passiveHandler);
        bootstrapCustomEvent.call(element, shownEvent, component);
      },
          hideTrigger = function () {
        off(globalObject, resizeEvent, self.hide, passiveHandler);
        removeToolTip();
        bootstrapCustomEvent.call(element, hiddenEvent, component);
      }; // public methods


      this.show = function () {
        clearTimeout(timer);
        timer = setTimeout(function () {
          if (tooltip === null) {
            placementSetting = self[placement]; // we reset placement in all cases
            // if(createToolTip() == false) return;

            if (createToolTip() !== false) {
              updateTooltip();
              showTooltip();
              bootstrapCustomEvent.call(element, showEvent, component);
              !!self[animation] ? emulateTransitionEnd(tooltip, showTrigger) : showTrigger();
            }
          }
        }, 20);
      };

      this.hide = function () {
        clearTimeout(timer);
        timer = setTimeout(function () {
          if (tooltip && hasClass(tooltip, showClass)) {
            bootstrapCustomEvent.call(element, hideEvent, component);
            removeClass(tooltip, showClass);
            !!self[animation] ? emulateTransitionEnd(tooltip, hideTrigger) : hideTrigger();
          }
        }, self[delay]);
      };

      this.toggle = function () {
        if (!tooltip) {
          self.show();
        } else {
          self.hide();
        }
      }; // init


      if (!(stringTooltip in element)) {
        // prevent adding event handlers twice
        element[setAttribute](dataOriginalTitle, titleString);
        element.removeAttribute(title);
        on(element, mouseHover[0], self.show);
        on(element, mouseHover[1], self.hide);
      }

      element[stringTooltip] = self;
    }; // TOOLTIP DATA API
    // =================


    supports[push]([stringTooltip, Tooltip, '[' + dataToggle + '="tooltip"]']);
    /* Native Javascript for Bootstrap | Initialize Data API
    --------------------------------------------------------*/

    var initializeDataAPI = function (constructor, collection) {
      for (var i = 0, l = collection[length]; i < l; i++) {
        new constructor(collection[i]);
      }
    },
        initCallback = BSN.initCallback = function (lookUp) {
      lookUp = lookUp || DOC;

      for (var i = 0, l = supports[length]; i < l; i++) {
        initializeDataAPI(supports[i][1], lookUp[querySelectorAll](supports[i][2]));
      }
    }; // bulk initialize all components


    DOC[body] ? initCallback() : on(DOC, 'DOMContentLoaded', function () {
      initCallback();
    });
    return {
      Alert: Alert,
      Button: Button,
      Carousel: Carousel,
      Collapse: Collapse,
      Dropdown: Dropdown,
      Modal: Modal,
      Popover: Popover,
      ScrollSpy: ScrollSpy,
      Tab: Tab,
      Toast: Toast,
      Tooltip: Tooltip
    };
  });
});
const PRIMARY_ACTION_SLOT_NAME = "primary-action";
const SECONDARY_ACTION_SLOT_NAME = "secondary-action";
let autoId = 0;

class ModalRender {
  constructor(component) {
    this.component = component;
  }

  componentDidLoad() {
    const modalElement = this.getModalElement();
    modalElement.addEventListener("show.bs.modal", () => {
      this.component.opened = true;
    });
    modalElement.addEventListener("hide.bs.modal", () => {
      this.component.opened = false;
    });
    this.bootstrapModal = new bootstrapNativeV4.Modal(modalElement, {
      show: this.component.opened
    });

    if (this.component.autoClose) {
      const actions = Array.from(this.component.element.querySelectorAll(`[slot='${PRIMARY_ACTION_SLOT_NAME}'], [slot='${SECONDARY_ACTION_SLOT_NAME}']`));
      actions.forEach(action => action.addEventListener("click", () => this.close()));
    }
  }

  render(slots) {
    const modal = this.component;
    const primaryActions = Array.from(modal.element.querySelectorAll(`[slot='${PRIMARY_ACTION_SLOT_NAME}']`));
    primaryActions.forEach(action => action.cssClass = this.getActionCssClasses(action.cssClass, "btn-primary"));
    const secondaryActions = Array.from(modal.element.querySelectorAll(`[slot='${SECONDARY_ACTION_SLOT_NAME}']`));
    secondaryActions.forEach(action => action.cssClass = this.getActionCssClasses(action.cssClass, "btn-secondary"));
    const hasFooterActions = primaryActions.length > 0 || secondaryActions.length > 0;

    if (!this.headerId) {
      this.headerId = modal.element.id ? `${modal.element.id}__modal` : `gx-modal-auto-id-${autoId++}`;
    }

    return [(0,_index_10623738_js__WEBPACK_IMPORTED_MODULE_1__.h)("gx-bootstrap", null), (0,_index_10623738_js__WEBPACK_IMPORTED_MODULE_1__.h)("div", {
      class: "modal fade",
      tabindex: "-1",
      role: "dialog",
      "aria-labelledby": this.headerId,
      "aria-hidden": "true"
    }, (0,_index_10623738_js__WEBPACK_IMPORTED_MODULE_1__.h)("div", {
      class: "modal-dialog modal-dialog-centered",
      role: "document"
    }, (0,_index_10623738_js__WEBPACK_IMPORTED_MODULE_1__.h)("div", {
      class: "modal-content"
    }, modal.showHeader && (0,_index_10623738_js__WEBPACK_IMPORTED_MODULE_1__.h)("div", {
      class: "modal-header"
    }, (0,_index_10623738_js__WEBPACK_IMPORTED_MODULE_1__.h)("h5", {
      class: "modal-title",
      id: this.headerId
    }, slots.header), (0,_index_10623738_js__WEBPACK_IMPORTED_MODULE_1__.h)("button", {
      type: "button",
      class: "close",
      "data-dismiss": "modal",
      "aria-label": modal.closeButtonLabel
    }, (0,_index_10623738_js__WEBPACK_IMPORTED_MODULE_1__.h)("span", {
      "aria-hidden": "true"
    }, "\u00D7"))), (0,_index_10623738_js__WEBPACK_IMPORTED_MODULE_1__.h)("div", {
      class: "modal-body"
    }, slots.body), hasFooterActions ? (0,_index_10623738_js__WEBPACK_IMPORTED_MODULE_1__.h)("div", {
      class: "modal-footer"
    }, slots.primaryAction, slots.secondaryAction) : null)))];
  }

  open() {
    this.bootstrapModal.show();
  }

  close() {
    this.bootstrapModal.hide();
  }

  getModalElement() {
    return this.component.element.querySelector(".modal");
  }

  getActionCssClasses(currentCssClasses, ...newClasses) {
    return (currentCssClasses || "").split(" ").concat(...newClasses).join(" ");
  }

}

const modalCss = ".gx-line-clamp{display:-webkit-box;-webkit-box-orient:vertical;-webkit-line-clamp:var(--max-lines);overflow:hidden}.line-measuring{visibility:hidden;position:absolute}gx-modal{display:block;--gx-modal-header-color:black;--gx-modal-header-background-color:white;--gx-modal-primary-action-color:white;--gx-modal-secondary-action-color:white}gx-modal[hidden]{display:none !important}gx-modal[hidden][invisible-mode=keep-space]{display:block !important;visibility:hidden}gx-modal .modal-header{background-color:var(--gx-modal-header-background-color);color:var(--gx-modal-header-color)}gx-modal .modal-header .close{color:var(--gx-modal-header-color)}gx-modal .modal-footer .btn-primary{color:var(--gx-modal-primary-action-color)}gx-modal .modal-footer .btn-secondary{color:var(--gx-modal-secondary-action-color)}";
const Modal = class {
  constructor(hostRef) {
    (0,_index_10623738_js__WEBPACK_IMPORTED_MODULE_1__.r)(this, hostRef);
    this.close = (0,_index_10623738_js__WEBPACK_IMPORTED_MODULE_1__.c)(this, "close", 7);
    this.open = (0,_index_10623738_js__WEBPACK_IMPORTED_MODULE_1__.c)(this, "open", 7);
    /**
     * This attribute lets you specify if the modal dialog is opened or closed.
     */

    this.opened = false;
    /**
     * This attribute lets you specify if a header is renderd on top of the modal dialog.
     */

    this.showHeader = true;
    this.renderer = new ModalRender(this);
  }

  openedHandler(newValue, oldValue = false) {
    if (newValue === oldValue) {
      return;
    }

    if (newValue) {
      this.renderer.open();
      this.open.emit();
    } else {
      this.renderer.close();
      this.close.emit();
    }
  }

  componentDidLoad() {
    this.renderer.componentDidLoad();
  }

  render() {
    return (0,_index_10623738_js__WEBPACK_IMPORTED_MODULE_1__.h)(_index_10623738_js__WEBPACK_IMPORTED_MODULE_1__.H, null, this.renderer.render({
      body: (0,_index_10623738_js__WEBPACK_IMPORTED_MODULE_1__.h)("slot", {
        name: "body"
      }),
      header: (0,_index_10623738_js__WEBPACK_IMPORTED_MODULE_1__.h)("slot", {
        name: "header"
      }),
      primaryAction: (0,_index_10623738_js__WEBPACK_IMPORTED_MODULE_1__.h)("slot", {
        name: "primary-action"
      }),
      secondaryAction: (0,_index_10623738_js__WEBPACK_IMPORTED_MODULE_1__.h)("slot", {
        name: "secondary-action"
      })
    }));
  }

  get element() {
    return (0,_index_10623738_js__WEBPACK_IMPORTED_MODULE_1__.g)(this);
  }

  static get watchers() {
    return {
      "opened": ["openedHandler"]
    };
  }

};
Modal.style = modalCss;

const watchForItems = (containerEl, tagName, onChange) => {
  if (typeof MutationObserver === "undefined") {
    return;
  }

  const mutation = new MutationObserver(mutationList => {
    onChange(getSelectedItem(mutationList, tagName));
  });
  mutation.observe(containerEl, {
    childList: true,
    subtree: true
  });
  return mutation;
};

function getSelectedItem(mutationList, tagName) {
  let newOption;
  mutationList.forEach(mut => {
    for (let i = 0; i < mut.addedNodes.length; i++) {
      newOption = findCheckedItem(mut.addedNodes[i], tagName) || newOption;
    }
  });
  return newOption;
}

function findCheckedItem(el, tagName) {
  if (el.nodeType !== 1) {
    return undefined;
  }

  const options = el.tagName === tagName.toUpperCase() ? [el] : Array.from(el.querySelectorAll(tagName));
  return options.find(o => o.value === el.value);
}

const navbarCss = ".gx-line-clamp{display:-webkit-box;-webkit-box-orient:vertical;-webkit-line-clamp:var(--max-lines);overflow:hidden}.line-measuring{visibility:hidden;position:absolute}:root{--gx-navbar-main-height:60px;--gx-navbar-sub-height:48px;--gx-navbar-base-z-index:100}:host([position=bottom]){bottom:0;}@media screen and (min-width: 769px){:host([position=bottom]){display:none}}:host{display:block;-webkit-box-shadow:0 calc(var(--elevation) * 0.125rem) calc(var(--elevation) * 0.25rem) rgba(0, 0, 0, calc(var(--elevation) * 0.075));box-shadow:0 calc(var(--elevation) * 0.125rem) calc(var(--elevation) * 0.25rem) rgba(0, 0, 0, calc(var(--elevation) * 0.075));--gx-navbar-main-background-color:rgb(87, 89, 101);--gx-navbar-sub-background-color:white;--gx-navbar-main-color:white;--gx-navbar-icon-color:var(--gx-navbar-main-color);--gx-navbar-sub-color:black;--gx-navbar-icon-size:24px;--gx-navbar-sub-separator-top:none;--gx-navbar-sub-separator-bottom:1px solid rgb(195, 196, 200);--gx-navbar-actions-separator:1.5px solid #e0e0e0;--gx-navbar-sub-hover-color:#575965;--gx-navbar-sub-active-background-color:rgba(195, 196, 200, 0.2);--gx-navbar-sub-active-color:#000;--gx-navbar-low-background-color:#e0e0e0;--gx-navbar-main-active-background:transparent;--gx-navbar-main-active-color:#111111;display:block;box-shadow:0 calc(var(--elevation) * 0.125rem) calc(var(--elevation) * 0.25rem) rgba(0, 0, 0, calc(var(--elevation) * 0.075));position:-webkit-sticky;position:sticky;top:0;font-size:14px;font-weight:600;width:100%;z-index:calc(var(--gx-navbar-base-z-index) + 1)}:host[hidden]{display:none !important}:host[hidden][invisible-mode=keep-space]{display:block !important;visibility:hidden}:host[hidden]{display:none !important}:host[hidden][invisible-mode=keep-space]{display:block !important;visibility:hidden}:host gx-icon{--gx-icon-size:var(--gx-navbar-icon-size);--gx-icon-color:var(--gx-navbar-icon-color)}:host button{background:none;cursor:pointer;padding:0;border:0}:host button,:host button:focus,:host button:active{-webkit-appearance:none;-moz-appearance:none;appearance:none;outline:none}:host .gx-navbar{display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column}:host .gx-navbar-header{outline:none;margin-left:24px}:host .gx-navbar-header,:host .gx-navbar-header:hover,:host .gx-navbar-header:active,:host .gx-navbar-header:focus{color:inherit;text-decoration:none}:host .gx-navbar-icon-button{line-height:0;padding:4px 4px;-webkit-transition:background-color 0.25s, color 0.25s, border-color 0.25s, -webkit-filter 0.25s;transition:background-color 0.25s, color 0.25s, border-color 0.25s, -webkit-filter 0.25s;transition:background-color 0.25s, filter 0.25s, color 0.25s, border-color 0.25s;transition:background-color 0.25s, filter 0.25s, color 0.25s, border-color 0.25s, -webkit-filter 0.25s}:host .gx-navbar-icon-button:focus{padding:4px 4px}:host .gx-navbar-icon-button:hover:not(:active){-webkit-filter:brightness(90%);filter:brightness(90%)}:host .gx-navbar-icon-button:active{background:var(--gx-navbar-main-active-background);background-color:var(--gx-navbar-main-active-background);color:var(--gx-navbar-main-active-color)}:host .gx-navbar-icon-button:active gx-icon{--gx-icon-color:var(--gx-navbar-main-active-color)}:host .gx-navbar-back-button{font:inherit;font-size:11px;font-weight:600;display:-ms-flexbox;display:flex;-ms-flex-direction:row;flex-direction:row;-ms-flex-align:center;align-items:center;padding:4px 4px;-webkit-transition:background-color 0.25s, color 0.25s, border-color 0.25s, -webkit-filter 0.25s;transition:background-color 0.25s, color 0.25s, border-color 0.25s, -webkit-filter 0.25s;transition:background-color 0.25s, filter 0.25s, color 0.25s, border-color 0.25s;transition:background-color 0.25s, filter 0.25s, color 0.25s, border-color 0.25s, -webkit-filter 0.25s}:host .gx-navbar-back-button gx-icon{--gx-icon-color:var(--gx-navbar-icon-color)}:host .gx-navbar-back-button:focus{padding:4px 4px}:host .gx-navbar-back-button:hover:not(:active){-webkit-filter:brightness(90%);filter:brightness(90%)}:host .gx-navbar-back-button:active{background:var(--gx-navbar-main-active-background);background-color:var(--gx-navbar-main-active-background);color:var(--gx-navbar-main-active-color)}:host .gx-navbar-back-button:active gx-icon{--gx-icon-color:var(--gx-navbar-main-active-color)}:host .gx-navbar-line{display:-ms-flexbox;display:flex;-ms-flex-direction:row;flex-direction:row;-ms-flex-align:center;align-items:center;padding:0 16px}:host .gx-navbar-line-1{height:var(--gx-navbar-main-height);color:var(--gx-navbar-main-color);background-color:var(--gx-navbar-main-background-color);background-image:var(--gx-navbar-main-background-image);overflow:hidden}:host .gx-navbar-line-2{height:var(--gx-navbar-sub-height);color:var(--gx-navbar-sub-color);background-color:var(--gx-navbar-sub-background-color);border-top:var(--gx-navbar-sub-separator-top);border-bottom:var(--gx-navbar-sub-separator-bottom);overflow:hidden}:host .gx-navbar-line-2 .gx-navbar-actions{-ms-flex:1;flex:1;-ms-flex-pack:end;justify-content:flex-end}:host .gx-navbar-line-2 .gx-navbar-actions-toggle gx-icon{--gx-icon-color:var(--gx-navbar-sub-color)}:host .gx-navbar-line-2 .gx-navbar-actions-toggle--active gx-icon{--gx-icon-color:var(--gx-navbar-icon-color)}:host .gx-navbar-line-2 .gx-navbar-back-button gx-icon{--gx-icon-color:var(--gx-navbar-sub-color)}:host .gx-navbar-line-2 .gx-navbar-back-button:hover{background-color:transparent;color:var(--gx-navbar-sub-hover-color)}:host .gx-navbar-line-2 .gx-navbar-back-button:hover gx-icon{--gx-icon-color:var(--gx-navbar-sub-hover-color)}:host .gx-navbar-line-2 .gx-navbar-back-button:active{background-color:var(--gx-navbar-sub-active-background-color);color:var(--gx-navbar-sub-active-color)}:host .gx-navbar-line-2 .gx-navbar-back-button:active gx-icon{--gx-icon-color:var(--gx-navbar-sub-active-color)}:host .gx-navbar-line-2 .gx-navbar-icon-button:hover{background-color:transparent;color:var(--gx-navbar-sub-hover-color)}:host .gx-navbar-line-2 .gx-navbar-icon-button:hover gx-icon{--gx-icon-color:var(--gx-navbar-sub-hover-color)}:host .gx-navbar-line-2 .gx-navbar-icon-button:active{background-color:var(--gx-navbar-sub-active-background-color);color:var(--gx-navbar-sub-active-color)}:host .gx-navbar-line-2 .gx-navbar-icon-button:active gx-icon{--gx-icon-color:var(--gx-navbar-sub-active-color)}:host .gx-navbar-links{display:none;-ms-flex:1;flex:1;-ms-flex-direction:row;flex-direction:row;-ms-flex-pack:center;justify-content:center;-ms-flex-align:stretch;align-items:stretch;overflow:hidden;}@media screen and (min-width: 769px){:host .gx-navbar-links[data-position=top]{display:-ms-flexbox;display:flex}}@media screen and (max-width: 768px){:host .gx-navbar-links[data-position=bottom]{display:-ms-flexbox;display:flex;-ms-flex-pack:stretch;justify-content:stretch;color:var(--gx-navbar-main-color)}}:host .gx-navbar-actions{display:-ms-flexbox;display:flex;-ms-flex-direction:row;flex-direction:row;position:relative}@media screen and (max-width: 768px){:host .gx-navbar-actions{-ms-flex:1;flex:1;-ms-flex-pack:end;justify-content:flex-end}}:host .gx-navbar-actions-high,:host .gx-navbar-actions-normal{display:-ms-flexbox;display:flex;-ms-flex-direction:row;flex-direction:row;-ms-flex-align:center;align-items:center}:host .gx-navbar-actions-normal--separator{border-left:var(--gx-navbar-actions-separator)}:host .gx-navbar-actions-low{display:none;width:160px;background-color:var(--gx-navbar-low-background-color);color:var(--gx-navbar-sub-color);font-weight:400;font-size:12px;position:absolute;top:34px;right:-32px;z-index:calc(var(--gx-navbar-base-z-index) + 1);-ms-flex-direction:column;flex-direction:column;border-radius:2px;padding:5px 0;-webkit-box-shadow:0px 3px 4px 0px rgba(0, 0, 0, 0.14), 0px 3px 3px -2px rgba(0, 0, 0, 0.12), 0px 1px 8px 0px rgba(0, 0, 0, 0.2);box-shadow:0px 3px 4px 0px rgba(0, 0, 0, 0.14), 0px 3px 3px -2px rgba(0, 0, 0, 0.12), 0px 1px 8px 0px rgba(0, 0, 0, 0.2)}:host .gx-navbar-actions-low--active{display:-ms-flexbox;display:flex}:host .gx-navbar-actions-toggle{border-radius:100%;height:32px;width:32px;min-width:32px;display:-ms-inline-flexbox;display:inline-flex;place-content:center;place-items:center}:host .gx-navbar-actions-toggle--active{background-color:var(--gx-navbar-low-background-color)}:host .gx-navbar-actions-toggle--active gx-icon{--gx-icon-color:var(--gx-navbar-sub-color)}";
const NavBar = class {
  constructor(hostRef) {
    (0,_index_10623738_js__WEBPACK_IMPORTED_MODULE_1__.r)(this, hostRef);
    this.toggleButtonClick = (0,_index_10623738_js__WEBPACK_IMPORTED_MODULE_1__.c)(this, "toggleButtonClick", 7);
    this.backButtonClick = (0,_index_10623738_js__WEBPACK_IMPORTED_MODULE_1__.c)(this, "backButtonClick", 7);
    /**
     * This attribute lets you specify if one or two lines will be used to render the navigation bar.
     * Useful when there are links and also actions, to have links in the first line, and actions in the second
     */

    this.singleLine = true;
    /**
     * This attribute lets you specify the position of the navbar in the
     * viewport.
     * If `position = "top"` the navbar will be placed normally at the top of the
     * viewport.
     * If `position = "bottom"` the navbar will be placed normally at the bottom
     * of the viewport. This `position` of navbar is used to show navigation
     * links.
     */

    this.position = "top";
    this.showLowActions = false;
    this.hasHighPriorityActions = false;
    this.hasNormalPriorityActions = false;
    this.hasLowPriorityActions = false;

    this.handleToggleButtonClick = e => {
      this.toggleButtonClick.emit(e);
    };

    this.handleBackButtonClick = e => {
      this.backButtonClick.emit(e);
    };

    this.handleActionToggleButtonClick = () => {
      this.showLowActions = !this.showLowActions;
    };

    this.handleBodyClick = e => {
      if (this.showLowActions) {
        const navbarToggleBtn = this.element.shadowRoot.querySelector(".gx-navbar-actions-toggle");

        if (e.composedPath().find(el => el === navbarToggleBtn) === undefined) {
          this.showLowActions = false;
        }
      }
    };
  }
  /*  Before the first render, we store the result of this.position === "top",
      because it won't change at runtime.
  */


  componentWillLoad() {
    this.isTopPosition = this.position === "top";
  }

  componentDidLoad() {
    document.body.addEventListener("click", this.handleBodyClick);
    this.watchForItemsObserver = watchForItems(this.element, "gx-navbar-item", () => this.checkChildActions());
  }

  disconnectedCallback() {
    document.body.removeEventListener("click", this.handleBodyClick);

    if (this.watchForItemsObserver !== undefined) {
      this.watchForItemsObserver.disconnect();
      this.watchForItemsObserver = undefined;
    }
  }

  checkChildActions() {
    this.hasHighPriorityActions = this.hasActionsByType("high");
    this.hasNormalPriorityActions = this.hasActionsByType("normal");
    this.hasLowPriorityActions = this.hasActionsByType("low");
  }

  render() {
    return (0,_index_10623738_js__WEBPACK_IMPORTED_MODULE_1__.h)(_index_10623738_js__WEBPACK_IMPORTED_MODULE_1__.H, null, (0,_index_10623738_js__WEBPACK_IMPORTED_MODULE_1__.h)("nav", {
      class: "gx-navbar"
    }, (0,_index_10623738_js__WEBPACK_IMPORTED_MODULE_1__.h)("div", {
      class: "gx-navbar-line gx-navbar-line-1"
    }, this.isTopPosition && this.showBackButton && this.singleLine && (0,_index_10623738_js__WEBPACK_IMPORTED_MODULE_1__.h)("button", {
      key: "back-button",
      type: "button",
      part: "back-button",
      class: "gx-navbar-back-button gx-navbar-icon-button",
      "aria-label": this.backButtonLabel,
      onClick: this.handleBackButtonClick
    }, (0,_index_10623738_js__WEBPACK_IMPORTED_MODULE_1__.h)("gx-icon", {
      type: "arrow-left"
    })), this.isTopPosition && this.showToggleButton && (0,_index_10623738_js__WEBPACK_IMPORTED_MODULE_1__.h)("button", {
      key: "toggle-button",
      type: "button",
      part: "default-button",
      class: "gx-navbar-icon-button",
      "aria-label": this.toggleButtonLabel,
      onClick: this.handleToggleButtonClick
    }, (0,_index_10623738_js__WEBPACK_IMPORTED_MODULE_1__.h)("gx-icon", {
      type: "burger"
    })), this.isTopPosition && (0,_index_10623738_js__WEBPACK_IMPORTED_MODULE_1__.h)("a", {
      class: "gx-navbar-header",
      tabindex: "-1"
    }, (0,_index_10623738_js__WEBPACK_IMPORTED_MODULE_1__.h)("slot", {
      name: "header"
    }), this.caption), (0,_index_10623738_js__WEBPACK_IMPORTED_MODULE_1__.h)("div", {
      class: "gx-navbar-links",
      "data-position": this.position
    }, (0,_index_10623738_js__WEBPACK_IMPORTED_MODULE_1__.h)("slot", {
      name: "navigation"
    })), this.isTopPosition && this.singleLine && this.renderActions()), this.isTopPosition && !this.singleLine && (0,_index_10623738_js__WEBPACK_IMPORTED_MODULE_1__.h)("div", {
      class: "gx-navbar-line gx-navbar-line-2"
    }, this.showBackButton && (0,_index_10623738_js__WEBPACK_IMPORTED_MODULE_1__.h)("button", {
      type: "button",
      part: "back-button",
      class: "gx-navbar-back-button",
      onClick: this.handleBackButtonClick
    }, (0,_index_10623738_js__WEBPACK_IMPORTED_MODULE_1__.h)("gx-icon", {
      type: "arrow-left"
    }), this.backButtonLabel), this.renderActions())));
  }

  renderActions() {
    return [(0,_index_10623738_js__WEBPACK_IMPORTED_MODULE_1__.h)("div", {
      class: "gx-navbar-actions"
    }, (0,_index_10623738_js__WEBPACK_IMPORTED_MODULE_1__.h)("div", {
      class: "gx-navbar-actions-high"
    }, (0,_index_10623738_js__WEBPACK_IMPORTED_MODULE_1__.h)("slot", {
      name: "high-priority-action"
    })), (0,_index_10623738_js__WEBPACK_IMPORTED_MODULE_1__.h)("div", {
      class: {
        "gx-navbar-actions-normal": true,
        "gx-navbar-actions-normal--separator": this.hasHighPriorityActions && this.hasNormalPriorityActions
      }
    }, (0,_index_10623738_js__WEBPACK_IMPORTED_MODULE_1__.h)("slot", {
      name: "normal-priority-action"
    })), (0,_index_10623738_js__WEBPACK_IMPORTED_MODULE_1__.h)("div", {
      class: {
        "gx-navbar-actions-low": true,
        "gx-navbar-actions-low--active": this.showLowActions
      }
    }, (0,_index_10623738_js__WEBPACK_IMPORTED_MODULE_1__.h)("slot", {
      name: "low-priority-action"
    }))), this.hasLowPriorityActions && (0,_index_10623738_js__WEBPACK_IMPORTED_MODULE_1__.h)("button", {
      type: "button",
      "aria-label": this.actionToggleButtonLabel,
      part: "default-button",
      class: {
        "gx-navbar-icon-button": true,
        "gx-navbar-actions-toggle": true,
        "gx-navbar-actions-toggle--active": this.showLowActions
      },
      onClick: this.handleActionToggleButtonClick
    }, (0,_index_10623738_js__WEBPACK_IMPORTED_MODULE_1__.h)("gx-icon", {
      type: "show-more"
    }))];
  }

  hasActionsByType(type) {
    return this.element.querySelector(`[slot='${type}-priority-action']`) !== null;
  }

  get element() {
    return (0,_index_10623738_js__WEBPACK_IMPORTED_MODULE_1__.g)(this);
  }

};
NavBar.style = navbarCss;
const navbarItemCss = ".gx-line-clamp{display:-webkit-box;-webkit-box-orient:vertical;-webkit-line-clamp:var(--max-lines);overflow:hidden}.line-measuring{visibility:hidden;position:absolute}:host{display:-ms-inline-flexbox;display:inline-flex;--gx-navbar-item-icon-size-big:24px;--gx-navbar-item-icon-size-small:18px;--gx-navbar-item-active-color:inherit;--gx-navbar-item-active-color-xs:#000;font-size:inherit;font-weight:inherit;outline:none}:host[hidden]{display:none !important}:host[hidden][invisible-mode=keep-space]{display:-ms-inline-flexbox !important;display:inline-flex !important;visibility:hidden}@media screen and (max-width: 768px){:host{-ms-flex:1;flex:1;-ms-flex-pack:center;justify-content:center}}:host button{-webkit-appearance:none;-moz-appearance:none;appearance:none;border:0;background-color:transparent;font:inherit}:host .item{-ms-flex:1;flex:1;-ms-flex-align:center;align-items:center;cursor:pointer;display:-ms-inline-flexbox;display:inline-flex;color:inherit;text-decoration:none;padding:3px 15px;margin:0 2px;outline:none}:host .item--active{background-color:#888;color:var(--gx-navbar-item-active-color)}@media screen and (max-width: 768px){:host .item--active{background-color:transparent;color:var(--gx-navbar-item-active-color-xs)}}:host .item-icon{display:inline-block;height:var(--gx-navbar-item-icon-size-small);width:var(--gx-navbar-item-icon-size-small);-o-object-fit:contain;object-fit:contain;margin-right:12px}@media screen and (max-width: 768px){:host .item-icon{--gx-icon-color:var(--gx-navbar-item-active-color-xs)}}@media screen and (max-width: 768px){:host .item{-ms-flex-direction:column;flex-direction:column;-ms-flex-pack:center;justify-content:center;-ms-flex-align:center;align-items:center;text-align:center}:host .item-icon{margin-bottom:5px;margin-right:0}}:host([slot=low-priority-action]) .item{padding:8px 16px;margin:0;-ms-flex-pack:start;justify-content:start;-ms-flex-align:start;align-items:start}:host([slot=low-priority-action]) .item:hover,:host([slot=low-priority-action]) .item:focus{-webkit-filter:brightness(90%);filter:brightness(90%);color:var(--gx-navbar-main-color)}:host(:not([slot=low-priority-action])) .item{padding:3 15;-webkit-transition:background-color 0.25s, color 0.25s, border-color 0.25s, -webkit-filter 0.25s;transition:background-color 0.25s, color 0.25s, border-color 0.25s, -webkit-filter 0.25s;transition:background-color 0.25s, filter 0.25s, color 0.25s, border-color 0.25s;transition:background-color 0.25s, filter 0.25s, color 0.25s, border-color 0.25s, -webkit-filter 0.25s}:host(:not([slot=low-priority-action])) .item:focus{padding:3 15}:host(:not([slot=low-priority-action])) .item:hover:not(:active){-webkit-filter:brightness(90%);filter:brightness(90%)}:host(:not([slot=low-priority-action])) .item:active{background:var(--gx-navbar-main-active-background);background-color:var(--gx-navbar-main-active-background);color:var(--gx-navbar-main-active-color)}:host(:not([slot=low-priority-action])) .item:active gx-icon{--gx-icon-color:var(--gx-navbar-main-active-color)}:host(:empty) .item-with-icon{padding:4px;padding:4px 4px;-webkit-transition:background-color 0.25s, color 0.25s, border-color 0.25s, -webkit-filter 0.25s;transition:background-color 0.25s, color 0.25s, border-color 0.25s, -webkit-filter 0.25s;transition:background-color 0.25s, filter 0.25s, color 0.25s, border-color 0.25s;transition:background-color 0.25s, filter 0.25s, color 0.25s, border-color 0.25s, -webkit-filter 0.25s}:host(:empty) .item-with-icon:focus{padding:4px 4px}:host(:empty) .item-with-icon:hover:not(:active){-webkit-filter:brightness(90%);filter:brightness(90%)}:host(:empty) .item-with-icon:active{background:var(--gx-navbar-main-active-background);background-color:var(--gx-navbar-main-active-background);color:var(--gx-navbar-main-active-color)}:host(:empty) .item-with-icon:active gx-icon{--gx-icon-color:var(--gx-navbar-main-active-color)}:host(:empty) .item-with-icon:hover{background-color:transparent;color:var(--gx-navbar-sub-hover-color)}:host(:empty) .item-with-icon:hover gx-icon{--gx-icon-color:var(--gx-navbar-sub-hover-color)}:host(:empty) .item-with-icon:active{background-color:var(--gx-navbar-sub-active-background-color);color:var(--gx-navbar-sub-active-color)}:host(:empty) .item-with-icon:active gx-icon{--gx-icon-color:var(--gx-navbar-sub-active-color)}:host(:empty) .item-icon{margin:0 4px;height:var(--gx-navbar-item-icon-size-big);width:var(--gx-navbar-item-icon-size-big)}:host-context(.gx-navbar-line-2):hover{background-color:transparent;color:var(--gx-navbar-sub-hover-color)}:host-context(.gx-navbar-line-2):hover gx-icon{--gx-icon-color:var(--gx-navbar-sub-hover-color)}:host-context(.gx-navbar-line-2):active{background-color:var(--gx-navbar-sub-active-background-color);color:var(--gx-navbar-sub-active-color)}:host-context(.gx-navbar-line-2):active gx-icon{--gx-icon-color:var(--gx-navbar-sub-active-color)}";
const NavBarItem = class {
  constructor(hostRef) {
    (0,_index_10623738_js__WEBPACK_IMPORTED_MODULE_1__.r)(this, hostRef);
    /**
     * Indicates if the navbar item is the active one (for example, when the item represents the current page)
     */

    this.active = false;
    /**
     * This attribute lets you specify the URL of the navbar item.
     */

    this.href = "";
    /**
     * This attribute lets you specify the alternate text for the image specified in iconSrc.
     */

    this.iconAltText = "";
    /**
     * This attribute lets you specify the URL of an icon for the navbar item.
     */

    this.iconSrc = "";
  }

  render() {
    const TagName = this.href ? "a" : "button";
    const attris = this.href ? {
      href: this.href
    } : {
      type: "button"
    };
    return (0,_index_10623738_js__WEBPACK_IMPORTED_MODULE_1__.h)(_index_10623738_js__WEBPACK_IMPORTED_MODULE_1__.H, null, (0,_index_10623738_js__WEBPACK_IMPORTED_MODULE_1__.h)(TagName, Object.assign({
      class: {
        item: true,
        "item-with-icon": !!this.iconSrc,
        "item--active": this.active
      }
    }, attris), this.iconSrc && (0,_index_10623738_js__WEBPACK_IMPORTED_MODULE_1__.h)("img", {
      class: "item-icon",
      src: this.iconSrc,
      alt: this.iconAltText
    }), (0,_index_10623738_js__WEBPACK_IMPORTED_MODULE_1__.h)("slot", null)));
  }

  get element() {
    return (0,_index_10623738_js__WEBPACK_IMPORTED_MODULE_1__.g)(this);
  }

};
NavBarItem.style = navbarItemCss;

class ProgressBarRender {
  constructor(component) {
    this.component = component;
  }

  render(slots) {
    return [(0,_index_10623738_js__WEBPACK_IMPORTED_MODULE_1__.h)("gx-bootstrap", null), (0,_index_10623738_js__WEBPACK_IMPORTED_MODULE_1__.h)("div", {
      class: "progress"
    }, (0,_index_10623738_js__WEBPACK_IMPORTED_MODULE_1__.h)("div", {
      class: "progress-bar progress-bar-striped progress-bar-animated bg-primary",
      style: {
        width: this.component.value + "%"
      },
      "aria-valuenow": this.component.value,
      "aria-valuemin": "0",
      "aria-valuemax": "100"
    }, slots.default))];
  }

}

const progressBarCss = ".gx-line-clamp{display:-webkit-box;-webkit-box-orient:vertical;-webkit-line-clamp:var(--max-lines);overflow:hidden}.line-measuring{visibility:hidden;position:absolute}gx-progress-bar{display:block}gx-progress-bar[hidden]{display:none !important}gx-progress-bar[hidden][invisible-mode=keep-space]{display:block !important;visibility:hidden}gx-progress-bar .centered{text-align:center}";
const ProgressBar = class {
  constructor(hostRef) {
    (0,_index_10623738_js__WEBPACK_IMPORTED_MODULE_1__.r)(this, hostRef);
    this.renderer = new ProgressBarRender(this);
  }

  render() {
    return (0,_index_10623738_js__WEBPACK_IMPORTED_MODULE_1__.h)(_index_10623738_js__WEBPACK_IMPORTED_MODULE_1__.H, {
      role: "progressbar"
    }, this.renderer.render({
      default: (0,_index_10623738_js__WEBPACK_IMPORTED_MODULE_1__.h)("slot", null)
    }));
  }

  get element() {
    return (0,_index_10623738_js__WEBPACK_IMPORTED_MODULE_1__.g)(this);
  }

};
ProgressBar.style = progressBarCss;
const tableCss = ".gx-line-clamp{display:-webkit-box;-webkit-box-orient:vertical;-webkit-line-clamp:var(--max-lines);overflow:hidden}.line-measuring{visibility:hidden;position:absolute}gx-table{--elevation:0;--margin-top:initial;--margin-right:initial;--margin-bottom:initial;--margin-left:initial;--width:initial;--height:initial;margin-top:var(--margin-top, 0);margin-right:var(--margin-right, 0);margin-bottom:var(--margin-bottom, 0);margin-left:var(--margin-left, 0);-webkit-box-shadow:0 calc(var(--elevation) * 0.125rem) calc(var(--elevation) * 0.25rem) rgba(0, 0, 0, calc(var(--elevation) * 0.075));box-shadow:0 calc(var(--elevation) * 0.125rem) calc(var(--elevation) * 0.25rem) rgba(0, 0, 0, calc(var(--elevation) * 0.075));display:grid;-ms-flex:1;flex:1;overflow:hidden}gx-table[hidden]{display:none !important}gx-table[hidden][invisible-mode=keep-space]{display:grid !important;visibility:hidden}";
const Table = class {
  constructor(hostRef) {
    (0,_index_10623738_js__WEBPACK_IMPORTED_MODULE_1__.r)(this, hostRef);
    this.swipe = (0,_index_10623738_js__WEBPACK_IMPORTED_MODULE_1__.c)(this, "swipe", 7);
    this.swipeUp = (0,_index_10623738_js__WEBPACK_IMPORTED_MODULE_1__.c)(this, "swipeUp", 7);
    this.swipeRight = (0,_index_10623738_js__WEBPACK_IMPORTED_MODULE_1__.c)(this, "swipeRight", 7);
    this.swipeDown = (0,_index_10623738_js__WEBPACK_IMPORTED_MODULE_1__.c)(this, "swipeDown", 7);
    this.swipeLeft = (0,_index_10623738_js__WEBPACK_IMPORTED_MODULE_1__.c)(this, "swipeLeft", 7);
    /**
     * This attribute lets you specify how this element will behave when hidden.
     *
     * | Value        | Details                                                                     |
     * | ------------ | --------------------------------------------------------------------------- |
     * | `keep-space` | The element remains in the document flow, and it does occupy space.         |
     * | `collapse`   | The element is removed form the document flow, and it doesn't occupy space. |
     */

    this.invisibleMode = "collapse";
    /**
     * This attribute lets you specify if the element is disabled.
     * If disabled, it will not fire any user interaction related event
     * (for example, click event).
     */

    this.disabled = false;
    /**
     * True to highlight control when an action is fired.
     */

    this.highlightable = false;
  }

  handleClick(event) {
    if (this.disabled) {
      event.stopPropagation();
      return;
    }
  }

  componentDidLoad() {
    (0,_swipeable_71a0e453_js__WEBPACK_IMPORTED_MODULE_2__.m)(this);
    (0,_highlightable_e5a00dd1_js__WEBPACK_IMPORTED_MODULE_3__.m)(this);
  }

  render() {
    if (this.areasTemplate) {
      this.element.style["gridTemplateAreas"] = this.areasTemplate;
    }

    if (this.columnsTemplate) {
      this.element.style["gridTemplateColumns"] = this.columnsTemplate;
    }

    if (this.rowsTemplate) {
      this.element.style["gridTemplateRows"] = this.rowsTemplate;
    }

    return (0,_index_10623738_js__WEBPACK_IMPORTED_MODULE_1__.h)(_index_10623738_js__WEBPACK_IMPORTED_MODULE_1__.H, null, (0,_index_10623738_js__WEBPACK_IMPORTED_MODULE_1__.h)("slot", null));
  }

  get element() {
    return (0,_index_10623738_js__WEBPACK_IMPORTED_MODULE_1__.g)(this);
  }

};
Table.style = tableCss;
const tableCellCss = ".gx-line-clamp{display:-webkit-box;-webkit-box-orient:vertical;-webkit-line-clamp:var(--max-lines);overflow:hidden}.line-measuring{visibility:hidden;position:absolute}gx-table-cell{direction:var(--direction);overflow:auto;display:-ms-flexbox;display:flex;-ms-flex-direction:row;flex-direction:row}gx-table-cell[hidden]{display:none !important}gx-table-cell[hidden][invisible-mode=keep-space]{display:-ms-flexbox !important;display:flex !important;visibility:hidden}gx-table-cell[overflow-mode=clip]{overflow:hidden}gx-table-cell[overflow-mode=scroll]{overflow:auto}gx-table-cell:not([align])>*,gx-table-cell[align=left]>*{-ms-flex-pack:start;justify-content:flex-start}gx-table-cell[align=center]{-ms-flex-pack:center;justify-content:center}gx-table-cell[align=right]{-ms-flex-pack:end;justify-content:flex-end}gx-table-cell[valign=middle]{-ms-flex-align:center;align-items:center}gx-table-cell[valign=bottom]{-ms-flex-align:end;align-items:flex-end}gx-table-cell.gx-long-content-fade{position:relative}gx-table-cell.gx-long-content-fade::before,gx-table-cell.gx-long-content-fade::after{content:\"\";display:block;position:absolute;-webkit-touch-callout:none;-webkit-user-select:none;-khtml-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;pointer-events:none;background:-webkit-gradient(linear, left top, right top, from(rgba( 255, 255, 255 , 0 )), color-stop(90%, rgba( 255, 255, 255 , 1 )));background:linear-gradient(to right, rgba( 255, 255, 255 , 0 ), rgba( 255, 255, 255 , 1 ) 90%)}gx-table-cell.gx-long-content-fade::before{top:0;bottom:0;right:0;left:auto;width:20%;height:auto}gx-table-cell.gx-long-content-fade::after{top:80%;left:0;right:0;bottom:0;width:auto}";
const TableCell = class {
  constructor(hostRef) {
    (0,_index_10623738_js__WEBPACK_IMPORTED_MODULE_1__.r)(this, hostRef);
    /**
     * Defines the horizontal aligmnent of the content of the cell.
     */

    this.align = "left";
    /**
     * True to add a fading overlay on the right and bottom area of the cell to signify
     * that the content is longer than the space allows.
     */

    this.showContentFade = false;
    /**
     * Defines the vertical aligmnent of the content of the cell.
     */

    this.valign = "top";
  }

  componentDidRender() {
    this.setMinHeight(this.element.firstElementChild);
    this.setMaxHeight();
  }

  componentDidLoad() {
    this.setupObserver(this.element.firstElementChild);
  }

  setupObserver(childElement) {
    if (childElement && childElement.invisibleMode === "collapse") {
      this.observer = new MutationObserver(mutationsList => {
        for (const mutation of mutationsList) {
          if (mutation.type === "attributes" && mutation.attributeName === "hidden") {
            this.setMinHeight(childElement);
          }
        }
      });
      this.observer.observe(childElement, {
        attributes: true,
        childList: false,
        subtree: false
      });
    }
  }

  setMinHeight(childElement) {
    if (childElement) {
      this.element.style.minHeight = childElement.invisibleMode === "collapse" && childElement.hidden ? "0" : this.minHeight;
    }
  }

  setMaxHeight() {
    this.element.style.maxHeight = this.maxHeight;
  }

  disconnectedCallback() {
    if (this.observer !== undefined) {
      this.observer.disconnect();
    }
  }

  render() {
    if (this.area) {
      this.element.style["gridArea"] = this.area;
    }

    return (0,_index_10623738_js__WEBPACK_IMPORTED_MODULE_1__.h)(_index_10623738_js__WEBPACK_IMPORTED_MODULE_1__.H, {
      class: {
        "gx-long-content-fade": this.showContentFade
      }
    }, (0,_index_10623738_js__WEBPACK_IMPORTED_MODULE_1__.h)("slot", null));
  }

  get element() {
    return (0,_index_10623738_js__WEBPACK_IMPORTED_MODULE_1__.g)(this);
  }

};
TableCell.style = tableCellCss;
const textblockCss = ".gx-line-clamp{display:-webkit-box;-webkit-box-orient:vertical;-webkit-line-clamp:var(--max-lines);overflow:hidden}.line-measuring{visibility:hidden;position:absolute}gx-table-cell[min-height][max-height]>gx-textblock>.content.html-content .html-container .inner-content{position:absolute}gx-textblock{--margin-top:initial;--margin-right:initial;--margin-bottom:initial;--margin-left:initial;--width:initial;--height:initial;margin-top:var(--margin-top, 0);margin-right:var(--margin-right, 0);margin-bottom:var(--margin-bottom, 0);margin-left:var(--margin-left, 0);display:-ms-inline-flexbox;display:inline-flex;-ms-flex:1;flex:1;-ms-flex-item-align:stretch;align-self:stretch}gx-textblock .content{text-align:start}gx-textblock .content .html-container,gx-textblock .content .readonly-content-container{-ms-flex-align:start;align-items:flex-start}gx-textblock[hidden]{display:none !important}gx-textblock[hidden][invisible-mode=keep-space]{display:-ms-inline-flexbox !important;display:inline-flex !important;visibility:hidden}gx-textblock[disabled]:not([disabled=false]){pointer-events:none}gx-textblock>.content{--elevation:0;-webkit-box-shadow:0 calc(var(--elevation) * 0.125rem) calc(var(--elevation) * 0.25rem) rgba(0, 0, 0, calc(var(--elevation) * 0.075));box-shadow:0 calc(var(--elevation) * 0.125rem) calc(var(--elevation) * 0.25rem) rgba(0, 0, 0, calc(var(--elevation) * 0.075));display:-ms-flexbox;display:flex;-ms-flex:1;flex:1;-webkit-transition:background-color 0.25s, color 0.25s, border-color 0.25s;transition:background-color 0.25s, color 0.25s, border-color 0.25s}gx-textblock>.content>.readonly-content-container{display:-ms-flexbox;display:flex;-ms-flex:1;flex:1;position:relative;overflow:hidden}gx-textblock>.content>.readonly-content-container>.text-container{position:absolute;width:100%}gx-textblock>.content>.readonly-content-container>.text-container.relative{position:relative}gx-textblock>.content.html-content{text-align:start}gx-textblock>.content.html-content .html-container{display:-ms-flexbox;display:flex;-ms-flex:1;flex:1;position:relative;height:100%;overflow:hidden}gx-textblock>.content.html-content .html-container .inner-content{position:relative;width:100%}[align=center]>gx-textblock .content{text-align:center}[align=right]>gx-textblock .content{text-align:end}[valign=middle]>gx-textblock .content .html-container,[valign=middle]>gx-textblock .content .readonly-content-container{-ms-flex-align:center;align-items:center}[valign=bottom]>gx-textblock .content .html-container,[valign=bottom]>gx-textblock .content .readonly-content-container{-ms-flex-align:end;align-items:flex-end}";
const TextBlock = class {
  constructor(hostRef) {
    (0,_index_10623738_js__WEBPACK_IMPORTED_MODULE_1__.r)(this, hostRef);
    /**
     * This attribute lets you specify an URL. If a URL is specified, the textblock acts as an anchor.
     */

    this.href = "";
    /**
     * This attribute lets you specify how this element will behave when hidden.
     *
     * | Value        | Details                                                                     |
     * | ------------ | --------------------------------------------------------------------------- |
     * | `keep-space` | The element remains in the document flow, and it does occupy space.         |
     * | `collapse`   | The element is removed form the document flow, and it doesn't occupy space. |
     */

    this.invisibleMode = "collapse";
    /**
     * This attribute lets you specify if the element is disabled.
     * If disabled, it will not fire any user interaction related event
     * (for example, click event).
     */

    this.disabled = false;
    /**
     * True to cut text when it overflows, showing an ellipsis.
     */

    this.lineClamp = false;
    /**
     * True to highlight control when an action is fired.
     */

    this.highlightable = false;
    /**
     * It specifies the format that will have the textblock control.
     *
     * If `format` = `HTML`, the textblock control works as an HTML div and the
     * innerHTML will be the same as the `inner` property specifies.
     *
     * If `format` = `Text`, the control works as a normal textblock control and
     * it is affected by most of the defined properties.
     */

    this.format = "Text";
    /**
     * Used as the innerHTML when `format` = `HTML`.
     */

    this.inner = "";
    this.maxLines = 0;
    (0,_line_clamp_b4163b3c_js__WEBPACK_IMPORTED_MODULE_5__.m)(this, ".readonly-content-container", ".line-measuring");
  }

  handleClick(event) {
    event.preventDefault();

    if (this.disabled) {
      event.stopPropagation();
      return;
    }
  }

  componentDidLoad() {
    (0,_highlightable_e5a00dd1_js__WEBPACK_IMPORTED_MODULE_3__.m)(this);
  }

  render() {
    if (this.format == "Text") {
      const body = (0,_index_10623738_js__WEBPACK_IMPORTED_MODULE_1__.h)("div", {
        class: "content text-content"
      }, (0,_index_10623738_js__WEBPACK_IMPORTED_MODULE_1__.h)("div", {
        class: "readonly-content-container"
      }, (0,_index_10623738_js__WEBPACK_IMPORTED_MODULE_1__.h)("div", {
        class: {
          "text-container": true,
          "gx-line-clamp": this.lineClamp,
          relative: !this.lineClamp
        },
        style: {
          "--max-lines": this.lineClamp ? this.maxLines.toString() : "0"
        }
      }, this.lineClamp && (0,_index_10623738_js__WEBPACK_IMPORTED_MODULE_1__.h)("div", {
        class: "line-measuring",
        "aria-hidden": true
      }, "A"), (0,_index_10623738_js__WEBPACK_IMPORTED_MODULE_1__.h)("slot", null))));

      if (this.href) {
        return (0,_index_10623738_js__WEBPACK_IMPORTED_MODULE_1__.h)("a", {
          href: this.href
        }, body);
      }

      return body;
    } else {
      return (0,_index_10623738_js__WEBPACK_IMPORTED_MODULE_1__.h)("div", {
        class: "content html-content"
      }, (0,_index_10623738_js__WEBPACK_IMPORTED_MODULE_1__.h)("div", {
        class: "html-container"
      }, (0,_index_10623738_js__WEBPACK_IMPORTED_MODULE_1__.h)("div", {
        class: "inner-content",
        innerHTML: this.inner
      })));
    }
  }

  get element() {
    return (0,_index_10623738_js__WEBPACK_IMPORTED_MODULE_1__.g)(this);
  }

};
TextBlock.style = textblockCss;


/***/ })

}]);
//# sourceMappingURL=node_modules_genexus_web-controls-library_dist_esm_gx-bootstrap_14_entry_js.js.map