{"version":3,"file":"node_modules_genexus_web-controls-library_dist_esm_gx-map-line_entry_js.js","mappings":";;;;;;;;;;;;;;;AAAkG;AACnB;;AAE/E;AACA;AACA,QAAQ,qDAAgB;AACxB,gCAAgC,qDAAW;AAC3C,gCAAgC,qDAAW;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,8DAAQ;AACpC;AACA;AACA,SAAS;AACT;AACA;AACA,uBAAuB,8DAAW;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,qDAAC,cAAc,qDAAC;AAChC;AACA,oBAAoB,OAAO,qDAAU;AACrC;;AAEkC","sources":["./node_modules/@genexus/web-controls-library/dist/esm/gx-map-line.entry.js"],"sourcesContent":["import { r as registerInstance, c as createEvent, h, g as getElement } from './index-10623738.js';\nimport { a as polyline, p as parseCoords } from './coordsValidate-cde38689.js';\n\nconst MapLine = class {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n        this.gxMapLineDidLoad = createEvent(this, \"gxMapLineDidLoad\", 7);\n        this.gxMapLineDeleted = createEvent(this, \"gxMapLineDeleted\", 7);\n        /**\n         * The coordinates where the line/polyline will appear in the map.\n         *\n         */\n        this.coords = \"0, 0\";\n    }\n    setupLine(coords) {\n        this.lineInstance = polyline(coords, {\n            color: \"red\",\n            weight: 3\n        });\n    }\n    componentDidLoad() {\n        const coords = parseCoords(this.coords);\n        if (coords !== null) {\n            this.setupLine(coords);\n        }\n        else {\n            console.warn(\"GX warning: Cannot read 'coords' attribute, default coords set (gx-map-line)\", this.element);\n            this.setupLine([0, 0]);\n        }\n        this.gxMapLineDidLoad.emit(this.lineInstance);\n    }\n    componentDidUnload() {\n        this.gxMapLineDeleted.emit(this.lineInstance);\n    }\n    render() {\n        return (h(\"div\", null, h(\"slot\", null)));\n    }\n    get element() { return getElement(this); }\n};\n\nexport { MapLine as gx_map_line };\n"],"names":[],"sourceRoot":"webpack:///"}