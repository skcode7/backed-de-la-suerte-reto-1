"use strict";
(self["webpackChunkgenexus_web_application"] = self["webpackChunkgenexus_web_application"] || []).push([["node_modules_genexus_web-controls-library_dist_esm_gx-select-option_entry_js"],{

/***/ 4037:
/*!***************************************************************************************!*\
  !*** ./node_modules/@genexus/web-controls-library/dist/esm/gx-select-option.entry.js ***!
  \***************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "gx_select_option": () => (/* binding */ SelectOption)
/* harmony export */ });
/* harmony import */ var _index_10623738_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./index-10623738.js */ 9689);


const SelectOption = class {
    constructor(hostRef) {
        (0,_index_10623738_js__WEBPACK_IMPORTED_MODULE_0__.r)(this, hostRef);
        this.change = (0,_index_10623738_js__WEBPACK_IMPORTED_MODULE_0__.c)(this, "change", 7);
        this.gxSelect = (0,_index_10623738_js__WEBPACK_IMPORTED_MODULE_0__.c)(this, "gxSelect", 7);
        this.gxDisable = (0,_index_10623738_js__WEBPACK_IMPORTED_MODULE_0__.c)(this, "gxDisable", 7);
        this.gxSelectDidLoad = (0,_index_10623738_js__WEBPACK_IMPORTED_MODULE_0__.c)(this, "gxSelectDidLoad", 7);
        this.gxSelectDidUnload = (0,_index_10623738_js__WEBPACK_IMPORTED_MODULE_0__.c)(this, "gxSelectDidUnload", 7);
        /**
         * Indicates that the control is selected by default.
         */
        this.selected = false;
        /**
         * This attribute lets you specify if the element is disabled.
         * If disabled, it will not fire any user interaction related event
         * (for example, click event).
         */
        this.disabled = false;
    }
    selectedChanged(isSelected) {
        if (isSelected) {
            this.gxSelect.emit({ select: this });
        }
    }
    disabledChanged(isDisabled) {
        if (isDisabled) {
            this.gxDisable.emit({ select: this });
        }
    }
    valueChanged() {
        this.change.emit({ select: this });
    }
    componentDidLoad() {
        this.gxSelectDidLoad.emit({ select: this });
    }
    componentDidUnload() {
        this.gxSelectDidUnload.emit({ select: this });
    }
    render() {
        return ((0,_index_10623738_js__WEBPACK_IMPORTED_MODULE_0__.h)(_index_10623738_js__WEBPACK_IMPORTED_MODULE_0__.H, { "aria-hidden": "true", hidden: true }, (0,_index_10623738_js__WEBPACK_IMPORTED_MODULE_0__.h)("slot", null)));
    }
    get element() { return (0,_index_10623738_js__WEBPACK_IMPORTED_MODULE_0__.g)(this); }
    static get watchers() { return {
        "selected": ["selectedChanged"],
        "disabled": ["disabledChanged"],
        "value": ["valueChanged"]
    }; }
};




/***/ })

}]);
//# sourceMappingURL=node_modules_genexus_web-controls-library_dist_esm_gx-select-option_entry_js.js.map