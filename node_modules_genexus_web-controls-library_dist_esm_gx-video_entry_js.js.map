{"version":3,"file":"node_modules_genexus_web-controls-library_dist_esm_gx-video_entry_js.js","mappings":";;;;;;;;;;;;;;AAAkG;;AAElG,iCAAiC,oBAAoB,4BAA4B,oCAAoC,gBAAgB,gBAAgB,kBAAkB,kBAAkB,SAAS,uBAAuB,sBAAsB,oBAAoB,aAAa,WAAW,iBAAiB,wBAAwB,4CAA4C,+BAA+B,wBAAwB,kBAAkB,aAAa,8BAA8B,4BAA4B,oBAAoB,aAAa,WAAW,OAAO,oBAAoB,WAAW,OAAO,YAAY;;AAErmB;AACA;AACA,QAAQ,qDAAgB;AACxB,uBAAuB,qDAAW;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,iBAAiB,QAAQ,iBAAiB;AAC5D;AACA;AACA;AACA,gBAAgB,qDAAC,UAAU,iDAAiD,EAAE,qDAAC,aAAa,qCAAqC;AACjI;AACA,oBAAoB,OAAO,qDAAU;AACrC;AACA;;AAE6B","sources":["./node_modules/@genexus/web-controls-library/dist/esm/gx-video.entry.js"],"sourcesContent":["import { r as registerInstance, c as createEvent, h, g as getElement } from './index-10623738.js';\n\nconst videoCss = \".gx-line-clamp{display:-webkit-box;-webkit-box-orient:vertical;-webkit-line-clamp:var(--max-lines);overflow:hidden}.line-measuring{visibility:hidden;position:absolute}gx-video{--gx-video-height:100%;--gx-video-width:100%;display:-ms-flexbox;display:flex;width:100%}gx-video[hidden]{display:none !important}gx-video[hidden][invisible-mode=keep-space]{display:-ms-flexbox !important;display:flex !important;visibility:hidden}gx-video>div{height:var(--gx-video-height);width:var(--gx-video-width);display:-ms-flexbox;display:flex;-ms-flex:1;flex:1}gx-video>div iframe{-ms-flex:1;flex:1;border:none}\";\n\nconst Video = class {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n        this.gxClick = createEvent(this, \"gxClick\", 7);\n        /**\n         * This attribute lets you specify if the element is disabled.\n         * If disabled, it will not fire any user interaction related event\n         * (for example, click event).\n         */\n        this.disabled = false;\n        /**\n         * This attribute lets you specify how this element will behave when hidden.\n         *\n         * | Value        | Details                                                                     |\n         * | ------------ | --------------------------------------------------------------------------- |\n         * | `keep-space` | The element remains in the document flow, and it does occupy space.         |\n         * | `collapse`   | The element is removed form the document flow, and it doesn't occupy space. |\n         */\n        this.invisibleMode = \"collapse\";\n        this.handleClick = this.handleClick.bind(this);\n    }\n    handleClick(event) {\n        this.gxClick.emit(event);\n        event.preventDefault();\n    }\n    parseYoutubeSrc(src) {\n        const domainIdArray = src.split(\"watch?v=\");\n        return `${domainIdArray[0]}embed/${domainIdArray[1]}`;\n    }\n    render() {\n        const handleClick = !this.disabled ? this.handleClick : null;\n        return (h(\"div\", { class: \"gxVideoContainer\", onClick: handleClick }, h(\"iframe\", { src: this.parseYoutubeSrc(this.src) })));\n    }\n    get element() { return getElement(this); }\n};\nVideo.style = videoCss;\n\nexport { Video as gx_video };\n"],"names":[],"sourceRoot":"webpack:///"}