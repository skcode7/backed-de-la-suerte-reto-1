{"version":3,"file":"node_modules_genexus_web-controls-library_dist_esm_gx-password-edit_entry_js.js","mappings":"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","sources":["./node_modules/@genexus/web-controls-library/dist/esm/gx-password-edit.entry.js"],"sourcesContent":["import { h, r as registerInstance, c as createEvent, g as getElement } from './index-10623738.js';\n\nclass PasswordEditRender {\n    constructor(component) {\n        this.component = component;\n        this.handleChange = this.handleChange.bind(this);\n        this.handleInput = this.handleInput.bind(this);\n    }\n    getNativeInputId() {\n        return this.innerEdit.getNativeInputId();\n    }\n    getValueFromEvent(event) {\n        return event.target && event.target.value;\n    }\n    handleChange(event) {\n        this.component.value = this.getValueFromEvent(event);\n        this.component.change.emit(event);\n    }\n    handleInput(event) {\n        this.component.value = this.getValueFromEvent(event);\n        this.component.input.emit(event);\n    }\n    /**\n     * Update the native input element when the value changes\n     */\n    valueChanged() {\n        const innerEdit = this.innerEdit;\n        if (innerEdit && innerEdit.value !== this.component.value) {\n            innerEdit.value = this.component.value;\n        }\n    }\n    componentDidUnload() {\n        this.innerEdit = null;\n    }\n    render() {\n        const passwordEdit = this.component;\n        return (h(\"gx-edit\", { ref: input => (this.innerEdit = input), \"css-class\": passwordEdit.cssClass, disabled: passwordEdit.disabled, id: `gx-password-edit-${passwordEdit.element.id}`, placeholder: passwordEdit.placeholder, readonly: passwordEdit.readonly, \"show-trigger\": !passwordEdit.readonly && passwordEdit.showRevealButton, \"trigger-class\": passwordEdit.revealed ? \"active\" : \"\", \"trigger-text\": passwordEdit.revealed\n                ? passwordEdit.revealButtonTextOff\n                : passwordEdit.revealButtonTextOn, type: passwordEdit.revealed ? \"text\" : \"password\", value: passwordEdit.value, onChange: this.handleChange, onInput: this.handleInput },\n            h(\"i\", { class: \"icon icon-eye\" + (passwordEdit.revealed ? \"-slash\" : \"\"), slot: \"trigger-content\" })));\n    }\n}\n\nconst passwordEditCss = \".gx-line-clamp{display:-webkit-box;-webkit-box-orient:vertical;-webkit-line-clamp:var(--max-lines);overflow:hidden}.line-measuring{visibility:hidden;position:absolute}gx-password-edit{display:block;-ms-flex:1;flex:1}gx-password-edit[hidden]{display:none !important}gx-password-edit[hidden][invisible-mode=keep-space]{display:block !important;visibility:hidden}gx-password-edit .icon{display:inline-block;height:1em;width:1em;margin-bottom:-3px;-webkit-filter:opacity(0.7);filter:opacity(0.7);background-repeat:no-repeat;background-size:contain}gx-password-edit button:hover .icon{-webkit-filter:invert(1);filter:invert(1)}gx-password-edit .icon-eye{background-image:url('data:image/svg+xml;utf8,<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" viewBox=\\\"0 0 576 512\\\"><path d=\\\"M288 144a110.94 110.94 0 0 0-31.24 5 55.4 55.4 0 0 1 7.24 27 56 56 0 0 1-56 56 55.4 55.4 0 0 1-27-7.24A111.71 111.71 0 1 0 288 144zm284.52 97.4C518.29 135.59 410.93 64 288 64S57.68 135.64 3.48 241.41a32.35 32.35 0 0 0 0 29.19C57.71 376.41 165.07 448 288 448s230.32-71.64 284.52-177.41a32.35 32.35 0 0 0 0-29.19zM288 400c-98.65 0-189.09-55-237.93-144C98.91 167 189.34 112 288 112s189.09 55 237.93 144C477.1 345 386.66 400 288 400z\\\"/></svg>')}gx-password-edit .icon-eye-slash{background-image:url('data:image/svg+xml;utf8,<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" viewBox=\\\"0 0 640 512\\\"><path d=\\\"M634 471L36 3.51A16 16 0 0 0 13.51 6l-10 12.49A16 16 0 0 0 6 41l598 467.49a16 16 0 0 0 22.49-2.49l10-12.49A16 16 0 0 0 634 471zM296.79 146.47l134.79 105.38C429.36 191.91 380.48 144 320 144a112.26 112.26 0 0 0-23.21 2.47zm46.42 219.07L208.42 260.16C210.65 320.09 259.53 368 320 368a113 113 0 0 0 23.21-2.46zM320 112c98.65 0 189.09 55 237.93 144a285.53 285.53 0 0 1-44 60.2l37.74 29.5a333.7 333.7 0 0 0 52.9-75.11 32.35 32.35 0 0 0 0-29.19C550.29 135.59 442.93 64 320 64c-36.7 0-71.71 7-104.63 18.81l46.41 36.29c18.94-4.3 38.34-7.1 58.22-7.1zm0 288c-98.65 0-189.08-55-237.93-144a285.47 285.47 0 0 1 44.05-60.19l-37.74-29.5a333.6 333.6 0 0 0-52.89 75.1 32.35 32.35 0 0 0 0 29.19C89.72 376.41 197.08 448 320 448c36.7 0 71.71-7.05 104.63-18.81l-46.41-36.28C359.28 397.2 339.89 400 320 400z\\\"/></svg>')}gx-password-edit gx-edit{height:100%}\";\n\nconst PasswordEdit = class {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n        this.change = createEvent(this, \"change\", 7);\n        this.input = createEvent(this, \"input\", 7);\n        /**\n         * This attribute lets you specify how this element will behave when hidden.\n         *\n         * | Value        | Details                                                                     |\n         * | ------------ | --------------------------------------------------------------------------- |\n         * | `keep-space` | The element remains in the document flow, and it does occupy space.         |\n         * | `collapse`   | The element is removed form the document flow, and it doesn't occupy space. |\n         */\n        this.invisibleMode = \"collapse\";\n        /**\n         * This attribute lets you specify if the element is disabled.\n         * If disabled, it will not fire any user interaction related event\n         * (for example, click event).\n         */\n        this.disabled = false;\n        /**\n         * Indicates if the value is revealed or masked.\n         */\n        this.revealed = false;\n        this.renderer = new PasswordEditRender(this);\n    }\n    /**\n     * Returns the id of the inner `input` element (if set).\n     */\n    async getNativeInputId() {\n        return this.renderer.getNativeInputId();\n    }\n    valueChanged() {\n        this.renderer.valueChanged();\n    }\n    handleTriggerClick() {\n        this.revealed = !this.revealed;\n    }\n    render() {\n        return this.renderer.render();\n    }\n    componentDidUnload() {\n        this.renderer.componentDidUnload();\n    }\n    get element() { return getElement(this); }\n    static get watchers() { return {\n        \"value\": [\"valueChanged\"]\n    }; }\n};\nPasswordEdit.style = passwordEditCss;\n\nexport { PasswordEdit as gx_password_edit };\n"],"names":["h","r","registerInstance","c","createEvent","g","getElement","PasswordEditRender","constructor","component","handleChange","bind","handleInput","getNativeInputId","innerEdit","getValueFromEvent","event","target","value","change","emit","input","valueChanged","componentDidUnload","render","passwordEdit","ref","cssClass","disabled","id","element","placeholder","readonly","showRevealButton","revealed","revealButtonTextOff","revealButtonTextOn","type","onChange","onInput","class","slot","passwordEditCss","PasswordEdit","hostRef","invisibleMode","renderer","handleTriggerClick","watchers","style","gx_password_edit"],"sourceRoot":"webpack:///"}