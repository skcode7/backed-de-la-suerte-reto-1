"use strict";
(self["webpackChunkgenexus_web_application"] = self["webpackChunkgenexus_web_application"] || []).push([["node_modules_genexus_web-controls-library_dist_esm_gx-tab_3_entry_js"],{

/***/ 8637:
/*!*******************************************************************************!*\
  !*** ./node_modules/@genexus/web-controls-library/dist/esm/gx-tab_3.entry.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "gx_tab": () => (/* binding */ Tab),
/* harmony export */   "gx_tab_caption": () => (/* binding */ TabCaption),
/* harmony export */   "gx_tab_page": () => (/* binding */ TabPage)
/* harmony export */ });
/* harmony import */ var _index_10623738_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./index-10623738.js */ 9689);
/* harmony import */ var _highlightable_e5a00dd1_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./highlightable-e5a00dd1.js */ 6847);
/* harmony import */ var _css_variables_watcher_cf910941_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./css-variables-watcher-cf910941.js */ 9438);
/* harmony import */ var _image_position_f497f3df_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./image-position-f497f3df.js */ 839);





const tabCss = ".gx-line-clamp{display:-webkit-box;-webkit-box-orient:vertical;-webkit-line-clamp:var(--max-lines);overflow:hidden}.line-measuring{visibility:hidden;position:absolute}gx-tab{--elevation:0;--tab-strip-elevation:0;--tab-strip-indicator-color:transparent;--tab-strip-separator-color:#ffffff80;--tab-strip-background-color:transparent;--tab-strip-height:auto;--tab-caption-vertical-padding:calc(2px + 0.125em);--tab-caption-horizontal-padding:23px;--tab-caption-image-vertical-margin:6px;--tab-caption-image-horizontal-margin:2px;-webkit-box-shadow:0 calc(var(--elevation) * 0.125rem) calc(var(--elevation) * 0.25rem) rgba(0, 0, 0, calc(var(--elevation) * 0.075));box-shadow:0 calc(var(--elevation) * 0.125rem) calc(var(--elevation) * 0.25rem) rgba(0, 0, 0, calc(var(--elevation) * 0.075));display:-ms-flexbox;display:flex;-ms-flex:1;flex:1;width:100%;overflow:hidden;-webkit-transition:background-color 0.25s, border-color 0.25s, -webkit-box-shadow 0.25s;transition:background-color 0.25s, border-color 0.25s, -webkit-box-shadow 0.25s;transition:background-color 0.25s, border-color 0.25s, box-shadow 0.25s;transition:background-color 0.25s, border-color 0.25s, box-shadow 0.25s, -webkit-box-shadow 0.25s}gx-tab[hidden]{display:none !important}gx-tab[hidden][invisible-mode=keep-space]{display:-ms-flexbox !important;display:flex !important;visibility:hidden}gx-tab[tabs-distribution=fixed-size]>div .gx-nav-tabs .gx-nav-tabs-table{table-layout:fixed;width:100%}gx-tab[tabs-distribution=fixed-size]>div .gx-nav-tabs .gx-nav-tabs-table gx-tab-caption.gx-tab-caption .image-and-link-container span{overflow:hidden}gx-tab>div{display:grid;-ms-flex:1;flex:1;height:100%;--tab-scrollbar-background-color:var(\n    --gx-scrollbar-background-color,\n    #f5f5f5\n  );--tab-scrollbar-thumb-color:var(--gx-scrollbar-thumb-color, #555)}gx-tab>div .gx-nav-tabs{--elevation:var(--tab-strip-elevation);height:var(--tab-strip-height);overflow-x:hidden;overflow-y:auto;overflow-y:overlay;white-space:nowrap;-webkit-transition:-webkit-box-shadow 0.25s;transition:-webkit-box-shadow 0.25s;transition:box-shadow 0.25s;transition:box-shadow 0.25s, -webkit-box-shadow 0.25s;scrollbar-width:thin;scrollbar-color:var(--tab-scrollbar-thumb-color) var(--tab-scrollbar-background-color)}gx-tab>div .gx-nav-tabs:hover{overflow-x:auto;overflow-x:overlay}gx-tab>div .gx-nav-tabs::-webkit-scrollbar{width:5px;height:5px}gx-tab>div .gx-nav-tabs::-webkit-scrollbar-track{background:var(--tab-scrollbar-background-color)}gx-tab>div .gx-nav-tabs::-webkit-scrollbar-thumb{background-color:var(--tab-scrollbar-thumb-color);border-radius:6px;border:1px solid var(--tab-scrollbar-background-color)}gx-tab>div .gx-nav-tabs .gx-nav-tabs-table{display:table;height:100%}gx-tab>div .gx-nav-tabs .gx-nav-tabs-table-filler{display:table-cell;width:100%;background-color:var(--tab-strip-background-color);border-top:1px solid transparent;border-bottom:1px solid transparent;-webkit-transition:background-color 0.25s, border-color 0.25s;transition:background-color 0.25s, border-color 0.25s}gx-tab>div[data-position=top]{grid-template-rows:minmax(auto, -webkit-max-content);grid-template-rows:minmax(auto, max-content)}gx-tab>div[data-position=top] .gx-nav-tabs{-webkit-box-shadow:0 calc(var(--elevation) * 0.125rem) calc(var(--elevation) * 0.25rem) rgba(0, 0, 0, calc(var(--elevation) * 0.075));box-shadow:0 calc(var(--elevation) * 0.125rem) calc(var(--elevation) * 0.25rem) rgba(0, 0, 0, calc(var(--elevation) * 0.075))}gx-tab>div[data-position=top] .gx-nav-tabs .gx-nav-tabs-table-filler{border-bottom-color:var(--tab-strip-separator-color)}gx-tab>div[data-position=bottom]{grid-template-rows:auto minmax(auto, -webkit-max-content);grid-template-rows:auto minmax(auto, max-content)}gx-tab>div[data-position=bottom] .gx-nav-tabs{-webkit-box-shadow:0 calc(var(--elevation) * -0.125rem) calc(var(--elevation) * 0.25rem) rgba(0, 0, 0, calc(var(--elevation) * 0.075));box-shadow:0 calc(var(--elevation) * -0.125rem) calc(var(--elevation) * 0.25rem) rgba(0, 0, 0, calc(var(--elevation) * 0.075));-ms-flex-order:1;order:1}gx-tab>div[data-position=bottom] .gx-nav-tabs .gx-nav-tabs-table-filler{border-top-color:var(--tab-strip-separator-color)}gx-tab>div .gx-tab-content{display:-ms-flexbox;display:flex;height:100%;overflow:auto}";

const BASE_TABLIST_SELECTOR = ":scope > [role='tablist']";
const Tab = class {
    constructor(hostRef) {
        (0,_index_10623738_js__WEBPACK_IMPORTED_MODULE_0__.r)(this, hostRef);
        this.tabChange = (0,_index_10623738_js__WEBPACK_IMPORTED_MODULE_0__.c)(this, "tabChange", 7);
        /**
         * This attribute lets you specify how this element will behave when hidden.
         *
         * | Value        | Details                                                                     |
         * | ------------ | --------------------------------------------------------------------------- |
         * | `keep-space` | The element remains in the document flow, and it does occupy space.         |
         * | `collapse`   | The element is removed form the document flow, and it doesn't occupy space. |
         */
        this.invisibleMode = "collapse";
        /**
         * True to highlight control when an action is fired.
         */
        this.highlightable = false;
        /**
         * Specifies the position to show the tabs.
         */
        this.tabsPosition = "top";
        /**
         * Defines how the tabs will be distributed in the Strip.
         *
         * | Value        | Details                                                                            |
         * | ------------ | ---------------------------------------------------------------------------------- |
         * | `scoll`      | Allows scrolling the tab control when the number of tabs exceeds the screen width. |
         * | `fixed-size` | Tabs are fixed size. Used with any amount of tabs.                                 |
         */
        this.tabsDistribution = "scroll";
        (0,_css_variables_watcher_cf910941_js__WEBPACK_IMPORTED_MODULE_2__.c)(this, [
            {
                cssVariableName: "--tabs-position",
                propertyName: "tabsPosition"
            }
        ]);
    }
    tabClickHandler(event) {
        const targetElement = event.target;
        if (targetElement.closest("gx-tab") !== this.element) {
            return;
        }
        const oldSelectedTab = this.lastSelectedTab;
        this.setSelectedTab(targetElement);
        if (oldSelectedTab !== this.lastSelectedTab) {
            this.tabChange.emit(event);
        }
    }
    setSelectedTab(captionElement) {
        this.lastSelectedTab = captionElement;
        this.getCaptionSlots().forEach((slotElement, i) => {
            slotElement.selected = slotElement === captionElement;
            const nthChild = i + 1;
            const pageElement = this.element.querySelector(`:scope > gx-tab-page:nth-child(${nthChild}), 
        ${BASE_TABLIST_SELECTOR} > .gx-tab-content > gx-tab-page:nth-child(${nthChild})`);
            this.mapPageToCaptionSelection(slotElement, pageElement);
        });
    }
    getCaptionSlots() {
        return Array.from(this.element.querySelectorAll(`:scope > [slot='caption'], 
         ${BASE_TABLIST_SELECTOR} > .gx-nav-tabs > .gx-nav-tabs-table > [slot='caption']`));
    }
    mapPageToCaptionSelection(captionElement, pageElement) {
        pageElement.classList.toggle("gx-tab-page--active", !!captionElement.selected);
    }
    componentDidLoad() {
        (0,_highlightable_e5a00dd1_js__WEBPACK_IMPORTED_MODULE_1__.m)(this);
        this.linkTabs(true);
    }
    componentDidUpdate() {
        this.linkTabs();
    }
    disconnectedCallback() {
        this.lastSelectedTab = null;
    }
    linkTabs(resolveSelected = false) {
        const captionSlots = this.getCaptionSlots();
        const pageSlots = this.getPageSlots();
        if (captionSlots.length === pageSlots.length) {
            captionSlots.forEach((captionElement, i) => {
                const pageElement = pageSlots[i];
                captionElement.setAttribute("aria-controls", pageElement.id);
                pageElement.setAttribute("aria-labelledby", captionElement.id);
                if (resolveSelected) {
                    this.mapPageToCaptionSelection(captionElement, pageElement);
                    if (captionElement.selected) {
                        this.lastSelectedTab = captionElement;
                    }
                }
            });
        }
    }
    render() {
        this.setCaptionSlotsClass();
        this.setPageSlotsClass();
        return ((0,_index_10623738_js__WEBPACK_IMPORTED_MODULE_0__.h)(_index_10623738_js__WEBPACK_IMPORTED_MODULE_0__.H, null, (0,_index_10623738_js__WEBPACK_IMPORTED_MODULE_0__.h)("div", { role: "tablist", "data-position": this.tabsPosition }, (0,_index_10623738_js__WEBPACK_IMPORTED_MODULE_0__.h)("div", { class: "gx-nav-tabs" }, (0,_index_10623738_js__WEBPACK_IMPORTED_MODULE_0__.h)("div", { class: "gx-nav-tabs-table" }, (0,_index_10623738_js__WEBPACK_IMPORTED_MODULE_0__.h)("slot", { name: "caption" }), this.tabsDistribution === "scroll" && ((0,_index_10623738_js__WEBPACK_IMPORTED_MODULE_0__.h)("div", { "aria-hidden": "true", class: "gx-nav-tabs-table-filler" })))), (0,_index_10623738_js__WEBPACK_IMPORTED_MODULE_0__.h)("div", { class: "gx-tab-content" }, (0,_index_10623738_js__WEBPACK_IMPORTED_MODULE_0__.h)("slot", { name: "page" })))));
    }
    setCaptionSlotsClass() {
        this.getCaptionSlots().forEach(captionElement => {
            if (!captionElement.classList.contains("gx-nav-item")) {
                captionElement.classList.add("gx-nav-item");
            }
        });
    }
    setPageSlotsClass() {
        this.getPageSlots().forEach(pageElement => {
            if (!pageElement.classList.contains("gx-tab-page")) {
                pageElement.classList.add("gx-tab-page");
            }
        });
    }
    getPageSlots() {
        return Array.from(this.element.querySelectorAll(`:scope > [slot='page'], 
         ${BASE_TABLIST_SELECTOR} > .gx-tab-content > [slot='page']`));
    }
    get element() { return (0,_index_10623738_js__WEBPACK_IMPORTED_MODULE_0__.g)(this); }
};
Tab.style = tabCss;

const tabCaptionCss = ".gx-line-clamp{display:-webkit-box;-webkit-box-orient:vertical;-webkit-line-clamp:var(--max-lines);overflow:hidden}.line-measuring{visibility:hidden;position:absolute}[data-position=top] gx-tab-caption.gx-tab-caption .gx-nav-link{padding:calc(var(--tab-caption-vertical-padding) - 3px) var(--tab-caption-horizontal-padding) calc(var(--tab-caption-vertical-padding) - 1px) var(--tab-caption-horizontal-padding);border-top:3px solid transparent;border-bottom:1px solid var(--tab-strip-separator-color)}[data-position=top] gx-tab-caption.gx-tab-caption--active .gx-nav-link{border-top-color:var(--tab-strip-indicator-color);border-bottom-color:transparent}[data-position=bottom] gx-tab-caption.gx-tab-caption .gx-nav-link{padding:calc(var(--tab-caption-vertical-padding) - 1px) var(--tab-caption-horizontal-padding) calc(var(--tab-caption-vertical-padding) - 3px) var(--tab-caption-horizontal-padding);border-top:1px solid var(--tab-strip-separator-color);border-bottom:3px solid transparent}[data-position=bottom] gx-tab-caption.gx-tab-caption--active .gx-nav-link{border-top-color:transparent;border-bottom-color:var(--tab-strip-indicator-color)}gx-tab-caption{display:table-cell;font-size:12px;font-weight:600}gx-tab-caption[hidden]{display:none !important}gx-tab-caption[hidden][invisible-mode=keep-space]{display:table-cell !important;visibility:hidden}gx-tab-caption.gx-image-position--before [slot=main-image],gx-tab-caption.gx-image-position--before [slot=disabled-image]{margin:0 var(--tab-caption-image-vertical-margin)}gx-tab-caption.gx-image-position--after [slot=main-image],gx-tab-caption.gx-image-position--after [slot=disabled-image]{margin:0 var(--tab-caption-image-vertical-margin)}gx-tab-caption.gx-image-position--above [slot=main-image],gx-tab-caption.gx-image-position--above [slot=disabled-image]{margin:var(--tab-caption-image-horizontal-margin) 0}gx-tab-caption.gx-image-position--below [slot=main-image],gx-tab-caption.gx-image-position--below [slot=disabled-image]{margin:var(--tab-caption-image-horizontal-margin) 0}gx-tab-caption>.image-and-link-container a{-ms-flex:1;flex:1;display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column;position:relative;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center}gx-tab-caption>.image-and-link-container a>img[slot=disabled-image]{display:none}gx-tab-caption.gx-image-position--below>.image-and-link-container a>img{-ms-flex-order:99;order:99}gx-tab-caption.gx-image-position--before>.image-and-link-container a{-ms-flex-direction:row;flex-direction:row}gx-tab-caption.gx-image-position--after>.image-and-link-container a{-ms-flex-direction:row;flex-direction:row}gx-tab-caption.gx-image-position--after>.image-and-link-container a>img{-ms-flex-order:99;order:99}gx-tab-caption.gx-image-position--behind>.image-and-link-container a{-ms-flex-direction:column;flex-direction:column}gx-tab-caption.gx-image-position--behind>.image-and-link-container a>img{position:absolute}gx-tab-caption.gx-image-position--behind>.image-and-link-container a>span{z-index:1}gx-tab-caption.gx-image-position--hide-main>.image-and-link-container a>img[slot=main-image]{display:none}gx-tab-caption:not(.gx-tab-caption--active)>.image-and-link-container a>img[slot=disabled-image]{display:inline-block}gx-tab-caption [slot=main-image],gx-tab-caption [slot=disabled-image]{max-height:18px;max-width:18px;-o-object-fit:contain;object-fit:contain}gx-tab-caption.gx-tab-caption{background-color:var(--tab-strip-background-color);height:100%;-webkit-transition:background-color 0.25s, -webkit-filter 0.25s;transition:background-color 0.25s, -webkit-filter 0.25s;transition:background-color 0.25s, filter 0.25s;transition:background-color 0.25s, filter 0.25s, -webkit-filter 0.25s}gx-tab-caption.gx-tab-caption .image-and-link-container{display:inline-block;vertical-align:top;width:100%;height:100%}gx-tab-caption.gx-tab-caption .image-and-link-container .gx-nav-link{display:-ms-flexbox;display:flex;height:100%;color:inherit;overflow:hidden;-webkit-transition:background-color 0.25s, color 0.25s, border-color 0.25s;transition:background-color 0.25s, color 0.25s, border-color 0.25s;white-space:nowrap}gx-tab-caption.gx-tab-caption .image-and-link-container .gx-nav-link:active,gx-tab-caption.gx-tab-caption .image-and-link-container .gx-nav-link:focus,gx-tab-caption.gx-tab-caption .image-and-link-container .gx-nav-link:hover,gx-tab-caption.gx-tab-caption .image-and-link-container .gx-nav-link:visited{color:none;text-decoration:none;outline:0}gx-tab-caption.gx-tab-caption .image-and-link-container .gx-nav-link>span{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;height:100%;max-width:100%;min-height:1em;padding-top:0.125em}gx-tab-caption.gx-tab-caption[aria-selected=false]:hover:not(:active){-webkit-filter:brightness(90%);filter:brightness(90%)}gx-tab-caption.gx-tab-caption--disabled{-webkit-filter:opacity(0.5);filter:opacity(0.5);pointer-events:none}";

let autoTabId = 0;
const TabCaption = class {
    constructor(hostRef) {
        (0,_index_10623738_js__WEBPACK_IMPORTED_MODULE_0__.r)(this, hostRef);
        this.tabSelect = (0,_index_10623738_js__WEBPACK_IMPORTED_MODULE_0__.c)(this, "tabSelect", 7);
        this.hasDisabledImage = false;
        /**
         * This attribute lets you specify if the tab page is disabled
         *
         */
        this.disabled = false;
        /**
         * This attribute lets you specify the relative location of the image to the text.
         *
         * | Value    | Details                                                 |
         * | -------- | ------------------------------------------------------- |
         * | `above`  | The image is located above the text.                    |
         * | `before` | The image is located before the text, in the same line. |
         * | `after`  | The image is located after the text, in the same line.  |
         * | `below`  | The image is located below the text.                    |
         * | `behind` | The image is located behind the text.                   |
         */
        this.imagePosition = "above";
        /**
         * This attribute lets you specify if the tab page corresponding to this caption is selected
         *
         */
        this.selected = false;
        /**
         * True to highlight control when an action is fired.
         */
        this.highlightable = false;
        this.clickHandler = this.clickHandler.bind(this);
    }
    selectedHandler() {
        if (this.selected) {
            this.tabSelect.emit(event);
        }
    }
    // Used to make the caption highlightable when `disabled = false`
    highlightableHandler() {
        this.highlightable = !this.disabled;
        (0,_highlightable_e5a00dd1_js__WEBPACK_IMPORTED_MODULE_1__.m)(this);
    }
    componentWillLoad() {
        if (!this.element.id) {
            this.element.id = `gx-tab-caption-auto-id-${autoTabId++}`;
        }
        this.hasDisabledImage =
            this.element.querySelector("[slot='disabled-image']") !== null;
    }
    componentDidLoad() {
        this.highlightable = !this.disabled;
        (0,_highlightable_e5a00dd1_js__WEBPACK_IMPORTED_MODULE_1__.m)(this);
    }
    render() {
        this.element.setAttribute("aria-selected", (!!this.selected).toString());
        return ((0,_index_10623738_js__WEBPACK_IMPORTED_MODULE_0__.h)(_index_10623738_js__WEBPACK_IMPORTED_MODULE_0__.H, { role: "tab", class: {
                "gx-tab-caption": true,
                "gx-tab-caption--active": this.selected,
                "gx-tab-caption--disabled": this.disabled,
                [(0,_image_position_f497f3df_js__WEBPACK_IMPORTED_MODULE_3__.a)(this.imagePosition)]: true,
                [_image_position_f497f3df_js__WEBPACK_IMPORTED_MODULE_3__.h]: !this.selected && this.hasDisabledImage
            } }, (0,_index_10623738_js__WEBPACK_IMPORTED_MODULE_0__.h)("div", { class: "image-and-link-container" }, (0,_index_10623738_js__WEBPACK_IMPORTED_MODULE_0__.h)("a", { class: {
                "gx-nav-link": true
            }, href: "#", onClick: this.clickHandler }, (0,_image_position_f497f3df_js__WEBPACK_IMPORTED_MODULE_3__.i)({
            default: (0,_index_10623738_js__WEBPACK_IMPORTED_MODULE_0__.h)("slot", null),
            disabledImage: (0,_index_10623738_js__WEBPACK_IMPORTED_MODULE_0__.h)("slot", { name: "disabled-image" }),
            mainImage: (0,_index_10623738_js__WEBPACK_IMPORTED_MODULE_0__.h)("slot", { name: "main-image" })
        })))));
    }
    clickHandler(event) {
        event.preventDefault();
        if (!this.disabled) {
            this.selected = true;
        }
    }
    get element() { return (0,_index_10623738_js__WEBPACK_IMPORTED_MODULE_0__.g)(this); }
    static get watchers() { return {
        "selected": ["selectedHandler"],
        "disabled": ["highlightableHandler"]
    }; }
};
TabCaption.style = tabCaptionCss;

const tabPageCss = ".gx-line-clamp{display:-webkit-box;-webkit-box-orient:vertical;-webkit-line-clamp:var(--max-lines);overflow:hidden}.line-measuring{visibility:hidden;position:absolute}gx-tab-page{display:-ms-flexbox;display:flex;-ms-flex:1;flex:1;-ms-flex-direction:column;flex-direction:column}gx-tab-page[hidden]{display:none !important}gx-tab-page[hidden][invisible-mode=keep-space]{display:-ms-flexbox !important;display:flex !important;visibility:hidden}gx-tab-page.gx-tab-page{display:none}gx-tab-page.gx-tab-page--active{display:-ms-flexbox;display:flex}";

let autoTabId$1 = 0;
const TabPage = class {
    constructor(hostRef) {
        (0,_index_10623738_js__WEBPACK_IMPORTED_MODULE_0__.r)(this, hostRef);
    }
    componentWillLoad() {
        if (!this.element.id) {
            this.element.id = `gx-tab-page-auto-id-${autoTabId$1++}`;
        }
    }
    render() {
        return ((0,_index_10623738_js__WEBPACK_IMPORTED_MODULE_0__.h)(_index_10623738_js__WEBPACK_IMPORTED_MODULE_0__.H, { role: "tabpanel", tabindex: "0" }, (0,_index_10623738_js__WEBPACK_IMPORTED_MODULE_0__.h)("slot", null)));
    }
    get element() { return (0,_index_10623738_js__WEBPACK_IMPORTED_MODULE_0__.g)(this); }
};
TabPage.style = tabPageCss;




/***/ })

}]);
//# sourceMappingURL=node_modules_genexus_web-controls-library_dist_esm_gx-tab_3_entry_js.js.map